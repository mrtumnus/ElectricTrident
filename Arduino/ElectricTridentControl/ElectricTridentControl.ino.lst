
C:\Users\Elliott\AppData\Local\Temp\arduino_build_579014/ElectricTridentControl.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
__vectors():
       0:	2e c0       	rjmp	.+92     	; 0x5e <__ctors_end>
       2:	52 c0       	rjmp	.+164    	; 0xa8 <__bad_interrupt>
       4:	51 c0       	rjmp	.+162    	; 0xa8 <__bad_interrupt>
       6:	50 c0       	rjmp	.+160    	; 0xa8 <__bad_interrupt>
       8:	4f c0       	rjmp	.+158    	; 0xa8 <__bad_interrupt>
       a:	00 ca       	rjmp	.-3072   	; 0xfffff40c <__eeprom_end+0xff7ef40c>
       c:	4d c0       	rjmp	.+154    	; 0xa8 <__bad_interrupt>
       e:	4c c0       	rjmp	.+152    	; 0xa8 <__bad_interrupt>
      10:	4b c0       	rjmp	.+150    	; 0xa8 <__bad_interrupt>
      12:	4a c0       	rjmp	.+148    	; 0xa8 <__bad_interrupt>
      14:	49 c0       	rjmp	.+146    	; 0xa8 <__bad_interrupt>
      16:	48 c0       	rjmp	.+144    	; 0xa8 <__bad_interrupt>
      18:	47 c0       	rjmp	.+142    	; 0xa8 <__bad_interrupt>
      1a:	46 c0       	rjmp	.+140    	; 0xa8 <__bad_interrupt>
      1c:	45 c0       	rjmp	.+138    	; 0xa8 <__bad_interrupt>
      1e:	2d c3       	rjmp	.+1626   	; 0x67a <doSomething(int)+0x22>
      20:	2c c3       	rjmp	.+1624   	; 0x67a <doSomething(int)+0x22>
      22:	30 c3       	rjmp	.+1632   	; 0x684 <doSomething(int)+0x2c>
      24:	3a c3       	rjmp	.+1652   	; 0x69a <doSomething(int)+0x42>
      26:	4c c3       	rjmp	.+1688   	; 0x6c0 <doSomething(int)+0x68>
      28:	91 c3       	rjmp	.+1826   	; 0x74c <doSomething(int)+0xf4>
      2a:	5b c3       	rjmp	.+1718   	; 0x6e2 <doSomething(int)+0x8a>
      2c:	5c c3       	rjmp	.+1720   	; 0x6e6 <doSomething(int)+0x8e>
      2e:	5e c3       	rjmp	.+1724   	; 0x6ec <doSomething(int)+0x94>
      30:	60 c3       	rjmp	.+1728   	; 0x6f2 <doSomething(int)+0x9a>
      32:	6b c3       	rjmp	.+1750   	; 0x70a <doSomething(int)+0xb2>
      34:	83 c3       	rjmp	.+1798   	; 0x73c <doSomething(int)+0xe4>
      36:	86 c3       	rjmp	.+1804   	; 0x744 <doSomething(int)+0xec>

00000038 <__trampolines_end>:
__trampolines_start():
      38:	01 02       	muls	r16, r17
      3a:	00 00       	nop
      3c:	04 00       	.word	0x0004	; ????

0000003e <digital_pin_to_bit_mask_PGM>:
      3e:	01 02 04 08 10 20                                   ..... 

00000044 <digital_pin_to_port_PGM>:
      44:	02 02 02 02 02 02                                   ......

0000004a <port_to_input_PGM>:
      4a:	00 00 00 00 36 00                                   ....6.

00000050 <port_to_output_PGM>:
      50:	00 00 00 00 38 00                                   ....8.

00000056 <port_to_mode_PGM>:
      56:	00 00 00 00 37 00                                   ....7.

0000005c <__ctors_start>:
__ctors_start():
      5c:	01 09       	sbc	r16, r1

0000005e <__ctors_end>:
__dtors_end():
      5e:	11 24       	eor	r1, r1
      60:	1f be       	out	0x3f, r1	; 63
      62:	cf e5       	ldi	r28, 0x5F	; 95
      64:	d2 e0       	ldi	r29, 0x02	; 2
      66:	de bf       	out	0x3e, r29	; 62
      68:	cd bf       	out	0x3d, r28	; 61

0000006a <__do_copy_data>:
__do_copy_data():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2410
      6a:	10 e0       	ldi	r17, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2411
      6c:	a0 e6       	ldi	r26, 0x60	; 96
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2412
      6e:	b0 e0       	ldi	r27, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2413
      70:	e8 e4       	ldi	r30, 0x48	; 72
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2414
      72:	f9 e1       	ldi	r31, 0x19	; 25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2415
      74:	02 c0       	rjmp	.+4      	; 0x7a <__do_copy_data+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2418
      76:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2423
      78:	0d 92       	st	X+, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2425
      7a:	a8 38       	cpi	r26, 0x88	; 136
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2426
      7c:	b1 07       	cpc	r27, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2427
      7e:	d9 f7       	brne	.-10     	; 0x76 <__do_copy_data+0xc>

00000080 <__do_clear_bss>:
__do_clear_bss():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2442
      80:	20 e0       	ldi	r18, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2443
      82:	a8 e8       	ldi	r26, 0x88	; 136
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2444
      84:	b0 e0       	ldi	r27, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2445
      86:	01 c0       	rjmp	.+2      	; 0x8a <.do_clear_bss_start>

00000088 <.do_clear_bss_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2447
      88:	1d 92       	st	X+, r1

0000008a <.do_clear_bss_start>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2449
      8a:	ac 3f       	cpi	r26, 0xFC	; 252
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2450
      8c:	b2 07       	cpc	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2451
      8e:	e1 f7       	brne	.-8      	; 0x88 <.do_clear_bss_loop>

00000090 <__do_global_ctors>:
__do_global_ctors():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2467
      90:	10 e0       	ldi	r17, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2468
      92:	cf e2       	ldi	r28, 0x2F	; 47
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2469
      94:	d0 e0       	ldi	r29, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2473
      96:	03 c0       	rjmp	.+6      	; 0x9e <__do_global_ctors+0xe>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2475
      98:	21 97       	sbiw	r28, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2481
      9a:	fe 01       	movw	r30, r28
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2482
      9c:	ad db       	rcall	.-2214   	; 0xfffff7f8 <__eeprom_end+0xff7ef7f8>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2484
      9e:	ce 32       	cpi	r28, 0x2E	; 46
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2485
      a0:	d1 07       	cpc	r29, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2490
      a2:	d1 f7       	brne	.-12     	; 0x98 <__do_global_ctors+0x8>
      a4:	9e d9       	rcall	.-3268   	; 0xfffff3e2 <__eeprom_end+0xff7ef3e2>
      a6:	4e cc       	rjmp	.-1892   	; 0xfffff944 <__eeprom_end+0xff7ef944>

000000a8 <__bad_interrupt>:
__vector_1():
      a8:	ab cf       	rjmp	.-170    	; 0x0 <__vectors>

000000aa <CLEDController::size()>:
_ZN14CLEDController4sizeEv():
C:\Users\Elliott\dev\projects\ElectricTrident\Arduino\ElectricTridentControl/ElectricTridentControl.ino:174
        } else {
            leds[i] = CRGB::Black;
        }
    }
    FastLED.show();
    delay(wait);
      aa:	fc 01       	movw	r30, r24
      ac:	85 85       	ldd	r24, Z+13	; 0x0d
      ae:	96 85       	ldd	r25, Z+14	; 0x0e
      b0:	08 95       	ret

000000b2 <CLEDController::clearLeds(int)>:
_ZN14CLEDController9clearLedsEi():
      b2:	cf 93       	push	r28
      b4:	df 93       	push	r29
      b6:	00 d0       	rcall	.+0      	; 0xb8 <CLEDController::clearLeds(int)+0x6>
      b8:	00 d0       	rcall	.+0      	; 0xba <CLEDController::clearLeds(int)+0x8>
      ba:	00 d0       	rcall	.+0      	; 0xbc <CLEDController::clearLeds(int)+0xa>
      bc:	cd b7       	in	r28, 0x3d	; 61
      be:	de b7       	in	r29, 0x3e	; 62
      c0:	ab 01       	movw	r20, r22
_ZN4CRGBC4Em():
      c2:	1c 82       	std	Y+4, r1	; 0x04
      c4:	1d 82       	std	Y+5, r1	; 0x05
      c6:	1e 82       	std	Y+6, r1	; 0x06
_ZN14CLEDController9showColorERK4CRGBih():
      c8:	dc 01       	movw	r26, r24
      ca:	ed 91       	ld	r30, X+
      cc:	fc 91       	ld	r31, X
      ce:	01 90       	ld	r0, Z+
      d0:	f0 81       	ld	r31, Z
      d2:	e0 2d       	mov	r30, r0
_ZN4CRGBC4Ehhh():
      d4:	19 82       	std	Y+1, r1	; 0x01
      d6:	1a 82       	std	Y+2, r1	; 0x02
      d8:	1b 82       	std	Y+3, r1	; 0x03
_ZN14CLEDController9showColorERK4CRGBih():
      da:	9e 01       	movw	r18, r28
      dc:	2f 5f       	subi	r18, 0xFF	; 255
      de:	3f 4f       	sbci	r19, 0xFF	; 255
      e0:	be 01       	movw	r22, r28
      e2:	6c 5f       	subi	r22, 0xFC	; 252
      e4:	7f 4f       	sbci	r23, 0xFF	; 255
      e6:	09 95       	icall
_ZN14CLEDController9clearLedsEi():
      e8:	26 96       	adiw	r28, 0x06	; 6
      ea:	0f b6       	in	r0, 0x3f	; 63
      ec:	f8 94       	cli
      ee:	de bf       	out	0x3e, r29	; 62
      f0:	0f be       	out	0x3f, r0	; 63
      f2:	cd bf       	out	0x3d, r28	; 61
      f4:	df 91       	pop	r29
      f6:	cf 91       	pop	r28
      f8:	08 95       	ret

000000fa <ClocklessController<(unsigned char)0, 6, 8, 6, (EOrder)10, 0, false, 10>::getMaxRefreshRate() const>:
_ZNK19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE17getMaxRefreshRateEv():
      fa:	80 e9       	ldi	r24, 0x90	; 144
      fc:	91 e0       	ldi	r25, 0x01	; 1
      fe:	08 95       	ret

00000100 <ClocklessController<(unsigned char)0, 6, 8, 6, (EOrder)10, 0, false, 10>::init()>:
_ZN7_AVRPINILh0ELh1E18__gen_struct_PORTB17__gen_struct_DDRB17__gen_struct_PINBE9setOutputEv():
     100:	b8 9a       	sbi	0x17, 0	; 23
     102:	08 95       	ret

00000104 <CFastLED::show()>:
_ZN8CFastLED4showEv():
     104:	fc 01       	movw	r30, r24
     106:	60 81       	ld	r22, Z
     108:	78 c7       	rjmp	.+3824   	; 0xffa <CFastLED::show(unsigned char)>

0000010a <setup>:
setup():
     10a:	60 e0       	ldi	r22, 0x00	; 0
     10c:	81 e0       	ldi	r24, 0x01	; 1
     10e:	5b da       	rcall	.-2890   	; 0xfffff5c6 <__eeprom_end+0xff7ef5c6>
_ZN8CFastLED7addLedsI6WS2811Lh0EEER14CLEDControllerP4CRGBii():
     110:	80 91 94 00 	lds	r24, 0x0094	; 0x800094 <guard variable for CLEDController& CFastLED::addLeds<WS2811, (unsigned char)0>(CRGB*, int, int)::c>
     114:	81 11       	cpse	r24, r1
     116:	45 c0       	rjmp	.+138    	; 0x1a2 <setup+0x98>
_ZN14CLEDControllerC4Ev():
     118:	10 92 9f 00 	sts	0x009F, r1	; 0x80009f <CLEDController& CFastLED::addLeds<WS2811, (unsigned char)0>(CRGB*, int, int)::c+0x3>
     11c:	10 92 9e 00 	sts	0x009E, r1	; 0x80009e <CLEDController& CFastLED::addLeds<WS2811, (unsigned char)0>(CRGB*, int, int)::c+0x2>
_ZN4CRGBC4E18LEDColorCorrection():
     120:	8f ef       	ldi	r24, 0xFF	; 255
     122:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <CLEDController& CFastLED::addLeds<WS2811, (unsigned char)0>(CRGB*, int, int)::c+0x6>
     126:	80 93 a3 00 	sts	0x00A3, r24	; 0x8000a3 <CLEDController& CFastLED::addLeds<WS2811, (unsigned char)0>(CRGB*, int, int)::c+0x7>
     12a:	80 93 a4 00 	sts	0x00A4, r24	; 0x8000a4 <CLEDController& CFastLED::addLeds<WS2811, (unsigned char)0>(CRGB*, int, int)::c+0x8>
_ZN4CRGBC4E16ColorTemperature():
     12e:	80 93 a5 00 	sts	0x00A5, r24	; 0x8000a5 <CLEDController& CFastLED::addLeds<WS2811, (unsigned char)0>(CRGB*, int, int)::c+0x9>
     132:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <CLEDController& CFastLED::addLeds<WS2811, (unsigned char)0>(CRGB*, int, int)::c+0xa>
     136:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <CLEDController& CFastLED::addLeds<WS2811, (unsigned char)0>(CRGB*, int, int)::c+0xb>
_ZN14CLEDControllerC4Ev():
     13a:	81 e0       	ldi	r24, 0x01	; 1
     13c:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <CLEDController& CFastLED::addLeds<WS2811, (unsigned char)0>(CRGB*, int, int)::c+0xc>
     140:	10 92 aa 00 	sts	0x00AA, r1	; 0x8000aa <CLEDController& CFastLED::addLeds<WS2811, (unsigned char)0>(CRGB*, int, int)::c+0xe>
     144:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <CLEDController& CFastLED::addLeds<WS2811, (unsigned char)0>(CRGB*, int, int)::c+0xd>
     148:	10 92 a1 00 	sts	0x00A1, r1	; 0x8000a1 <CLEDController& CFastLED::addLeds<WS2811, (unsigned char)0>(CRGB*, int, int)::c+0x5>
     14c:	10 92 a0 00 	sts	0x00A0, r1	; 0x8000a0 <CLEDController& CFastLED::addLeds<WS2811, (unsigned char)0>(CRGB*, int, int)::c+0x4>
     150:	80 91 e4 00 	lds	r24, 0x00E4	; 0x8000e4 <CLEDController::m_pHead>
     154:	90 91 e5 00 	lds	r25, 0x00E5	; 0x8000e5 <CLEDController::m_pHead+0x1>
     158:	89 2b       	or	r24, r25
     15a:	31 f4       	brne	.+12     	; 0x168 <setup+0x5e>
     15c:	8c e9       	ldi	r24, 0x9C	; 156
     15e:	90 e0       	ldi	r25, 0x00	; 0
     160:	90 93 e5 00 	sts	0x00E5, r25	; 0x8000e5 <CLEDController::m_pHead+0x1>
     164:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <CLEDController::m_pHead>
     168:	e0 91 e2 00 	lds	r30, 0x00E2	; 0x8000e2 <CLEDController::m_pTail>
     16c:	f0 91 e3 00 	lds	r31, 0x00E3	; 0x8000e3 <CLEDController::m_pTail+0x1>
     170:	30 97       	sbiw	r30, 0x00	; 0
     172:	21 f0       	breq	.+8      	; 0x17c <setup+0x72>
     174:	8c e9       	ldi	r24, 0x9C	; 156
     176:	90 e0       	ldi	r25, 0x00	; 0
     178:	95 83       	std	Z+5, r25	; 0x05
     17a:	84 83       	std	Z+4, r24	; 0x04
     17c:	8c e9       	ldi	r24, 0x9C	; 156
     17e:	90 e0       	ldi	r25, 0x00	; 0
     180:	90 93 e3 00 	sts	0x00E3, r25	; 0x8000e3 <CLEDController::m_pTail+0x1>
     184:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <CLEDController::m_pTail>
_ZN8CMinWaitILi10EEC4Ev():
     188:	10 92 ac 00 	sts	0x00AC, r1	; 0x8000ac <CLEDController& CFastLED::addLeds<WS2811, (unsigned char)0>(CRGB*, int, int)::c+0x10>
     18c:	10 92 ab 00 	sts	0x00AB, r1	; 0x8000ab <CLEDController& CFastLED::addLeds<WS2811, (unsigned char)0>(CRGB*, int, int)::c+0xf>
_ZN6WS2811ILh0EL6EOrder10EEC4Ev():
     190:	8a e6       	ldi	r24, 0x6A	; 106
     192:	90 e0       	ldi	r25, 0x00	; 0
     194:	90 93 9d 00 	sts	0x009D, r25	; 0x80009d <CLEDController& CFastLED::addLeds<WS2811, (unsigned char)0>(CRGB*, int, int)::c+0x1>
     198:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <CLEDController& CFastLED::addLeds<WS2811, (unsigned char)0>(CRGB*, int, int)::c>
_ZN8CFastLED7addLedsI6WS2811Lh0EEER14CLEDControllerP4CRGBii():
     19c:	81 e0       	ldi	r24, 0x01	; 1
     19e:	80 93 94 00 	sts	0x0094, r24	; 0x800094 <guard variable for CLEDController& CFastLED::addLeds<WS2811, (unsigned char)0>(CRGB*, int, int)::c>
     1a2:	20 e0       	ldi	r18, 0x00	; 0
     1a4:	30 e0       	ldi	r19, 0x00	; 0
     1a6:	4a e0       	ldi	r20, 0x0A	; 10
     1a8:	50 e0       	ldi	r21, 0x00	; 0
     1aa:	65 eb       	ldi	r22, 0xB5	; 181
     1ac:	70 e0       	ldi	r23, 0x00	; 0
     1ae:	8c e9       	ldi	r24, 0x9C	; 156
     1b0:	90 e0       	ldi	r25, 0x00	; 0
     1b2:	ed c7       	rjmp	.+4058   	; 0x118e <CFastLED::addLeds(CLEDController*, CRGB*, int, int)>

000001b4 <colorWipe(CRGB, unsigned char)>:
_Z9colorWipe4CRGBh():
     1b4:	cf 93       	push	r28
     1b6:	fc 01       	movw	r30, r24
     1b8:	c6 2f       	mov	r28, r22
     1ba:	80 91 ad 00 	lds	r24, 0x00AD	; 0x8000ad <guard variable for colorWipe(CRGB, unsigned char)::latchedColor>
     1be:	81 11       	cpse	r24, r1
     1c0:	0c c0       	rjmp	.+24     	; 0x1da <colorWipe(CRGB, unsigned char)+0x26>
_ZN4CRGBC4ERKS_():
     1c2:	80 81       	ld	r24, Z
     1c4:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <colorWipe(CRGB, unsigned char)::latchedColor>
     1c8:	81 81       	ldd	r24, Z+1	; 0x01
     1ca:	80 93 8d 00 	sts	0x008D, r24	; 0x80008d <colorWipe(CRGB, unsigned char)::latchedColor+0x1>
     1ce:	82 81       	ldd	r24, Z+2	; 0x02
     1d0:	80 93 8e 00 	sts	0x008E, r24	; 0x80008e <colorWipe(CRGB, unsigned char)::latchedColor+0x2>
_Z9colorWipe4CRGBh():
     1d4:	81 e0       	ldi	r24, 0x01	; 1
     1d6:	80 93 ad 00 	sts	0x00AD, r24	; 0x8000ad <guard variable for colorWipe(CRGB, unsigned char)::latchedColor>
     1da:	80 91 d3 00 	lds	r24, 0x00D3	; 0x8000d3 <counter>
     1de:	90 91 d4 00 	lds	r25, 0x00D4	; 0x8000d4 <counter+0x1>
     1e2:	0b 97       	sbiw	r24, 0x0b	; 11
     1e4:	6c f0       	brlt	.+26     	; 0x200 <colorWipe(CRGB, unsigned char)+0x4c>
     1e6:	10 92 d4 00 	sts	0x00D4, r1	; 0x8000d4 <counter+0x1>
     1ea:	10 92 d3 00 	sts	0x00D3, r1	; 0x8000d3 <counter>
_ZN4CRGBaSERKS_():
     1ee:	80 81       	ld	r24, Z
     1f0:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <colorWipe(CRGB, unsigned char)::latchedColor>
     1f4:	81 81       	ldd	r24, Z+1	; 0x01
     1f6:	80 93 8d 00 	sts	0x008D, r24	; 0x80008d <colorWipe(CRGB, unsigned char)::latchedColor+0x1>
     1fa:	82 81       	ldd	r24, Z+2	; 0x02
     1fc:	80 93 8e 00 	sts	0x008E, r24	; 0x80008e <colorWipe(CRGB, unsigned char)::latchedColor+0x2>
     200:	80 91 d3 00 	lds	r24, 0x00D3	; 0x8000d3 <counter>
     204:	90 91 d4 00 	lds	r25, 0x00D4	; 0x8000d4 <counter+0x1>
     208:	63 e0       	ldi	r22, 0x03	; 3
     20a:	70 e0       	ldi	r23, 0x00	; 0
     20c:	66 da       	rcall	.-2868   	; 0xfffff6da <__eeprom_end+0xff7ef6da>
     20e:	fc 01       	movw	r30, r24
     210:	eb 54       	subi	r30, 0x4B	; 75
     212:	ff 4f       	sbci	r31, 0xFF	; 255
     214:	80 91 8c 00 	lds	r24, 0x008C	; 0x80008c <colorWipe(CRGB, unsigned char)::latchedColor>
     218:	80 83       	st	Z, r24
     21a:	80 91 8d 00 	lds	r24, 0x008D	; 0x80008d <colorWipe(CRGB, unsigned char)::latchedColor+0x1>
     21e:	81 83       	std	Z+1, r24	; 0x01
     220:	80 91 8e 00 	lds	r24, 0x008E	; 0x80008e <colorWipe(CRGB, unsigned char)::latchedColor+0x2>
     224:	82 83       	std	Z+2, r24	; 0x02
_Z9colorWipe4CRGBh():
     226:	86 ee       	ldi	r24, 0xE6	; 230
     228:	90 e0       	ldi	r25, 0x00	; 0
     22a:	6c df       	rcall	.-296    	; 0x104 <CFastLED::show()>
     22c:	6c 2f       	mov	r22, r28
     22e:	70 e0       	ldi	r23, 0x00	; 0
     230:	80 e0       	ldi	r24, 0x00	; 0
     232:	90 e0       	ldi	r25, 0x00	; 0
     234:	cf 91       	pop	r28
     236:	66 c9       	rjmp	.-3380   	; 0xfffff504 <__eeprom_end+0xff7ef504>

00000238 <colorFill(CRGB, unsigned char)>:
_Z9colorFill4CRGBh():
     238:	cf 93       	push	r28
     23a:	fc 01       	movw	r30, r24
     23c:	c6 2f       	mov	r28, r22
_ZN4CRGBaSERKS_():
     23e:	20 81       	ld	r18, Z
     240:	91 81       	ldd	r25, Z+1	; 0x01
     242:	82 81       	ldd	r24, Z+2	; 0x02
     244:	e5 eb       	ldi	r30, 0xB5	; 181
     246:	f0 e0       	ldi	r31, 0x00	; 0
     248:	20 83       	st	Z, r18
     24a:	91 83       	std	Z+1, r25	; 0x01
     24c:	82 83       	std	Z+2, r24	; 0x02
     24e:	33 96       	adiw	r30, 0x03	; 3
_Z9colorFill4CRGBh():
     250:	30 e0       	ldi	r19, 0x00	; 0
     252:	e3 3d       	cpi	r30, 0xD3	; 211
     254:	f3 07       	cpc	r31, r19
     256:	c1 f7       	brne	.-16     	; 0x248 <colorFill(CRGB, unsigned char)+0x10>
     258:	86 ee       	ldi	r24, 0xE6	; 230
     25a:	90 e0       	ldi	r25, 0x00	; 0
     25c:	53 df       	rcall	.-346    	; 0x104 <CFastLED::show()>
     25e:	6c 2f       	mov	r22, r28
     260:	70 e0       	ldi	r23, 0x00	; 0
     262:	80 e0       	ldi	r24, 0x00	; 0
     264:	90 e0       	ldi	r25, 0x00	; 0
     266:	cf 91       	pop	r28
     268:	4d c9       	rjmp	.-3430   	; 0xfffff504 <__eeprom_end+0xff7ef504>

0000026a <Wheel(unsigned char)>:
_Z5Wheelh():
     26a:	0f 93       	push	r16
     26c:	1f 93       	push	r17
     26e:	cf 93       	push	r28
     270:	df 93       	push	r29
     272:	00 d0       	rcall	.+0      	; 0x274 <Wheel(unsigned char)+0xa>
     274:	1f 92       	push	r1
     276:	cd b7       	in	r28, 0x3d	; 61
     278:	de b7       	in	r29, 0x3e	; 62
     27a:	8c 01       	movw	r16, r24
_ZN4CHSVC4Ehhh():
     27c:	69 83       	std	Y+1, r22	; 0x01
     27e:	8f ef       	ldi	r24, 0xFF	; 255
     280:	8a 83       	std	Y+2, r24	; 0x02
     282:	8b 83       	std	Y+3, r24	; 0x03
_ZN4CRGBC4ERK4CHSV():
     284:	b8 01       	movw	r22, r16
     286:	ce 01       	movw	r24, r28
     288:	01 96       	adiw	r24, 0x01	; 1
     28a:	be d7       	rcall	.+3964   	; 0x1208 <hsv2rgb_rainbow(CHSV const&, CRGB&)>
_Z5Wheelh():
     28c:	c8 01       	movw	r24, r16
     28e:	0f 90       	pop	r0
     290:	0f 90       	pop	r0
     292:	0f 90       	pop	r0
     294:	df 91       	pop	r29
     296:	cf 91       	pop	r28
     298:	1f 91       	pop	r17
     29a:	0f 91       	pop	r16
     29c:	08 95       	ret

0000029e <rainbow(unsigned char)>:
_Z7rainbowh():
     29e:	ef 92       	push	r14
     2a0:	ff 92       	push	r15
     2a2:	0f 93       	push	r16
     2a4:	1f 93       	push	r17
     2a6:	cf 93       	push	r28
     2a8:	df 93       	push	r29
     2aa:	00 d0       	rcall	.+0      	; 0x2ac <rainbow(unsigned char)+0xe>
     2ac:	1f 92       	push	r1
     2ae:	cd b7       	in	r28, 0x3d	; 61
     2b0:	de b7       	in	r29, 0x3e	; 62
     2b2:	e8 2e       	mov	r14, r24
     2b4:	05 eb       	ldi	r16, 0xB5	; 181
     2b6:	10 e0       	ldi	r17, 0x00	; 0
     2b8:	f1 2c       	mov	r15, r1
     2ba:	60 91 d3 00 	lds	r22, 0x00D3	; 0x8000d3 <counter>
     2be:	6f 0d       	add	r22, r15
     2c0:	ce 01       	movw	r24, r28
     2c2:	01 96       	adiw	r24, 0x01	; 1
     2c4:	d2 df       	rcall	.-92     	; 0x26a <Wheel(unsigned char)>
_ZN4CRGBaSERKS_():
     2c6:	89 81       	ldd	r24, Y+1	; 0x01
     2c8:	f8 01       	movw	r30, r16
     2ca:	80 83       	st	Z, r24
     2cc:	8a 81       	ldd	r24, Y+2	; 0x02
     2ce:	81 83       	std	Z+1, r24	; 0x01
     2d0:	8b 81       	ldd	r24, Y+3	; 0x03
     2d2:	82 83       	std	Z+2, r24	; 0x02
     2d4:	f3 94       	inc	r15
     2d6:	0d 5f       	subi	r16, 0xFD	; 253
     2d8:	1f 4f       	sbci	r17, 0xFF	; 255
_Z7rainbowh():
     2da:	fa e0       	ldi	r31, 0x0A	; 10
     2dc:	ff 12       	cpse	r15, r31
     2de:	ed cf       	rjmp	.-38     	; 0x2ba <rainbow(unsigned char)+0x1c>
     2e0:	86 ee       	ldi	r24, 0xE6	; 230
     2e2:	90 e0       	ldi	r25, 0x00	; 0
     2e4:	0f df       	rcall	.-482    	; 0x104 <CFastLED::show()>
     2e6:	6e 2d       	mov	r22, r14
     2e8:	70 e0       	ldi	r23, 0x00	; 0
     2ea:	80 e0       	ldi	r24, 0x00	; 0
     2ec:	90 e0       	ldi	r25, 0x00	; 0
     2ee:	0a d9       	rcall	.-3564   	; 0xfffff504 <__eeprom_end+0xff7ef504>
     2f0:	0f 90       	pop	r0
     2f2:	0f 90       	pop	r0
     2f4:	0f 90       	pop	r0
     2f6:	df 91       	pop	r29
     2f8:	cf 91       	pop	r28
     2fa:	1f 91       	pop	r17
     2fc:	0f 91       	pop	r16
     2fe:	ff 90       	pop	r15
     300:	ef 90       	pop	r14
     302:	08 95       	ret

00000304 <rainbowCycle(unsigned char)>:
_Z12rainbowCycleh():
     304:	af 92       	push	r10
     306:	bf 92       	push	r11
     308:	df 92       	push	r13
     30a:	ef 92       	push	r14
     30c:	ff 92       	push	r15
     30e:	0f 93       	push	r16
     310:	1f 93       	push	r17
     312:	cf 93       	push	r28
     314:	df 93       	push	r29
     316:	00 d0       	rcall	.+0      	; 0x318 <rainbowCycle(unsigned char)+0x14>
     318:	1f 92       	push	r1
     31a:	cd b7       	in	r28, 0x3d	; 61
     31c:	de b7       	in	r29, 0x3e	; 62
     31e:	d8 2e       	mov	r13, r24
     320:	05 eb       	ldi	r16, 0xB5	; 181
     322:	10 e0       	ldi	r17, 0x00	; 0
     324:	e1 2c       	mov	r14, r1
     326:	f1 2c       	mov	r15, r1
     328:	8a e0       	ldi	r24, 0x0A	; 10
     32a:	a8 2e       	mov	r10, r24
     32c:	b1 2c       	mov	r11, r1
     32e:	c7 01       	movw	r24, r14
     330:	b5 01       	movw	r22, r10
     332:	11 da       	rcall	.-3038   	; 0xfffff756 <__eeprom_end+0xff7ef756>
     334:	80 91 d3 00 	lds	r24, 0x00D3	; 0x8000d3 <counter>
     338:	68 0f       	add	r22, r24
     33a:	ce 01       	movw	r24, r28
     33c:	01 96       	adiw	r24, 0x01	; 1
     33e:	95 df       	rcall	.-214    	; 0x26a <Wheel(unsigned char)>
_ZN4CRGBaSERKS_():
     340:	89 81       	ldd	r24, Y+1	; 0x01
     342:	f8 01       	movw	r30, r16
     344:	80 83       	st	Z, r24
     346:	8a 81       	ldd	r24, Y+2	; 0x02
     348:	81 83       	std	Z+1, r24	; 0x01
     34a:	8b 81       	ldd	r24, Y+3	; 0x03
     34c:	82 83       	std	Z+2, r24	; 0x02
     34e:	f3 94       	inc	r15
     350:	0d 5f       	subi	r16, 0xFD	; 253
     352:	1f 4f       	sbci	r17, 0xFF	; 255
_Z12rainbowCycleh():
     354:	e1 14       	cp	r14, r1
     356:	8a e0       	ldi	r24, 0x0A	; 10
     358:	f8 06       	cpc	r15, r24
     35a:	49 f7       	brne	.-46     	; 0x32e <rainbowCycle(unsigned char)+0x2a>
     35c:	86 ee       	ldi	r24, 0xE6	; 230
     35e:	90 e0       	ldi	r25, 0x00	; 0
     360:	d1 de       	rcall	.-606    	; 0x104 <CFastLED::show()>
     362:	6d 2d       	mov	r22, r13
     364:	70 e0       	ldi	r23, 0x00	; 0
     366:	80 e0       	ldi	r24, 0x00	; 0
     368:	90 e0       	ldi	r25, 0x00	; 0
     36a:	cc d8       	rcall	.-3688   	; 0xfffff504 <__eeprom_end+0xff7ef504>
     36c:	0f 90       	pop	r0
     36e:	0f 90       	pop	r0
     370:	0f 90       	pop	r0
     372:	df 91       	pop	r29
     374:	cf 91       	pop	r28
     376:	1f 91       	pop	r17
     378:	0f 91       	pop	r16
     37a:	ff 90       	pop	r15
     37c:	ef 90       	pop	r14
     37e:	df 90       	pop	r13
     380:	bf 90       	pop	r11
     382:	af 90       	pop	r10
     384:	08 95       	ret

00000386 <twinkle(CRGB, CRGB, int)>:
_Z7twinkle4CRGBS_i():
     386:	8f 92       	push	r8
     388:	9f 92       	push	r9
     38a:	af 92       	push	r10
     38c:	bf 92       	push	r11
     38e:	cf 92       	push	r12
     390:	df 92       	push	r13
     392:	ef 92       	push	r14
     394:	ff 92       	push	r15
     396:	0f 93       	push	r16
     398:	1f 93       	push	r17
     39a:	cf 93       	push	r28
     39c:	df 93       	push	r29
     39e:	00 d0       	rcall	.+0      	; 0x3a0 <twinkle(CRGB, CRGB, int)+0x1a>
     3a0:	1f 92       	push	r1
     3a2:	cd b7       	in	r28, 0x3d	; 61
     3a4:	de b7       	in	r29, 0x3e	; 62
     3a6:	8c 01       	movw	r16, r24
     3a8:	6b 01       	movw	r12, r22
     3aa:	7a 01       	movw	r14, r20
     3ac:	6a e0       	ldi	r22, 0x0A	; 10
     3ae:	70 e0       	ldi	r23, 0x00	; 0
     3b0:	80 e0       	ldi	r24, 0x00	; 0
     3b2:	90 e0       	ldi	r25, 0x00	; 0
     3b4:	dd d7       	rcall	.+4026   	; 0x1370 <random(long)>
_ZN4CRGBaSERKS_():
     3b6:	cb 01       	movw	r24, r22
     3b8:	63 e0       	ldi	r22, 0x03	; 3
     3ba:	70 e0       	ldi	r23, 0x00	; 0
     3bc:	8e d9       	rcall	.-3300   	; 0xfffff6da <__eeprom_end+0xff7ef6da>
     3be:	8b 54       	subi	r24, 0x4B	; 75
     3c0:	9f 4f       	sbci	r25, 0xFF	; 255
     3c2:	f6 01       	movw	r30, r12
     3c4:	20 81       	ld	r18, Z
     3c6:	fc 01       	movw	r30, r24
     3c8:	20 83       	st	Z, r18
     3ca:	cf 01       	movw	r24, r30
     3cc:	f6 01       	movw	r30, r12
     3ce:	21 81       	ldd	r18, Z+1	; 0x01
     3d0:	fc 01       	movw	r30, r24
     3d2:	21 83       	std	Z+1, r18	; 0x01
     3d4:	cf 01       	movw	r24, r30
     3d6:	f6 01       	movw	r30, r12
     3d8:	22 81       	ldd	r18, Z+2	; 0x02
     3da:	fc 01       	movw	r30, r24
     3dc:	22 83       	std	Z+2, r18	; 0x02
_Z7twinkle4CRGBS_i():
     3de:	86 ee       	ldi	r24, 0xE6	; 230
     3e0:	90 e0       	ldi	r25, 0x00	; 0
     3e2:	90 de       	rcall	.-736    	; 0x104 <CFastLED::show()>
     3e4:	b7 01       	movw	r22, r14
     3e6:	ff 0c       	add	r15, r15
     3e8:	88 0b       	sbc	r24, r24
     3ea:	99 0b       	sbc	r25, r25
     3ec:	8b d8       	rcall	.-3818   	; 0xfffff504 <__eeprom_end+0xff7ef504>
     3ee:	24 ef       	ldi	r18, 0xF4	; 244
     3f0:	31 e0       	ldi	r19, 0x01	; 1
     3f2:	40 e0       	ldi	r20, 0x00	; 0
     3f4:	50 e0       	ldi	r21, 0x00	; 0
     3f6:	6e e1       	ldi	r22, 0x1E	; 30
     3f8:	70 e0       	ldi	r23, 0x00	; 0
     3fa:	80 e0       	ldi	r24, 0x00	; 0
     3fc:	90 e0       	ldi	r25, 0x00	; 0
     3fe:	d0 d7       	rcall	.+4000   	; 0x13a0 <random(long, long)>
_ZN4CRGBC4ERKS_():
     400:	f8 01       	movw	r30, r16
     402:	80 81       	ld	r24, Z
     404:	89 83       	std	Y+1, r24	; 0x01
     406:	81 81       	ldd	r24, Z+1	; 0x01
     408:	8a 83       	std	Y+2, r24	; 0x02
     40a:	82 81       	ldd	r24, Z+2	; 0x02
     40c:	8b 83       	std	Y+3, r24	; 0x03
_Z7twinkle4CRGBS_i():
     40e:	ce 01       	movw	r24, r28
     410:	01 96       	adiw	r24, 0x01	; 1
     412:	12 df       	rcall	.-476    	; 0x238 <colorFill(CRGB, unsigned char)>
     414:	0f 90       	pop	r0
     416:	0f 90       	pop	r0
     418:	0f 90       	pop	r0
     41a:	df 91       	pop	r29
     41c:	cf 91       	pop	r28
     41e:	1f 91       	pop	r17
     420:	0f 91       	pop	r16
     422:	ff 90       	pop	r15
     424:	ef 90       	pop	r14
     426:	df 90       	pop	r13
     428:	cf 90       	pop	r12
     42a:	bf 90       	pop	r11
     42c:	af 90       	pop	r10
     42e:	9f 90       	pop	r9
     430:	8f 90       	pop	r8
     432:	08 95       	ret

00000434 <randomize(int, int, int, int, int)>:
_Z9randomizeiiiii():
     434:	2f 92       	push	r2
     436:	3f 92       	push	r3
     438:	4f 92       	push	r4
     43a:	5f 92       	push	r5
     43c:	6f 92       	push	r6
     43e:	7f 92       	push	r7
     440:	8f 92       	push	r8
     442:	9f 92       	push	r9
     444:	af 92       	push	r10
     446:	bf 92       	push	r11
     448:	cf 92       	push	r12
     44a:	df 92       	push	r13
     44c:	ef 92       	push	r14
     44e:	ff 92       	push	r15
     450:	0f 93       	push	r16
     452:	1f 93       	push	r17
     454:	cf 93       	push	r28
     456:	df 93       	push	r29
     458:	cd b7       	in	r28, 0x3d	; 61
     45a:	de b7       	in	r29, 0x3e	; 62
     45c:	28 97       	sbiw	r28, 0x08	; 8
     45e:	0f b6       	in	r0, 0x3f	; 63
     460:	f8 94       	cli
     462:	de bf       	out	0x3e, r29	; 62
     464:	0f be       	out	0x3f, r0	; 63
     466:	cd bf       	out	0x3d, r28	; 61
     468:	18 01       	movw	r2, r16
     46a:	05 eb       	ldi	r16, 0xB5	; 181
     46c:	10 e0       	ldi	r17, 0x00	; 0
     46e:	29 01       	movw	r4, r18
     470:	33 0f       	add	r19, r19
     472:	66 08       	sbc	r6, r6
     474:	77 08       	sbc	r7, r7
     476:	4a 01       	movw	r8, r20
     478:	55 0f       	add	r21, r21
     47a:	aa 08       	sbc	r10, r10
     47c:	bb 08       	sbc	r11, r11
     47e:	9b 01       	movw	r18, r22
     480:	77 0f       	add	r23, r23
     482:	44 0b       	sbc	r20, r20
     484:	55 0b       	sbc	r21, r21
     486:	2d 83       	std	Y+5, r18	; 0x05
     488:	3e 83       	std	Y+6, r19	; 0x06
     48a:	4f 83       	std	Y+7, r20	; 0x07
     48c:	58 87       	std	Y+8, r21	; 0x08
     48e:	6c 01       	movw	r12, r24
     490:	99 0f       	add	r25, r25
     492:	ee 08       	sbc	r14, r14
     494:	ff 08       	sbc	r15, r15
     496:	a3 01       	movw	r20, r6
     498:	92 01       	movw	r18, r4
     49a:	c5 01       	movw	r24, r10
     49c:	b4 01       	movw	r22, r8
     49e:	80 d7       	rcall	.+3840   	; 0x13a0 <random(long, long)>
     4a0:	6c 83       	std	Y+4, r22	; 0x04
     4a2:	2d 81       	ldd	r18, Y+5	; 0x05
     4a4:	3e 81       	ldd	r19, Y+6	; 0x06
     4a6:	4f 81       	ldd	r20, Y+7	; 0x07
     4a8:	58 85       	ldd	r21, Y+8	; 0x08
     4aa:	c7 01       	movw	r24, r14
     4ac:	b6 01       	movw	r22, r12
     4ae:	78 d7       	rcall	.+3824   	; 0x13a0 <random(long, long)>
_ZN4CHSVC4Ehhh():
     4b0:	69 83       	std	Y+1, r22	; 0x01
     4b2:	3f ef       	ldi	r19, 0xFF	; 255
     4b4:	3a 83       	std	Y+2, r19	; 0x02
     4b6:	4c 81       	ldd	r20, Y+4	; 0x04
     4b8:	4b 83       	std	Y+3, r20	; 0x03
_ZN4CRGBaSERK4CHSV():
     4ba:	b8 01       	movw	r22, r16
     4bc:	ce 01       	movw	r24, r28
     4be:	01 96       	adiw	r24, 0x01	; 1
     4c0:	a3 d6       	rcall	.+3398   	; 0x1208 <hsv2rgb_rainbow(CHSV const&, CRGB&)>
     4c2:	0d 5f       	subi	r16, 0xFD	; 253
     4c4:	1f 4f       	sbci	r17, 0xFF	; 255
_Z9randomizeiiiii():
     4c6:	50 e0       	ldi	r21, 0x00	; 0
     4c8:	03 3d       	cpi	r16, 0xD3	; 211
     4ca:	15 07       	cpc	r17, r21
     4cc:	21 f7       	brne	.-56     	; 0x496 <randomize(int, int, int, int, int)+0x62>
     4ce:	86 ee       	ldi	r24, 0xE6	; 230
     4d0:	90 e0       	ldi	r25, 0x00	; 0
     4d2:	18 de       	rcall	.-976    	; 0x104 <CFastLED::show()>
     4d4:	b1 01       	movw	r22, r2
     4d6:	33 0c       	add	r3, r3
     4d8:	88 0b       	sbc	r24, r24
     4da:	99 0b       	sbc	r25, r25
     4dc:	13 d8       	rcall	.-4058   	; 0xfffff504 <__eeprom_end+0xff7ef504>
     4de:	28 96       	adiw	r28, 0x08	; 8
     4e0:	0f b6       	in	r0, 0x3f	; 63
     4e2:	f8 94       	cli
     4e4:	de bf       	out	0x3e, r29	; 62
     4e6:	0f be       	out	0x3f, r0	; 63
     4e8:	cd bf       	out	0x3d, r28	; 61
     4ea:	df 91       	pop	r29
     4ec:	cf 91       	pop	r28
     4ee:	1f 91       	pop	r17
     4f0:	0f 91       	pop	r16
     4f2:	ff 90       	pop	r15
     4f4:	ef 90       	pop	r14
     4f6:	df 90       	pop	r13
     4f8:	cf 90       	pop	r12
     4fa:	bf 90       	pop	r11
     4fc:	af 90       	pop	r10
     4fe:	9f 90       	pop	r9
     500:	8f 90       	pop	r8
     502:	7f 90       	pop	r7
     504:	6f 90       	pop	r6
     506:	5f 90       	pop	r5
     508:	4f 90       	pop	r4
     50a:	3f 90       	pop	r3
     50c:	2f 90       	pop	r2
     50e:	08 95       	ret

00000510 <sineFirefly(int)>:
_Z11sineFireflyi():
     510:	0f 93       	push	r16
     512:	1f 93       	push	r17
     514:	cf 93       	push	r28
     516:	df 93       	push	r29
     518:	00 d0       	rcall	.+0      	; 0x51a <sineFirefly(int)+0xa>
     51a:	1f 92       	push	r1
     51c:	cd b7       	in	r28, 0x3d	; 61
     51e:	de b7       	in	r29, 0x3e	; 62
     520:	8c 01       	movw	r16, r24
     522:	80 91 d3 00 	lds	r24, 0x00D3	; 0x8000d3 <counter>
     526:	90 91 d4 00 	lds	r25, 0x00D4	; 0x8000d4 <counter+0x1>
     52a:	80 31       	cpi	r24, 0x10	; 16
     52c:	91 05       	cpc	r25, r1
     52e:	e8 f4       	brcc	.+58     	; 0x56a <sineFirefly(int)+0x5a>
     530:	fc 01       	movw	r30, r24
     532:	e8 58       	subi	r30, 0x88	; 136
     534:	ff 4f       	sbci	r31, 0xFF	; 255
     536:	80 81       	ld	r24, Z
_ZN4CHSVC4Ehhh():
     538:	89 83       	std	Y+1, r24	; 0x01
     53a:	8a 83       	std	Y+2, r24	; 0x02
     53c:	8b 83       	std	Y+3, r24	; 0x03
_Z11sineFireflyi():
     53e:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <sineFirefly(int)::myPix>
     542:	90 91 8b 00 	lds	r25, 0x008B	; 0x80008b <sineFirefly(int)::myPix+0x1>
     546:	63 e0       	ldi	r22, 0x03	; 3
     548:	70 e0       	ldi	r23, 0x00	; 0
     54a:	c7 d8       	rcall	.-3698   	; 0xfffff6da <__eeprom_end+0xff7ef6da>
     54c:	bc 01       	movw	r22, r24
     54e:	6b 54       	subi	r22, 0x4B	; 75
     550:	7f 4f       	sbci	r23, 0xFF	; 255
_ZN4CRGBaSERK4CHSV():
     552:	ce 01       	movw	r24, r28
     554:	01 96       	adiw	r24, 0x01	; 1
     556:	58 d6       	rcall	.+3248   	; 0x1208 <hsv2rgb_rainbow(CHSV const&, CRGB&)>
_Z11sineFireflyi():
     558:	86 ee       	ldi	r24, 0xE6	; 230
     55a:	90 e0       	ldi	r25, 0x00	; 0
     55c:	d3 dd       	rcall	.-1114   	; 0x104 <CFastLED::show()>
     55e:	b8 01       	movw	r22, r16
     560:	11 0f       	add	r17, r17
     562:	88 0b       	sbc	r24, r24
     564:	99 0b       	sbc	r25, r25
     566:	ce d7       	rcall	.+3996   	; 0x1504 <delay>
     568:	17 c0       	rjmp	.+46     	; 0x598 <sineFirefly(int)+0x88>
     56a:	2a e0       	ldi	r18, 0x0A	; 10
     56c:	30 e0       	ldi	r19, 0x00	; 0
     56e:	40 e0       	ldi	r20, 0x00	; 0
     570:	50 e0       	ldi	r21, 0x00	; 0
     572:	60 e0       	ldi	r22, 0x00	; 0
     574:	70 e0       	ldi	r23, 0x00	; 0
     576:	cb 01       	movw	r24, r22
     578:	13 d7       	rcall	.+3622   	; 0x13a0 <random(long, long)>
     57a:	70 93 8b 00 	sts	0x008B, r23	; 0x80008b <sineFirefly(int)::myPix+0x1>
     57e:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <sineFirefly(int)::myPix>
     582:	10 92 d4 00 	sts	0x00D4, r1	; 0x8000d4 <counter+0x1>
     586:	10 92 d3 00 	sts	0x00D3, r1	; 0x8000d3 <counter>
_ZN4CRGBC4Em():
     58a:	19 82       	std	Y+1, r1	; 0x01
     58c:	1a 82       	std	Y+2, r1	; 0x02
     58e:	1b 82       	std	Y+3, r1	; 0x03
_Z11sineFireflyi():
     590:	60 e0       	ldi	r22, 0x00	; 0
     592:	ce 01       	movw	r24, r28
     594:	01 96       	adiw	r24, 0x01	; 1
     596:	50 de       	rcall	.-864    	; 0x238 <colorFill(CRGB, unsigned char)>
     598:	0f 90       	pop	r0
     59a:	0f 90       	pop	r0
     59c:	0f 90       	pop	r0
     59e:	df 91       	pop	r29
     5a0:	cf 91       	pop	r28
     5a2:	1f 91       	pop	r17
     5a4:	0f 91       	pop	r16
     5a6:	08 95       	ret

000005a8 <colorFirefly(int)>:
_Z12colorFireflyi():
     5a8:	0f 93       	push	r16
     5aa:	1f 93       	push	r17
     5ac:	cf 93       	push	r28
     5ae:	df 93       	push	r29
     5b0:	00 d0       	rcall	.+0      	; 0x5b2 <colorFirefly(int)+0xa>
     5b2:	1f 92       	push	r1
     5b4:	cd b7       	in	r28, 0x3d	; 61
     5b6:	de b7       	in	r29, 0x3e	; 62
     5b8:	8c 01       	movw	r16, r24
     5ba:	80 91 d3 00 	lds	r24, 0x00D3	; 0x8000d3 <counter>
     5be:	90 91 d4 00 	lds	r25, 0x00D4	; 0x8000d4 <counter+0x1>
     5c2:	80 31       	cpi	r24, 0x10	; 16
     5c4:	91 05       	cpc	r25, r1
     5c6:	d0 f4       	brcc	.+52     	; 0x5fc <colorFirefly(int)+0x54>
     5c8:	fc 01       	movw	r30, r24
     5ca:	e8 58       	subi	r30, 0x88	; 136
     5cc:	ff 4f       	sbci	r31, 0xFF	; 255
     5ce:	80 81       	ld	r24, Z
_ZN4CHSVC4Ehhh():
     5d0:	9c e3       	ldi	r25, 0x3C	; 60
     5d2:	99 83       	std	Y+1, r25	; 0x01
     5d4:	9f ef       	ldi	r25, 0xFF	; 255
     5d6:	9a 83       	std	Y+2, r25	; 0x02
     5d8:	8b 83       	std	Y+3, r24	; 0x03
_Z12colorFireflyi():
     5da:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <__data_end>
     5de:	90 91 89 00 	lds	r25, 0x0089	; 0x800089 <__data_end+0x1>
     5e2:	63 e0       	ldi	r22, 0x03	; 3
     5e4:	70 e0       	ldi	r23, 0x00	; 0
     5e6:	79 d8       	rcall	.-3854   	; 0xfffff6da <__eeprom_end+0xff7ef6da>
     5e8:	bc 01       	movw	r22, r24
     5ea:	6b 54       	subi	r22, 0x4B	; 75
     5ec:	7f 4f       	sbci	r23, 0xFF	; 255
_ZN4CRGBaSERK4CHSV():
     5ee:	ce 01       	movw	r24, r28
     5f0:	01 96       	adiw	r24, 0x01	; 1
     5f2:	0a d6       	rcall	.+3092   	; 0x1208 <hsv2rgb_rainbow(CHSV const&, CRGB&)>
_Z12colorFireflyi():
     5f4:	86 ee       	ldi	r24, 0xE6	; 230
     5f6:	90 e0       	ldi	r25, 0x00	; 0
     5f8:	85 dd       	rcall	.-1270   	; 0x104 <CFastLED::show()>
     5fa:	21 c0       	rjmp	.+66     	; 0x63e <colorFirefly(int)+0x96>
     5fc:	64 e1       	ldi	r22, 0x14	; 20
     5fe:	70 e0       	ldi	r23, 0x00	; 0
     600:	80 e0       	ldi	r24, 0x00	; 0
     602:	90 e0       	ldi	r25, 0x00	; 0
     604:	b5 d6       	rcall	.+3434   	; 0x1370 <random(long)>
     606:	67 2b       	or	r22, r23
     608:	68 2b       	or	r22, r24
     60a:	69 2b       	or	r22, r25
     60c:	c1 f4       	brne	.+48     	; 0x63e <colorFirefly(int)+0x96>
     60e:	2a e0       	ldi	r18, 0x0A	; 10
     610:	30 e0       	ldi	r19, 0x00	; 0
     612:	40 e0       	ldi	r20, 0x00	; 0
     614:	50 e0       	ldi	r21, 0x00	; 0
     616:	60 e0       	ldi	r22, 0x00	; 0
     618:	70 e0       	ldi	r23, 0x00	; 0
     61a:	cb 01       	movw	r24, r22
     61c:	c1 d6       	rcall	.+3458   	; 0x13a0 <random(long, long)>
     61e:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__data_end+0x1>
     622:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__data_end>
     626:	10 92 d4 00 	sts	0x00D4, r1	; 0x8000d4 <counter+0x1>
     62a:	10 92 d3 00 	sts	0x00D3, r1	; 0x8000d3 <counter>
_ZN4CRGBC4Em():
     62e:	19 82       	std	Y+1, r1	; 0x01
     630:	1a 82       	std	Y+2, r1	; 0x02
     632:	1b 82       	std	Y+3, r1	; 0x03
_Z12colorFireflyi():
     634:	60 e0       	ldi	r22, 0x00	; 0
     636:	ce 01       	movw	r24, r28
     638:	01 96       	adiw	r24, 0x01	; 1
     63a:	fe dd       	rcall	.-1028   	; 0x238 <colorFill(CRGB, unsigned char)>
     63c:	05 c0       	rjmp	.+10     	; 0x648 <colorFirefly(int)+0xa0>
     63e:	b8 01       	movw	r22, r16
     640:	11 0f       	add	r17, r17
     642:	88 0b       	sbc	r24, r24
     644:	99 0b       	sbc	r25, r25
     646:	5e d7       	rcall	.+3772   	; 0x1504 <delay>
     648:	0f 90       	pop	r0
     64a:	0f 90       	pop	r0
     64c:	0f 90       	pop	r0
     64e:	df 91       	pop	r29
     650:	cf 91       	pop	r28
     652:	1f 91       	pop	r17
     654:	0f 91       	pop	r16
     656:	08 95       	ret

00000658 <doSomething(int)>:
_Z11doSomethingi():
     658:	0f 93       	push	r16
     65a:	1f 93       	push	r17
     65c:	cf 93       	push	r28
     65e:	df 93       	push	r29
     660:	00 d0       	rcall	.+0      	; 0x662 <doSomething(int)+0xa>
     662:	00 d0       	rcall	.+0      	; 0x664 <doSomething(int)+0xc>
     664:	00 d0       	rcall	.+0      	; 0x666 <doSomething(int)+0xe>
     666:	cd b7       	in	r28, 0x3d	; 61
     668:	de b7       	in	r29, 0x3e	; 62
     66a:	8d 30       	cpi	r24, 0x0D	; 13
     66c:	91 05       	cpc	r25, r1
     66e:	08 f0       	brcs	.+2      	; 0x672 <doSomething(int)+0x1a>
     670:	6d c0       	rjmp	.+218    	; 0x74c <doSomething(int)+0xf4>
     672:	fc 01       	movw	r30, r24
     674:	e1 5f       	subi	r30, 0xF1	; 241
     676:	ff 4f       	sbci	r31, 0xFF	; 255
     678:	09 94       	ijmp
_ZN4CRGBC4Em():
     67a:	8f ef       	ldi	r24, 0xFF	; 255
     67c:	89 83       	std	Y+1, r24	; 0x01
     67e:	8a 83       	std	Y+2, r24	; 0x02
     680:	1b 82       	std	Y+3, r1	; 0x03
     682:	06 c0       	rjmp	.+12     	; 0x690 <doSomething(int)+0x38>
_ZN4CRGBC4Ehhh():
     684:	8f ef       	ldi	r24, 0xFF	; 255
     686:	89 83       	std	Y+1, r24	; 0x01
     688:	83 e9       	ldi	r24, 0x93	; 147
     68a:	8a 83       	std	Y+2, r24	; 0x02
     68c:	89 e2       	ldi	r24, 0x29	; 41
     68e:	8b 83       	std	Y+3, r24	; 0x03
_Z11doSomethingi():
     690:	60 e0       	ldi	r22, 0x00	; 0
     692:	ce 01       	movw	r24, r28
     694:	01 96       	adiw	r24, 0x01	; 1
     696:	d0 dd       	rcall	.-1120   	; 0x238 <colorFill(CRGB, unsigned char)>
     698:	62 c0       	rjmp	.+196    	; 0x75e <doSomething(int)+0x106>
     69a:	20 e5       	ldi	r18, 0x50	; 80
     69c:	30 e0       	ldi	r19, 0x00	; 0
     69e:	40 e0       	ldi	r20, 0x00	; 0
     6a0:	50 e0       	ldi	r21, 0x00	; 0
     6a2:	6e e1       	ldi	r22, 0x1E	; 30
     6a4:	70 e0       	ldi	r23, 0x00	; 0
     6a6:	80 e0       	ldi	r24, 0x00	; 0
     6a8:	90 e0       	ldi	r25, 0x00	; 0
     6aa:	7a d6       	rcall	.+3316   	; 0x13a0 <random(long, long)>
     6ac:	8b 01       	movw	r16, r22
     6ae:	2f ef       	ldi	r18, 0xFF	; 255
     6b0:	30 e0       	ldi	r19, 0x00	; 0
     6b2:	48 ec       	ldi	r20, 0xC8	; 200
     6b4:	50 e0       	ldi	r21, 0x00	; 0
     6b6:	62 e2       	ldi	r22, 0x22	; 34
     6b8:	70 e0       	ldi	r23, 0x00	; 0
     6ba:	8b e0       	ldi	r24, 0x0B	; 11
     6bc:	90 e0       	ldi	r25, 0x00	; 0
     6be:	23 c0       	rjmp	.+70     	; 0x706 <doSomething(int)+0xae>
_ZN4CRGBC4Em():
     6c0:	8f ef       	ldi	r24, 0xFF	; 255
     6c2:	89 83       	std	Y+1, r24	; 0x01
     6c4:	8a 83       	std	Y+2, r24	; 0x02
     6c6:	8b 83       	std	Y+3, r24	; 0x03
_ZN4CRGBC4Ehhh():
     6c8:	1c 82       	std	Y+4, r1	; 0x04
     6ca:	1d 82       	std	Y+5, r1	; 0x05
     6cc:	8f e1       	ldi	r24, 0x1F	; 31
     6ce:	8e 83       	std	Y+6, r24	; 0x06
_Z11doSomethingi():
     6d0:	42 e3       	ldi	r20, 0x32	; 50
     6d2:	50 e0       	ldi	r21, 0x00	; 0
     6d4:	be 01       	movw	r22, r28
     6d6:	6f 5f       	subi	r22, 0xFF	; 255
     6d8:	7f 4f       	sbci	r23, 0xFF	; 255
     6da:	ce 01       	movw	r24, r28
     6dc:	04 96       	adiw	r24, 0x04	; 4
     6de:	53 de       	rcall	.-858    	; 0x386 <twinkle(CRGB, CRGB, int)>
     6e0:	3e c0       	rjmp	.+124    	; 0x75e <doSomething(int)+0x106>
     6e2:	82 e3       	ldi	r24, 0x32	; 50
     6e4:	01 c0       	rjmp	.+2      	; 0x6e8 <doSomething(int)+0x90>
     6e6:	81 e0       	ldi	r24, 0x01	; 1
     6e8:	da dd       	rcall	.-1100   	; 0x29e <rainbow(unsigned char)>
     6ea:	39 c0       	rjmp	.+114    	; 0x75e <doSomething(int)+0x106>
     6ec:	8a e0       	ldi	r24, 0x0A	; 10
     6ee:	0a de       	rcall	.-1004   	; 0x304 <rainbowCycle(unsigned char)>
     6f0:	36 c0       	rjmp	.+108    	; 0x75e <doSomething(int)+0x106>
     6f2:	02 e3       	ldi	r16, 0x32	; 50
     6f4:	10 e0       	ldi	r17, 0x00	; 0
     6f6:	2f ef       	ldi	r18, 0xFF	; 255
     6f8:	30 e0       	ldi	r19, 0x00	; 0
     6fa:	4f ef       	ldi	r20, 0xFF	; 255
     6fc:	50 e0       	ldi	r21, 0x00	; 0
     6fe:	67 e6       	ldi	r22, 0x67	; 103
     700:	71 e0       	ldi	r23, 0x01	; 1
     702:	80 e0       	ldi	r24, 0x00	; 0
     704:	90 e0       	ldi	r25, 0x00	; 0
     706:	96 de       	rcall	.-724    	; 0x434 <randomize(int, int, int, int, int)>
     708:	2a c0       	rjmp	.+84     	; 0x75e <doSomething(int)+0x106>
     70a:	6f ef       	ldi	r22, 0xFF	; 255
     70c:	70 e0       	ldi	r23, 0x00	; 0
     70e:	80 e0       	ldi	r24, 0x00	; 0
     710:	90 e0       	ldi	r25, 0x00	; 0
     712:	2e d6       	rcall	.+3164   	; 0x1370 <random(long)>
     714:	16 2f       	mov	r17, r22
     716:	6f ef       	ldi	r22, 0xFF	; 255
     718:	70 e0       	ldi	r23, 0x00	; 0
     71a:	80 e0       	ldi	r24, 0x00	; 0
     71c:	90 e0       	ldi	r25, 0x00	; 0
     71e:	28 d6       	rcall	.+3152   	; 0x1370 <random(long)>
     720:	06 2f       	mov	r16, r22
     722:	6f ef       	ldi	r22, 0xFF	; 255
     724:	70 e0       	ldi	r23, 0x00	; 0
     726:	80 e0       	ldi	r24, 0x00	; 0
     728:	90 e0       	ldi	r25, 0x00	; 0
     72a:	22 d6       	rcall	.+3140   	; 0x1370 <random(long)>
_ZN4CRGBC4Ehhh():
     72c:	69 83       	std	Y+1, r22	; 0x01
     72e:	0a 83       	std	Y+2, r16	; 0x02
     730:	1b 83       	std	Y+3, r17	; 0x03
_Z11doSomethingi():
     732:	64 e6       	ldi	r22, 0x64	; 100
     734:	ce 01       	movw	r24, r28
     736:	01 96       	adiw	r24, 0x01	; 1
     738:	3d dd       	rcall	.-1414   	; 0x1b4 <colorWipe(CRGB, unsigned char)>
     73a:	11 c0       	rjmp	.+34     	; 0x75e <doSomething(int)+0x106>
     73c:	86 e4       	ldi	r24, 0x46	; 70
     73e:	90 e0       	ldi	r25, 0x00	; 0
     740:	e7 de       	rcall	.-562    	; 0x510 <sineFirefly(int)>
     742:	0d c0       	rjmp	.+26     	; 0x75e <doSomething(int)+0x106>
     744:	84 e6       	ldi	r24, 0x64	; 100
     746:	90 e0       	ldi	r25, 0x00	; 0
     748:	2f df       	rcall	.-418    	; 0x5a8 <colorFirefly(int)>
     74a:	09 c0       	rjmp	.+18     	; 0x75e <doSomething(int)+0x106>
     74c:	80 91 d5 00 	lds	r24, 0x00D5	; 0x8000d5 <mode>
     750:	90 91 d6 00 	lds	r25, 0x00D6	; 0x8000d6 <mode+0x1>
     754:	01 96       	adiw	r24, 0x01	; 1
     756:	90 93 d6 00 	sts	0x00D6, r25	; 0x8000d6 <mode+0x1>
     75a:	80 93 d5 00 	sts	0x00D5, r24	; 0x8000d5 <mode>
     75e:	80 91 d3 00 	lds	r24, 0x00D3	; 0x8000d3 <counter>
     762:	90 91 d4 00 	lds	r25, 0x00D4	; 0x8000d4 <counter+0x1>
     766:	8f 3f       	cpi	r24, 0xFF	; 255
     768:	91 05       	cpc	r25, r1
     76a:	1c f0       	brlt	.+6      	; 0x772 <doSomething(int)+0x11a>
     76c:	2f ef       	ldi	r18, 0xFF	; 255
     76e:	3f ef       	ldi	r19, 0xFF	; 255
     770:	05 c0       	rjmp	.+10     	; 0x77c <doSomething(int)+0x124>
     772:	18 16       	cp	r1, r24
     774:	19 06       	cpc	r1, r25
     776:	34 f0       	brlt	.+12     	; 0x784 <doSomething(int)+0x12c>
     778:	21 e0       	ldi	r18, 0x01	; 1
     77a:	30 e0       	ldi	r19, 0x00	; 0
     77c:	30 93 65 00 	sts	0x0065, r19	; 0x800065 <dir+0x1>
     780:	20 93 64 00 	sts	0x0064, r18	; 0x800064 <dir>
     784:	20 91 64 00 	lds	r18, 0x0064	; 0x800064 <dir>
     788:	30 91 65 00 	lds	r19, 0x0065	; 0x800065 <dir+0x1>
     78c:	82 0f       	add	r24, r18
     78e:	93 1f       	adc	r25, r19
     790:	90 93 d4 00 	sts	0x00D4, r25	; 0x8000d4 <counter+0x1>
     794:	80 93 d3 00 	sts	0x00D3, r24	; 0x8000d3 <counter>
     798:	26 96       	adiw	r28, 0x06	; 6
     79a:	0f b6       	in	r0, 0x3f	; 63
     79c:	f8 94       	cli
     79e:	de bf       	out	0x3e, r29	; 62
     7a0:	0f be       	out	0x3f, r0	; 63
     7a2:	cd bf       	out	0x3d, r28	; 61
     7a4:	df 91       	pop	r29
     7a6:	cf 91       	pop	r28
     7a8:	1f 91       	pop	r17
     7aa:	0f 91       	pop	r16
     7ac:	08 95       	ret

000007ae <loop>:
loop():
     7ae:	0f 93       	push	r16
     7b0:	1f 93       	push	r17
     7b2:	81 e0       	ldi	r24, 0x01	; 1
     7b4:	57 d7       	rcall	.+3758   	; 0x1664 <digitalRead>
     7b6:	89 2b       	or	r24, r25
     7b8:	a1 f0       	breq	.+40     	; 0x7e2 <loop+0x34>
     7ba:	72 d6       	rcall	.+3300   	; 0x14a0 <millis>
     7bc:	00 91 8f 00 	lds	r16, 0x008F	; 0x80008f <loop::lastButtonTime>
     7c0:	10 91 90 00 	lds	r17, 0x0090	; 0x800090 <loop::lastButtonTime+0x1>
     7c4:	20 91 91 00 	lds	r18, 0x0091	; 0x800091 <loop::lastButtonTime+0x2>
     7c8:	30 91 92 00 	lds	r19, 0x0092	; 0x800092 <loop::lastButtonTime+0x3>
     7cc:	dc 01       	movw	r26, r24
     7ce:	cb 01       	movw	r24, r22
     7d0:	80 1b       	sub	r24, r16
     7d2:	91 0b       	sbc	r25, r17
     7d4:	a2 0b       	sbc	r26, r18
     7d6:	b3 0b       	sbc	r27, r19
     7d8:	81 32       	cpi	r24, 0x21	; 33
     7da:	93 40       	sbci	r25, 0x03	; 3
     7dc:	a1 05       	cpc	r26, r1
     7de:	b1 05       	cpc	r27, r1
     7e0:	88 f4       	brcc	.+34     	; 0x804 <loop+0x56>
     7e2:	80 91 d5 00 	lds	r24, 0x00D5	; 0x8000d5 <mode>
     7e6:	90 91 d6 00 	lds	r25, 0x00D6	; 0x8000d6 <mode+0x1>
     7ea:	0d 97       	sbiw	r24, 0x0d	; 13
     7ec:	24 f0       	brlt	.+8      	; 0x7f6 <loop+0x48>
     7ee:	10 92 d6 00 	sts	0x00D6, r1	; 0x8000d6 <mode+0x1>
     7f2:	10 92 d5 00 	sts	0x00D5, r1	; 0x8000d5 <mode>
     7f6:	80 91 d5 00 	lds	r24, 0x00D5	; 0x8000d5 <mode>
     7fa:	90 91 d6 00 	lds	r25, 0x00D6	; 0x8000d6 <mode+0x1>
     7fe:	1f 91       	pop	r17
     800:	0f 91       	pop	r16
     802:	2a cf       	rjmp	.-428    	; 0x658 <doSomething(int)>
     804:	10 92 d4 00 	sts	0x00D4, r1	; 0x8000d4 <counter+0x1>
     808:	10 92 d3 00 	sts	0x00D3, r1	; 0x8000d3 <counter>
     80c:	49 d6       	rcall	.+3218   	; 0x14a0 <millis>
     80e:	60 93 8f 00 	sts	0x008F, r22	; 0x80008f <loop::lastButtonTime>
     812:	70 93 90 00 	sts	0x0090, r23	; 0x800090 <loop::lastButtonTime+0x1>
     816:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <loop::lastButtonTime+0x2>
     81a:	90 93 92 00 	sts	0x0092, r25	; 0x800092 <loop::lastButtonTime+0x3>
     81e:	80 91 d5 00 	lds	r24, 0x00D5	; 0x8000d5 <mode>
     822:	90 91 d6 00 	lds	r25, 0x00D6	; 0x8000d6 <mode+0x1>
     826:	01 96       	adiw	r24, 0x01	; 1
     828:	90 93 d6 00 	sts	0x00D6, r25	; 0x8000d6 <mode+0x1>
     82c:	80 93 d5 00 	sts	0x00D5, r24	; 0x8000d5 <mode>
     830:	d8 cf       	rjmp	.-80     	; 0x7e2 <loop+0x34>

00000832 <ClocklessController<(unsigned char)0, 6, 8, 6, (EOrder)10, 0, false, 10>::showRGBInternal(PixelController<(EOrder)10, 1, 4294967295ul>&)>:
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:327
#define DADVANCE 3
#define DUSE (0xFF - (DADVANCE-1))

	// This method is made static to force making register Y available to use for data on AVR - if the method is non-static, then
	// gcc will use register Y for the this pointer.
	static void /*__attribute__((optimize("O0")))*/  /*__attribute__ ((always_inline))*/  showRGBInternal(PixelController<RGB_ORDER> & pixels)  {
     832:	9f 92       	push	r9
     834:	af 92       	push	r10
     836:	bf 92       	push	r11
     838:	cf 92       	push	r12
     83a:	df 92       	push	r13
     83c:	ef 92       	push	r14
     83e:	ff 92       	push	r15
     840:	0f 93       	push	r16
     842:	1f 93       	push	r17
     844:	cf 93       	push	r28
     846:	df 93       	push	r29
     848:	fc 01       	movw	r30, r24
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:328
		uint8_t *data = (uint8_t*)pixels.mData;
     84a:	c0 80       	ld	r12, Z
     84c:	d1 80       	ldd	r13, Z+1	; 0x01
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:334
		data_ptr_t port = FastPin<DATA_PIN>::port();
		data_t mask = FastPin<DATA_PIN>::mask();
		uint8_t scale_base = 0;

		// register uint8_t *end = data + nLeds;
		data_t hi = *port | mask;
     84e:	28 b3       	in	r18, 0x18	; 24
     850:	21 60       	ori	r18, 0x01	; 1
     852:	b2 2e       	mov	r11, r18
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:335
		data_t lo = *port & ~mask;
     854:	98 b3       	in	r25, 0x18	; 24
     856:	9e 7f       	andi	r25, 0xFE	; 254
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:336
		*port = lo;
     858:	98 bb       	out	0x18, r25	; 24
_ZN15PixelControllerIL6EOrder10ELi1ELm4294967295EE25preStepFirstByteDitheringEv():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:340
                d[2] = e[2] - d[2];
        }

        // Some chipsets pre-cycle the first byte, which means we want to cycle byte 0's dithering separately
        __attribute__((always_inline)) inline void preStepFirstByteDithering() {
            d[RO(0)] = e[RO(0)] - d[RO(0)];
     85a:	61 85       	ldd	r22, Z+9	; 0x09
     85c:	86 81       	ldd	r24, Z+6	; 0x06
     85e:	06 2f       	mov	r16, r22
     860:	08 1b       	sub	r16, r24
     862:	80 2f       	mov	r24, r16
     864:	06 83       	std	Z+6, r16	; 0x06
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:347

		// Setup the pixel controller
		pixels.preStepFirstByteDithering();

		// pull the dithering/adjustment values out of the pixels object for direct asm access
		uint8_t advanceBy = pixels.advanceBy();
     866:	77 85       	ldd	r23, Z+15	; 0x0f
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:348
		uint16_t count = pixels.mLen;
     868:	a2 81       	ldd	r26, Z+2	; 0x02
     86a:	b3 81       	ldd	r27, Z+3	; 0x03
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:350

		uint8_t s0 = pixels.mScale.raw[RO(0)];
     86c:	34 85       	ldd	r19, Z+12	; 0x0c
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:351
		uint8_t s1 = pixels.mScale.raw[RO(1)];
     86e:	45 85       	ldd	r20, Z+13	; 0x0d
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:352
		uint8_t s2 = pixels.mScale.raw[RO(2)];
     870:	56 85       	ldd	r21, Z+14	; 0x0e
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:354
#if (FASTLED_SCALE8_FIXED==1)
		s0++; s1++; s2++;
     872:	99 24       	eor	r9, r9
     874:	93 94       	inc	r9
     876:	93 0e       	add	r9, r19
     878:	4f 5f       	subi	r20, 0xFF	; 255
     87a:	5f 5f       	subi	r21, 0xFF	; 255
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:357
#endif
		uint8_t d0 = pixels.d[RO(0)];
		uint8_t d1 = pixels.d[RO(1)];
     87c:	f7 80       	ldd	r15, Z+7	; 0x07
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:358
		uint8_t d2 = pixels.d[RO(2)];
     87e:	e0 84       	ldd	r14, Z+8	; 0x08
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:360
		uint8_t e0 = pixels.e[RO(0)];
		uint8_t e1 = pixels.e[RO(1)];
     880:	c2 85       	ldd	r28, Z+10	; 0x0a
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:361
		uint8_t e2 = pixels.e[RO(2)];
     882:	d3 85       	ldd	r29, Z+11	; 0x0b
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:366

		uint8_t loopvar=0;

		// This has to be done in asm to keep gcc from messing up the asm code further down
		b0 = data[RO(0)];
     884:	f6 01       	movw	r30, r12
     886:	10 81       	ld	r17, Z
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:368
		{
			LDSCL4(b0,O0) 	PRESCALEA2(d0)
     888:	a1 2c       	mov	r10, r1
     88a:	0a 2d       	mov	r16, r10
     88c:	2a 2d       	mov	r18, r10
     88e:	3a 2d       	mov	r19, r10
     890:	30 81       	ld	r19, Z
     892:	11 27       	eor	r17, r17
     894:	88 94       	clc
     896:	31 11       	cpse	r19, r1
     898:	38 0f       	add	r19, r24
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:369
			PRESCALEB4(d0)	SCALE02(b0,0)
     89a:	08 f4       	brcc	.+2      	; 0x89e <L_2069>
     89c:	3f ef       	ldi	r19, 0xFF	; 255

0000089e <L_2069>:
     89e:	81 95       	neg	r24
     8a0:	88 94       	clc
     8a2:	90 fc       	sbrc	r9, 0
     8a4:	13 0f       	add	r17, r19
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:370
			RORSC04(b0,1) 	ROR1(b0) CLC1
     8a6:	17 95       	ror	r17
     8a8:	88 94       	clc
     8aa:	91 fc       	sbrc	r9, 1
     8ac:	13 0f       	add	r17, r19
     8ae:	17 95       	ror	r17
     8b0:	88 94       	clc
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:371
			SCROR04(b0,2)		SCALE02(b0,3)
     8b2:	92 fc       	sbrc	r9, 2
     8b4:	13 0f       	add	r17, r19
     8b6:	17 95       	ror	r17
     8b8:	88 94       	clc
     8ba:	93 fc       	sbrc	r9, 3
     8bc:	13 0f       	add	r17, r19
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:372
			RORSC04(b0,4) 	ROR1(b0) CLC1
     8be:	17 95       	ror	r17
     8c0:	88 94       	clc
     8c2:	94 fc       	sbrc	r9, 4
     8c4:	13 0f       	add	r17, r19
     8c6:	17 95       	ror	r17
     8c8:	88 94       	clc
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:373
			SCROR04(b0,5) 	SCALE02(b0,6)
     8ca:	95 fc       	sbrc	r9, 5
     8cc:	13 0f       	add	r17, r19
     8ce:	17 95       	ror	r17
     8d0:	88 94       	clc
     8d2:	96 fc       	sbrc	r9, 6
     8d4:	13 0f       	add	r17, r19
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:374
			RORSC04(b0,7) 	ROR1(b0) CLC1
     8d6:	17 95       	ror	r17
     8d8:	88 94       	clc
     8da:	97 fc       	sbrc	r9, 7
     8dc:	13 0f       	add	r17, r19
     8de:	17 95       	ror	r17
     8e0:	88 94       	clc
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:375
			MOV_ADDDE04(b1,b0,d0,e0)
     8e2:	03 2f       	mov	r16, r19
     8e4:	91 10       	cpse	r9, r1
     8e6:	01 2f       	mov	r16, r17
     8e8:	86 0f       	add	r24, r22
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:376
			MOV1(b0,b1)
     8ea:	10 2f       	mov	r17, r16
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:383

		{
			// while(--count)
			{
				// Loop beginning
				DNOP;
     8ec:	00 2c       	mov	r0, r0
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:397
				// out.  When doing byte 1, we're doing the above for byte 2.  When we're doing byte 2,
				// we're cycling back around and doing the above for byte 0.

				// Inline scaling - RGB ordering
				// DNOP
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O1) 	D2(4)	LO1	PRESCALEA2(d1)	D3(2)
     8ee:	b8 ba       	out	0x18, r11	; 24
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     8f0:	00 c0       	rjmp	.+0      	; 0x8f2 <L_2069+0x54>
     8f2:	00 c0       	rjmp	.+0      	; 0x8f4 <L_2069+0x56>
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:397
				// out.  When doing byte 1, we're doing the above for byte 2.  When we're doing byte 2,
				// we're cycling back around and doing the above for byte 0.

				// Inline scaling - RGB ordering
				// DNOP
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O1) 	D2(4)	LO1	PRESCALEA2(d1)	D3(2)
     8f4:	17 ff       	sbrs	r17, 7
     8f6:	98 bb       	out	0x18, r25	; 24
     8f8:	31 81       	ldd	r19, Z+1	; 0x01
     8fa:	00 27       	eor	r16, r16
     8fc:	88 94       	clc
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     8fe:	00 c0       	rjmp	.+0      	; 0x900 <L_2069+0x62>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     900:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:397
				// out.  When doing byte 1, we're doing the above for byte 2.  When we're doing byte 2,
				// we're cycling back around and doing the above for byte 0.

				// Inline scaling - RGB ordering
				// DNOP
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O1) 	D2(4)	LO1	PRESCALEA2(d1)	D3(2)
     902:	98 bb       	out	0x18, r25	; 24
     904:	31 11       	cpse	r19, r1
     906:	3f 0d       	add	r19, r15
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     908:	00 c0       	rjmp	.+0      	; 0x90a <L_2069+0x6c>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     90a:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:398
				// we're cycling back around and doing the above for byte 0.

				// Inline scaling - RGB ordering
				// DNOP
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O1) 	D2(4)	LO1	PRESCALEA2(d1)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d1)	D2(4)	LO1	SCALE12(b1,0)	D3(2)
     90c:	b8 ba       	out	0x18, r11	; 24
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     90e:	00 c0       	rjmp	.+0      	; 0x910 <L_2069+0x72>
     910:	00 c0       	rjmp	.+0      	; 0x912 <L_2069+0x74>
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:398
				// we're cycling back around and doing the above for byte 0.

				// Inline scaling - RGB ordering
				// DNOP
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O1) 	D2(4)	LO1	PRESCALEA2(d1)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d1)	D2(4)	LO1	SCALE12(b1,0)	D3(2)
     912:	16 ff       	sbrs	r17, 6
     914:	98 bb       	out	0x18, r25	; 24
     916:	08 f4       	brcc	.+2      	; 0x91a <L_2613>
     918:	3f ef       	ldi	r19, 0xFF	; 255

0000091a <L_2613>:
     91a:	f1 94       	neg	r15
     91c:	88 94       	clc
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     91e:	00 c0       	rjmp	.+0      	; 0x920 <L_2613+0x6>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     920:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:398
				// we're cycling back around and doing the above for byte 0.

				// Inline scaling - RGB ordering
				// DNOP
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O1) 	D2(4)	LO1	PRESCALEA2(d1)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d1)	D2(4)	LO1	SCALE12(b1,0)	D3(2)
     922:	98 bb       	out	0x18, r25	; 24
     924:	40 fd       	sbrc	r20, 0
     926:	03 0f       	add	r16, r19
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     928:	00 c0       	rjmp	.+0      	; 0x92a <L_2613+0x10>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     92a:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:399

				// Inline scaling - RGB ordering
				// DNOP
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O1) 	D2(4)	LO1	PRESCALEA2(d1)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d1)	D2(4)	LO1	SCALE12(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC14(b1,1) 	D2(4)	LO1 RORCLC2(b1)		D3(2)
     92c:	b8 ba       	out	0x18, r11	; 24
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     92e:	00 c0       	rjmp	.+0      	; 0x930 <L_2613+0x16>
     930:	00 c0       	rjmp	.+0      	; 0x932 <L_2613+0x18>
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:399

				// Inline scaling - RGB ordering
				// DNOP
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O1) 	D2(4)	LO1	PRESCALEA2(d1)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d1)	D2(4)	LO1	SCALE12(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC14(b1,1) 	D2(4)	LO1 RORCLC2(b1)		D3(2)
     932:	15 ff       	sbrs	r17, 5
     934:	98 bb       	out	0x18, r25	; 24
     936:	07 95       	ror	r16
     938:	88 94       	clc
     93a:	41 fd       	sbrc	r20, 1
     93c:	03 0f       	add	r16, r19
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     93e:	00 c0       	rjmp	.+0      	; 0x940 <L_2613+0x26>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     940:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:399

				// Inline scaling - RGB ordering
				// DNOP
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O1) 	D2(4)	LO1	PRESCALEA2(d1)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d1)	D2(4)	LO1	SCALE12(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC14(b1,1) 	D2(4)	LO1 RORCLC2(b1)		D3(2)
     942:	98 bb       	out	0x18, r25	; 24
     944:	07 95       	ror	r16
     946:	88 94       	clc
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     948:	00 c0       	rjmp	.+0      	; 0x94a <L_2613+0x30>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     94a:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:400
				// Inline scaling - RGB ordering
				// DNOP
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O1) 	D2(4)	LO1	PRESCALEA2(d1)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d1)	D2(4)	LO1	SCALE12(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC14(b1,1) 	D2(4)	LO1 RORCLC2(b1)		D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR14(b1,2)		D2(4)	LO1 SCALE12(b1,3)	D3(2)
     94c:	b8 ba       	out	0x18, r11	; 24
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     94e:	00 c0       	rjmp	.+0      	; 0x950 <L_2613+0x36>
     950:	00 c0       	rjmp	.+0      	; 0x952 <L_2613+0x38>
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:400
				// Inline scaling - RGB ordering
				// DNOP
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O1) 	D2(4)	LO1	PRESCALEA2(d1)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d1)	D2(4)	LO1	SCALE12(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC14(b1,1) 	D2(4)	LO1 RORCLC2(b1)		D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR14(b1,2)		D2(4)	LO1 SCALE12(b1,3)	D3(2)
     952:	14 ff       	sbrs	r17, 4
     954:	98 bb       	out	0x18, r25	; 24
     956:	42 fd       	sbrc	r20, 2
     958:	03 0f       	add	r16, r19
     95a:	07 95       	ror	r16
     95c:	88 94       	clc
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     95e:	00 c0       	rjmp	.+0      	; 0x960 <L_2613+0x46>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     960:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:400
				// Inline scaling - RGB ordering
				// DNOP
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O1) 	D2(4)	LO1	PRESCALEA2(d1)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d1)	D2(4)	LO1	SCALE12(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC14(b1,1) 	D2(4)	LO1 RORCLC2(b1)		D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR14(b1,2)		D2(4)	LO1 SCALE12(b1,3)	D3(2)
     962:	98 bb       	out	0x18, r25	; 24
     964:	43 fd       	sbrc	r20, 3
     966:	03 0f       	add	r16, r19
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     968:	00 c0       	rjmp	.+0      	; 0x96a <L_2613+0x50>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     96a:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:401
				// DNOP
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O1) 	D2(4)	LO1	PRESCALEA2(d1)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d1)	D2(4)	LO1	SCALE12(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC14(b1,1) 	D2(4)	LO1 RORCLC2(b1)		D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR14(b1,2)		D2(4)	LO1 SCALE12(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC14(b1,4) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
     96c:	b8 ba       	out	0x18, r11	; 24
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     96e:	00 c0       	rjmp	.+0      	; 0x970 <L_2613+0x56>
     970:	00 c0       	rjmp	.+0      	; 0x972 <L_2613+0x58>
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:401
				// DNOP
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O1) 	D2(4)	LO1	PRESCALEA2(d1)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d1)	D2(4)	LO1	SCALE12(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC14(b1,1) 	D2(4)	LO1 RORCLC2(b1)		D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR14(b1,2)		D2(4)	LO1 SCALE12(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC14(b1,4) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
     972:	13 ff       	sbrs	r17, 3
     974:	98 bb       	out	0x18, r25	; 24
     976:	07 95       	ror	r16
     978:	88 94       	clc
     97a:	44 fd       	sbrc	r20, 4
     97c:	03 0f       	add	r16, r19
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     97e:	00 c0       	rjmp	.+0      	; 0x980 <L_2613+0x66>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     980:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:401
				// DNOP
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O1) 	D2(4)	LO1	PRESCALEA2(d1)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d1)	D2(4)	LO1	SCALE12(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC14(b1,1) 	D2(4)	LO1 RORCLC2(b1)		D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR14(b1,2)		D2(4)	LO1 SCALE12(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC14(b1,4) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
     982:	98 bb       	out	0x18, r25	; 24
     984:	07 95       	ror	r16
     986:	88 94       	clc
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     988:	00 c0       	rjmp	.+0      	; 0x98a <L_2613+0x70>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     98a:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:402
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O1) 	D2(4)	LO1	PRESCALEA2(d1)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d1)	D2(4)	LO1	SCALE12(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC14(b1,1) 	D2(4)	LO1 RORCLC2(b1)		D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR14(b1,2)		D2(4)	LO1 SCALE12(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC14(b1,4) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 2) SCROR14(b1,5) 	D2(4)	LO1 SCALE12(b1,6)	D3(2)
     98c:	b8 ba       	out	0x18, r11	; 24
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     98e:	00 c0       	rjmp	.+0      	; 0x990 <L_2613+0x76>
     990:	00 c0       	rjmp	.+0      	; 0x992 <L_2613+0x78>
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:402
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O1) 	D2(4)	LO1	PRESCALEA2(d1)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d1)	D2(4)	LO1	SCALE12(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC14(b1,1) 	D2(4)	LO1 RORCLC2(b1)		D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR14(b1,2)		D2(4)	LO1 SCALE12(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC14(b1,4) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 2) SCROR14(b1,5) 	D2(4)	LO1 SCALE12(b1,6)	D3(2)
     992:	12 ff       	sbrs	r17, 2
     994:	98 bb       	out	0x18, r25	; 24
     996:	45 fd       	sbrc	r20, 5
     998:	03 0f       	add	r16, r19
     99a:	07 95       	ror	r16
     99c:	88 94       	clc
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     99e:	00 c0       	rjmp	.+0      	; 0x9a0 <L_2613+0x86>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     9a0:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:402
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O1) 	D2(4)	LO1	PRESCALEA2(d1)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d1)	D2(4)	LO1	SCALE12(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC14(b1,1) 	D2(4)	LO1 RORCLC2(b1)		D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR14(b1,2)		D2(4)	LO1 SCALE12(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC14(b1,4) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 2) SCROR14(b1,5) 	D2(4)	LO1 SCALE12(b1,6)	D3(2)
     9a2:	98 bb       	out	0x18, r25	; 24
     9a4:	46 fd       	sbrc	r20, 6
     9a6:	03 0f       	add	r16, r19
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     9a8:	00 c0       	rjmp	.+0      	; 0x9aa <L_2613+0x90>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     9aa:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:403
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d1)	D2(4)	LO1	SCALE12(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC14(b1,1) 	D2(4)	LO1 RORCLC2(b1)		D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR14(b1,2)		D2(4)	LO1 SCALE12(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC14(b1,4) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 2) SCROR14(b1,5) 	D2(4)	LO1 SCALE12(b1,6)	D3(2)
				HI1 D1(1) QLO2(b0, 1) RORSC14(b1,7) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
     9ac:	b8 ba       	out	0x18, r11	; 24
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     9ae:	00 c0       	rjmp	.+0      	; 0x9b0 <L_2613+0x96>
     9b0:	00 c0       	rjmp	.+0      	; 0x9b2 <L_2613+0x98>
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:403
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d1)	D2(4)	LO1	SCALE12(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC14(b1,1) 	D2(4)	LO1 RORCLC2(b1)		D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR14(b1,2)		D2(4)	LO1 SCALE12(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC14(b1,4) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 2) SCROR14(b1,5) 	D2(4)	LO1 SCALE12(b1,6)	D3(2)
				HI1 D1(1) QLO2(b0, 1) RORSC14(b1,7) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
     9b2:	11 ff       	sbrs	r17, 1
     9b4:	98 bb       	out	0x18, r25	; 24
     9b6:	07 95       	ror	r16
     9b8:	88 94       	clc
     9ba:	47 fd       	sbrc	r20, 7
     9bc:	03 0f       	add	r16, r19
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     9be:	00 c0       	rjmp	.+0      	; 0x9c0 <L_2613+0xa6>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     9c0:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:403
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d1)	D2(4)	LO1	SCALE12(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC14(b1,1) 	D2(4)	LO1 RORCLC2(b1)		D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR14(b1,2)		D2(4)	LO1 SCALE12(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC14(b1,4) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 2) SCROR14(b1,5) 	D2(4)	LO1 SCALE12(b1,6)	D3(2)
				HI1 D1(1) QLO2(b0, 1) RORSC14(b1,7) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
     9c2:	98 bb       	out	0x18, r25	; 24
     9c4:	07 95       	ror	r16
     9c6:	88 94       	clc
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     9c8:	00 c0       	rjmp	.+0      	; 0x9ca <L_2613+0xb0>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     9ca:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:404
				HI1 D1(1) QLO2(b0, 5) RORSC14(b1,1) 	D2(4)	LO1 RORCLC2(b1)		D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR14(b1,2)		D2(4)	LO1 SCALE12(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC14(b1,4) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 2) SCROR14(b1,5) 	D2(4)	LO1 SCALE12(b1,6)	D3(2)
				HI1 D1(1) QLO2(b0, 1) RORSC14(b1,7) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 0)
     9cc:	b8 ba       	out	0x18, r11	; 24
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     9ce:	00 c0       	rjmp	.+0      	; 0x9d0 <L_2613+0xb6>
     9d0:	00 c0       	rjmp	.+0      	; 0x9d2 <L_2613+0xb8>
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:404
				HI1 D1(1) QLO2(b0, 5) RORSC14(b1,1) 	D2(4)	LO1 RORCLC2(b1)		D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR14(b1,2)		D2(4)	LO1 SCALE12(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC14(b1,4) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 2) SCROR14(b1,5) 	D2(4)	LO1 SCALE12(b1,6)	D3(2)
				HI1 D1(1) QLO2(b0, 1) RORSC14(b1,7) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 0)
     9d2:	10 ff       	sbrs	r17, 0
     9d4:	98 bb       	out	0x18, r25	; 24
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:411
					case 4: D2(0) LO1 D3(0) HI1 D1(1) QLO2(b0,0)
					case 3: D2(0) LO1 D3(0) HI1 D1(1) QLO2(b0,0)
					case 2: D2(0) LO1 D3(0) HI1 D1(1) QLO2(b0,0)
					case 1: D2(0) LO1 D3(0) HI1 D1(1) QLO2(b0,0)
				}
				MOV_ADDDE14(b0,b1,d1,e1) D2(4) LO1 D3(0)
     9d6:	13 2f       	mov	r17, r19
     9d8:	41 11       	cpse	r20, r1
     9da:	10 2f       	mov	r17, r16
     9dc:	fc 0e       	add	r15, r28
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     9de:	00 c0       	rjmp	.+0      	; 0x9e0 <L_2613+0xc6>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     9e0:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:411
					case 4: D2(0) LO1 D3(0) HI1 D1(1) QLO2(b0,0)
					case 3: D2(0) LO1 D3(0) HI1 D1(1) QLO2(b0,0)
					case 2: D2(0) LO1 D3(0) HI1 D1(1) QLO2(b0,0)
					case 1: D2(0) LO1 D3(0) HI1 D1(1) QLO2(b0,0)
				}
				MOV_ADDDE14(b0,b1,d1,e1) D2(4) LO1 D3(0)
     9e2:	98 bb       	out	0x18, r25	; 24
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     9e4:	00 c0       	rjmp	.+0      	; 0x9e6 <L_2613+0xcc>
     9e6:	00 c0       	rjmp	.+0      	; 0x9e8 <L_2613+0xce>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     9e8:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:413
					case 2: D2(0) LO1 D3(0) HI1 D1(1) QLO2(b0,0)
					case 1: D2(0) LO1 D3(0) HI1 D1(1) QLO2(b0,0)
				}
				MOV_ADDDE14(b0,b1,d1,e1) D2(4) LO1 D3(0)

				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O2) 	D2(4)	LO1	PRESCALEA2(d2)	D3(2)
     9ea:	b8 ba       	out	0x18, r11	; 24
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     9ec:	00 c0       	rjmp	.+0      	; 0x9ee <L_2613+0xd4>
     9ee:	00 c0       	rjmp	.+0      	; 0x9f0 <L_2613+0xd6>
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:413
					case 2: D2(0) LO1 D3(0) HI1 D1(1) QLO2(b0,0)
					case 1: D2(0) LO1 D3(0) HI1 D1(1) QLO2(b0,0)
				}
				MOV_ADDDE14(b0,b1,d1,e1) D2(4) LO1 D3(0)

				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O2) 	D2(4)	LO1	PRESCALEA2(d2)	D3(2)
     9f0:	17 ff       	sbrs	r17, 7
     9f2:	98 bb       	out	0x18, r25	; 24
     9f4:	32 81       	ldd	r19, Z+2	; 0x02
     9f6:	00 27       	eor	r16, r16
     9f8:	88 94       	clc
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     9fa:	00 c0       	rjmp	.+0      	; 0x9fc <L_2613+0xe2>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     9fc:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:413
					case 2: D2(0) LO1 D3(0) HI1 D1(1) QLO2(b0,0)
					case 1: D2(0) LO1 D3(0) HI1 D1(1) QLO2(b0,0)
				}
				MOV_ADDDE14(b0,b1,d1,e1) D2(4) LO1 D3(0)

				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O2) 	D2(4)	LO1	PRESCALEA2(d2)	D3(2)
     9fe:	98 bb       	out	0x18, r25	; 24
     a00:	31 11       	cpse	r19, r1
     a02:	3e 0d       	add	r19, r14
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     a04:	00 c0       	rjmp	.+0      	; 0xa06 <L_2613+0xec>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     a06:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:414
					case 1: D2(0) LO1 D3(0) HI1 D1(1) QLO2(b0,0)
				}
				MOV_ADDDE14(b0,b1,d1,e1) D2(4) LO1 D3(0)

				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O2) 	D2(4)	LO1	PRESCALEA2(d2)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PSBIDATA4(d2)		D2(4)	LO1	SCALE22(b1,0)	D3(2)
     a08:	b8 ba       	out	0x18, r11	; 24
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     a0a:	00 c0       	rjmp	.+0      	; 0xa0c <L_2613+0xf2>
     a0c:	00 c0       	rjmp	.+0      	; 0xa0e <L_2613+0xf4>
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:414
					case 1: D2(0) LO1 D3(0) HI1 D1(1) QLO2(b0,0)
				}
				MOV_ADDDE14(b0,b1,d1,e1) D2(4) LO1 D3(0)

				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O2) 	D2(4)	LO1	PRESCALEA2(d2)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PSBIDATA4(d2)		D2(4)	LO1	SCALE22(b1,0)	D3(2)
     a0e:	16 ff       	sbrs	r17, 6
     a10:	98 bb       	out	0x18, r25	; 24
     a12:	08 f4       	brcc	.+2      	; 0xa16 <L_3831>
     a14:	3f ef       	ldi	r19, 0xFF	; 255

00000a16 <L_3831>:
     a16:	e7 0f       	add	r30, r23
     a18:	f1 1d       	adc	r31, r1
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     a1a:	00 c0       	rjmp	.+0      	; 0xa1c <L_3831+0x6>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     a1c:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:414
					case 1: D2(0) LO1 D3(0) HI1 D1(1) QLO2(b0,0)
				}
				MOV_ADDDE14(b0,b1,d1,e1) D2(4) LO1 D3(0)

				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O2) 	D2(4)	LO1	PRESCALEA2(d2)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PSBIDATA4(d2)		D2(4)	LO1	SCALE22(b1,0)	D3(2)
     a1e:	98 bb       	out	0x18, r25	; 24
     a20:	50 fd       	sbrc	r21, 0
     a22:	03 0f       	add	r16, r19
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     a24:	00 c0       	rjmp	.+0      	; 0xa26 <L_3831+0x10>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     a26:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:415
				}
				MOV_ADDDE14(b0,b1,d1,e1) D2(4) LO1 D3(0)

				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O2) 	D2(4)	LO1	PRESCALEA2(d2)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PSBIDATA4(d2)		D2(4)	LO1	SCALE22(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC24(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
     a28:	b8 ba       	out	0x18, r11	; 24
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     a2a:	00 c0       	rjmp	.+0      	; 0xa2c <L_3831+0x16>
     a2c:	00 c0       	rjmp	.+0      	; 0xa2e <L_3831+0x18>
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:415
				}
				MOV_ADDDE14(b0,b1,d1,e1) D2(4) LO1 D3(0)

				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O2) 	D2(4)	LO1	PRESCALEA2(d2)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PSBIDATA4(d2)		D2(4)	LO1	SCALE22(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC24(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
     a2e:	15 ff       	sbrs	r17, 5
     a30:	98 bb       	out	0x18, r25	; 24
     a32:	07 95       	ror	r16
     a34:	88 94       	clc
     a36:	51 fd       	sbrc	r21, 1
     a38:	03 0f       	add	r16, r19
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     a3a:	00 c0       	rjmp	.+0      	; 0xa3c <L_3831+0x26>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     a3c:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:415
				}
				MOV_ADDDE14(b0,b1,d1,e1) D2(4) LO1 D3(0)

				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O2) 	D2(4)	LO1	PRESCALEA2(d2)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PSBIDATA4(d2)		D2(4)	LO1	SCALE22(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC24(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
     a3e:	98 bb       	out	0x18, r25	; 24
     a40:	07 95       	ror	r16
     a42:	88 94       	clc
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     a44:	00 c0       	rjmp	.+0      	; 0xa46 <L_3831+0x30>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     a46:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:416
				MOV_ADDDE14(b0,b1,d1,e1) D2(4) LO1 D3(0)

				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O2) 	D2(4)	LO1	PRESCALEA2(d2)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PSBIDATA4(d2)		D2(4)	LO1	SCALE22(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC24(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR24(b1,2)		D2(4)	LO1 SCALE22(b1,3)	D3(2)
     a48:	b8 ba       	out	0x18, r11	; 24
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     a4a:	00 c0       	rjmp	.+0      	; 0xa4c <L_3831+0x36>
     a4c:	00 c0       	rjmp	.+0      	; 0xa4e <L_3831+0x38>
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:416
				MOV_ADDDE14(b0,b1,d1,e1) D2(4) LO1 D3(0)

				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O2) 	D2(4)	LO1	PRESCALEA2(d2)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PSBIDATA4(d2)		D2(4)	LO1	SCALE22(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC24(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR24(b1,2)		D2(4)	LO1 SCALE22(b1,3)	D3(2)
     a4e:	14 ff       	sbrs	r17, 4
     a50:	98 bb       	out	0x18, r25	; 24
     a52:	52 fd       	sbrc	r21, 2
     a54:	03 0f       	add	r16, r19
     a56:	07 95       	ror	r16
     a58:	88 94       	clc
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     a5a:	00 c0       	rjmp	.+0      	; 0xa5c <L_3831+0x46>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     a5c:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:416
				MOV_ADDDE14(b0,b1,d1,e1) D2(4) LO1 D3(0)

				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O2) 	D2(4)	LO1	PRESCALEA2(d2)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PSBIDATA4(d2)		D2(4)	LO1	SCALE22(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC24(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR24(b1,2)		D2(4)	LO1 SCALE22(b1,3)	D3(2)
     a5e:	98 bb       	out	0x18, r25	; 24
     a60:	53 fd       	sbrc	r21, 3
     a62:	03 0f       	add	r16, r19
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     a64:	00 c0       	rjmp	.+0      	; 0xa66 <L_3831+0x50>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     a66:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:417

				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O2) 	D2(4)	LO1	PRESCALEA2(d2)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PSBIDATA4(d2)		D2(4)	LO1	SCALE22(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC24(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR24(b1,2)		D2(4)	LO1 SCALE22(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC24(b1,4) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
     a68:	b8 ba       	out	0x18, r11	; 24
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     a6a:	00 c0       	rjmp	.+0      	; 0xa6c <L_3831+0x56>
     a6c:	00 c0       	rjmp	.+0      	; 0xa6e <L_3831+0x58>
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:417

				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O2) 	D2(4)	LO1	PRESCALEA2(d2)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PSBIDATA4(d2)		D2(4)	LO1	SCALE22(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC24(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR24(b1,2)		D2(4)	LO1 SCALE22(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC24(b1,4) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
     a6e:	13 ff       	sbrs	r17, 3
     a70:	98 bb       	out	0x18, r25	; 24
     a72:	07 95       	ror	r16
     a74:	88 94       	clc
     a76:	54 fd       	sbrc	r21, 4
     a78:	03 0f       	add	r16, r19
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     a7a:	00 c0       	rjmp	.+0      	; 0xa7c <L_3831+0x66>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     a7c:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:417

				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O2) 	D2(4)	LO1	PRESCALEA2(d2)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PSBIDATA4(d2)		D2(4)	LO1	SCALE22(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC24(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR24(b1,2)		D2(4)	LO1 SCALE22(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC24(b1,4) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
     a7e:	98 bb       	out	0x18, r25	; 24
     a80:	07 95       	ror	r16
     a82:	88 94       	clc
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     a84:	00 c0       	rjmp	.+0      	; 0xa86 <L_3831+0x70>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     a86:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:418
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O2) 	D2(4)	LO1	PRESCALEA2(d2)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PSBIDATA4(d2)		D2(4)	LO1	SCALE22(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC24(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR24(b1,2)		D2(4)	LO1 SCALE22(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC24(b1,4) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 2) SCROR24(b1,5) 	D2(4)	LO1 SCALE22(b1,6)	D3(2)
     a88:	b8 ba       	out	0x18, r11	; 24
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     a8a:	00 c0       	rjmp	.+0      	; 0xa8c <L_3831+0x76>
     a8c:	00 c0       	rjmp	.+0      	; 0xa8e <L_3831+0x78>
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:418
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O2) 	D2(4)	LO1	PRESCALEA2(d2)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PSBIDATA4(d2)		D2(4)	LO1	SCALE22(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC24(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR24(b1,2)		D2(4)	LO1 SCALE22(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC24(b1,4) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 2) SCROR24(b1,5) 	D2(4)	LO1 SCALE22(b1,6)	D3(2)
     a8e:	12 ff       	sbrs	r17, 2
     a90:	98 bb       	out	0x18, r25	; 24
     a92:	55 fd       	sbrc	r21, 5
     a94:	03 0f       	add	r16, r19
     a96:	07 95       	ror	r16
     a98:	88 94       	clc
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     a9a:	00 c0       	rjmp	.+0      	; 0xa9c <L_3831+0x86>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     a9c:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:418
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O2) 	D2(4)	LO1	PRESCALEA2(d2)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PSBIDATA4(d2)		D2(4)	LO1	SCALE22(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC24(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR24(b1,2)		D2(4)	LO1 SCALE22(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC24(b1,4) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 2) SCROR24(b1,5) 	D2(4)	LO1 SCALE22(b1,6)	D3(2)
     a9e:	98 bb       	out	0x18, r25	; 24
     aa0:	56 fd       	sbrc	r21, 6
     aa2:	03 0f       	add	r16, r19
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     aa4:	00 c0       	rjmp	.+0      	; 0xaa6 <L_3831+0x90>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     aa6:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:419
				HI1	D1(1) QLO2(b0, 6) PSBIDATA4(d2)		D2(4)	LO1	SCALE22(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC24(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR24(b1,2)		D2(4)	LO1 SCALE22(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC24(b1,4) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 2) SCROR24(b1,5) 	D2(4)	LO1 SCALE22(b1,6)	D3(2)
				HI1 D1(1) QLO2(b0, 1) RORSC24(b1,7) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
     aa8:	b8 ba       	out	0x18, r11	; 24
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     aaa:	00 c0       	rjmp	.+0      	; 0xaac <L_3831+0x96>
     aac:	00 c0       	rjmp	.+0      	; 0xaae <L_3831+0x98>
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:419
				HI1	D1(1) QLO2(b0, 6) PSBIDATA4(d2)		D2(4)	LO1	SCALE22(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC24(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR24(b1,2)		D2(4)	LO1 SCALE22(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC24(b1,4) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 2) SCROR24(b1,5) 	D2(4)	LO1 SCALE22(b1,6)	D3(2)
				HI1 D1(1) QLO2(b0, 1) RORSC24(b1,7) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
     aae:	11 ff       	sbrs	r17, 1
     ab0:	98 bb       	out	0x18, r25	; 24
     ab2:	07 95       	ror	r16
     ab4:	88 94       	clc
     ab6:	57 fd       	sbrc	r21, 7
     ab8:	03 0f       	add	r16, r19
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     aba:	00 c0       	rjmp	.+0      	; 0xabc <L_3831+0xa6>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     abc:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:419
				HI1	D1(1) QLO2(b0, 6) PSBIDATA4(d2)		D2(4)	LO1	SCALE22(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC24(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR24(b1,2)		D2(4)	LO1 SCALE22(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC24(b1,4) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 2) SCROR24(b1,5) 	D2(4)	LO1 SCALE22(b1,6)	D3(2)
				HI1 D1(1) QLO2(b0, 1) RORSC24(b1,7) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
     abe:	98 bb       	out	0x18, r25	; 24
     ac0:	07 95       	ror	r16
     ac2:	88 94       	clc
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     ac4:	00 c0       	rjmp	.+0      	; 0xac6 <L_3831+0xb0>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     ac6:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:420
				HI1 D1(1) QLO2(b0, 5) RORSC24(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR24(b1,2)		D2(4)	LO1 SCALE22(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC24(b1,4) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 2) SCROR24(b1,5) 	D2(4)	LO1 SCALE22(b1,6)	D3(2)
				HI1 D1(1) QLO2(b0, 1) RORSC24(b1,7) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 0)
     ac8:	b8 ba       	out	0x18, r11	; 24
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     aca:	00 c0       	rjmp	.+0      	; 0xacc <L_3831+0xb6>
     acc:	00 c0       	rjmp	.+0      	; 0xace <L_3831+0xb8>
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:420
				HI1 D1(1) QLO2(b0, 5) RORSC24(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR24(b1,2)		D2(4)	LO1 SCALE22(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC24(b1,4) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 2) SCROR24(b1,5) 	D2(4)	LO1 SCALE22(b1,6)	D3(2)
				HI1 D1(1) QLO2(b0, 1) RORSC24(b1,7) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 0)
     ace:	10 ff       	sbrs	r17, 0
     ad0:	98 bb       	out	0x18, r25	; 24
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:431
				}

				// Because Prescale on the middle byte also increments the data counter,
				// we have to do both halves of updating d2 here - negating it (in the
				// MOV_NEGD24 macro) and then adding E back into it
				MOV_NEGD24(b0,b1,d2) D2(4) LO1 ADDDE1(d2,e2) D3(1)
     ad2:	13 2f       	mov	r17, r19
     ad4:	51 11       	cpse	r21, r1
     ad6:	10 2f       	mov	r17, r16
     ad8:	e1 94       	neg	r14
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     ada:	00 c0       	rjmp	.+0      	; 0xadc <L_3831+0xc6>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     adc:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:431
				}

				// Because Prescale on the middle byte also increments the data counter,
				// we have to do both halves of updating d2 here - negating it (in the
				// MOV_NEGD24 macro) and then adding E back into it
				MOV_NEGD24(b0,b1,d2) D2(4) LO1 ADDDE1(d2,e2) D3(1)
     ade:	98 bb       	out	0x18, r25	; 24
     ae0:	ed 0e       	add	r14, r29
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     ae2:	00 c0       	rjmp	.+0      	; 0xae4 <L_3831+0xce>
     ae4:	00 c0       	rjmp	.+0      	; 0xae6 <L_3831+0xd0>
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:432

				// Because Prescale on the middle byte also increments the data counter,
				// we have to do both halves of updating d2 here - negating it (in the
				// MOV_NEGD24 macro) and then adding E back into it
				MOV_NEGD24(b0,b1,d2) D2(4) LO1 ADDDE1(d2,e2) D3(1)
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O0) 	D2(4)	LO1	PRESCALEA2(d0)	D3(2)
     ae6:	b8 ba       	out	0x18, r11	; 24
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     ae8:	00 c0       	rjmp	.+0      	; 0xaea <L_3831+0xd4>
     aea:	00 c0       	rjmp	.+0      	; 0xaec <L_3831+0xd6>
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:432

				// Because Prescale on the middle byte also increments the data counter,
				// we have to do both halves of updating d2 here - negating it (in the
				// MOV_NEGD24 macro) and then adding E back into it
				MOV_NEGD24(b0,b1,d2) D2(4) LO1 ADDDE1(d2,e2) D3(1)
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O0) 	D2(4)	LO1	PRESCALEA2(d0)	D3(2)
     aec:	17 ff       	sbrs	r17, 7
     aee:	98 bb       	out	0x18, r25	; 24
     af0:	30 81       	ld	r19, Z
     af2:	00 27       	eor	r16, r16
     af4:	88 94       	clc
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     af6:	00 c0       	rjmp	.+0      	; 0xaf8 <L_3831+0xe2>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     af8:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:432

				// Because Prescale on the middle byte also increments the data counter,
				// we have to do both halves of updating d2 here - negating it (in the
				// MOV_NEGD24 macro) and then adding E back into it
				MOV_NEGD24(b0,b1,d2) D2(4) LO1 ADDDE1(d2,e2) D3(1)
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O0) 	D2(4)	LO1	PRESCALEA2(d0)	D3(2)
     afa:	98 bb       	out	0x18, r25	; 24
     afc:	31 11       	cpse	r19, r1
     afe:	38 0f       	add	r19, r24
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     b00:	00 c0       	rjmp	.+0      	; 0xb02 <L_3831+0xec>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     b02:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:433
				// Because Prescale on the middle byte also increments the data counter,
				// we have to do both halves of updating d2 here - negating it (in the
				// MOV_NEGD24 macro) and then adding E back into it
				MOV_NEGD24(b0,b1,d2) D2(4) LO1 ADDDE1(d2,e2) D3(1)
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O0) 	D2(4)	LO1	PRESCALEA2(d0)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d0)	D2(4)	LO1	SCALE02(b1,0)	D3(2)
     b04:	b8 ba       	out	0x18, r11	; 24
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     b06:	00 c0       	rjmp	.+0      	; 0xb08 <L_3831+0xf2>
     b08:	00 c0       	rjmp	.+0      	; 0xb0a <L_3831+0xf4>
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:433
				// Because Prescale on the middle byte also increments the data counter,
				// we have to do both halves of updating d2 here - negating it (in the
				// MOV_NEGD24 macro) and then adding E back into it
				MOV_NEGD24(b0,b1,d2) D2(4) LO1 ADDDE1(d2,e2) D3(1)
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O0) 	D2(4)	LO1	PRESCALEA2(d0)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d0)	D2(4)	LO1	SCALE02(b1,0)	D3(2)
     b0a:	16 ff       	sbrs	r17, 6
     b0c:	98 bb       	out	0x18, r25	; 24
     b0e:	08 f4       	brcc	.+2      	; 0xb12 <L_5055>
     b10:	3f ef       	ldi	r19, 0xFF	; 255

00000b12 <L_5055>:
     b12:	81 95       	neg	r24
     b14:	88 94       	clc
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     b16:	00 c0       	rjmp	.+0      	; 0xb18 <L_5055+0x6>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     b18:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:433
				// Because Prescale on the middle byte also increments the data counter,
				// we have to do both halves of updating d2 here - negating it (in the
				// MOV_NEGD24 macro) and then adding E back into it
				MOV_NEGD24(b0,b1,d2) D2(4) LO1 ADDDE1(d2,e2) D3(1)
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O0) 	D2(4)	LO1	PRESCALEA2(d0)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d0)	D2(4)	LO1	SCALE02(b1,0)	D3(2)
     b1a:	98 bb       	out	0x18, r25	; 24
     b1c:	90 fc       	sbrc	r9, 0
     b1e:	03 0f       	add	r16, r19
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     b20:	00 c0       	rjmp	.+0      	; 0xb22 <L_5055+0x10>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     b22:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:434
				// we have to do both halves of updating d2 here - negating it (in the
				// MOV_NEGD24 macro) and then adding E back into it
				MOV_NEGD24(b0,b1,d2) D2(4) LO1 ADDDE1(d2,e2) D3(1)
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O0) 	D2(4)	LO1	PRESCALEA2(d0)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d0)	D2(4)	LO1	SCALE02(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC04(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
     b24:	b8 ba       	out	0x18, r11	; 24
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     b26:	00 c0       	rjmp	.+0      	; 0xb28 <L_5055+0x16>
     b28:	00 c0       	rjmp	.+0      	; 0xb2a <L_5055+0x18>
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:434
				// we have to do both halves of updating d2 here - negating it (in the
				// MOV_NEGD24 macro) and then adding E back into it
				MOV_NEGD24(b0,b1,d2) D2(4) LO1 ADDDE1(d2,e2) D3(1)
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O0) 	D2(4)	LO1	PRESCALEA2(d0)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d0)	D2(4)	LO1	SCALE02(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC04(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
     b2a:	15 ff       	sbrs	r17, 5
     b2c:	98 bb       	out	0x18, r25	; 24
     b2e:	07 95       	ror	r16
     b30:	88 94       	clc
     b32:	91 fc       	sbrc	r9, 1
     b34:	03 0f       	add	r16, r19
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     b36:	00 c0       	rjmp	.+0      	; 0xb38 <L_5055+0x26>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     b38:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:434
				// we have to do both halves of updating d2 here - negating it (in the
				// MOV_NEGD24 macro) and then adding E back into it
				MOV_NEGD24(b0,b1,d2) D2(4) LO1 ADDDE1(d2,e2) D3(1)
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O0) 	D2(4)	LO1	PRESCALEA2(d0)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d0)	D2(4)	LO1	SCALE02(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC04(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
     b3a:	98 bb       	out	0x18, r25	; 24
     b3c:	07 95       	ror	r16
     b3e:	88 94       	clc
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     b40:	00 c0       	rjmp	.+0      	; 0xb42 <L_5055+0x30>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     b42:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:435
				// MOV_NEGD24 macro) and then adding E back into it
				MOV_NEGD24(b0,b1,d2) D2(4) LO1 ADDDE1(d2,e2) D3(1)
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O0) 	D2(4)	LO1	PRESCALEA2(d0)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d0)	D2(4)	LO1	SCALE02(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC04(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR04(b1,2)		D2(4)	LO1 SCALE02(b1,3)	D3(2)
     b44:	b8 ba       	out	0x18, r11	; 24
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     b46:	00 c0       	rjmp	.+0      	; 0xb48 <L_5055+0x36>
     b48:	00 c0       	rjmp	.+0      	; 0xb4a <L_5055+0x38>
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:435
				// MOV_NEGD24 macro) and then adding E back into it
				MOV_NEGD24(b0,b1,d2) D2(4) LO1 ADDDE1(d2,e2) D3(1)
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O0) 	D2(4)	LO1	PRESCALEA2(d0)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d0)	D2(4)	LO1	SCALE02(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC04(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR04(b1,2)		D2(4)	LO1 SCALE02(b1,3)	D3(2)
     b4a:	14 ff       	sbrs	r17, 4
     b4c:	98 bb       	out	0x18, r25	; 24
     b4e:	92 fc       	sbrc	r9, 2
     b50:	03 0f       	add	r16, r19
     b52:	07 95       	ror	r16
     b54:	88 94       	clc
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     b56:	00 c0       	rjmp	.+0      	; 0xb58 <L_5055+0x46>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     b58:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:435
				// MOV_NEGD24 macro) and then adding E back into it
				MOV_NEGD24(b0,b1,d2) D2(4) LO1 ADDDE1(d2,e2) D3(1)
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O0) 	D2(4)	LO1	PRESCALEA2(d0)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d0)	D2(4)	LO1	SCALE02(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC04(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR04(b1,2)		D2(4)	LO1 SCALE02(b1,3)	D3(2)
     b5a:	98 bb       	out	0x18, r25	; 24
     b5c:	93 fc       	sbrc	r9, 3
     b5e:	03 0f       	add	r16, r19
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     b60:	00 c0       	rjmp	.+0      	; 0xb62 <L_5055+0x50>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     b62:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:436
				MOV_NEGD24(b0,b1,d2) D2(4) LO1 ADDDE1(d2,e2) D3(1)
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O0) 	D2(4)	LO1	PRESCALEA2(d0)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d0)	D2(4)	LO1	SCALE02(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC04(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR04(b1,2)		D2(4)	LO1 SCALE02(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC04(b1,4) 	D2(4)	LO1 RORCLC2(b1)  	D3(2)
     b64:	b8 ba       	out	0x18, r11	; 24
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     b66:	00 c0       	rjmp	.+0      	; 0xb68 <L_5055+0x56>
     b68:	00 c0       	rjmp	.+0      	; 0xb6a <L_5055+0x58>
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:436
				MOV_NEGD24(b0,b1,d2) D2(4) LO1 ADDDE1(d2,e2) D3(1)
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O0) 	D2(4)	LO1	PRESCALEA2(d0)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d0)	D2(4)	LO1	SCALE02(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC04(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR04(b1,2)		D2(4)	LO1 SCALE02(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC04(b1,4) 	D2(4)	LO1 RORCLC2(b1)  	D3(2)
     b6a:	13 ff       	sbrs	r17, 3
     b6c:	98 bb       	out	0x18, r25	; 24
     b6e:	07 95       	ror	r16
     b70:	88 94       	clc
     b72:	94 fc       	sbrc	r9, 4
     b74:	03 0f       	add	r16, r19
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     b76:	00 c0       	rjmp	.+0      	; 0xb78 <L_5055+0x66>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     b78:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:436
				MOV_NEGD24(b0,b1,d2) D2(4) LO1 ADDDE1(d2,e2) D3(1)
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O0) 	D2(4)	LO1	PRESCALEA2(d0)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d0)	D2(4)	LO1	SCALE02(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC04(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR04(b1,2)		D2(4)	LO1 SCALE02(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC04(b1,4) 	D2(4)	LO1 RORCLC2(b1)  	D3(2)
     b7a:	98 bb       	out	0x18, r25	; 24
     b7c:	07 95       	ror	r16
     b7e:	88 94       	clc
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     b80:	00 c0       	rjmp	.+0      	; 0xb82 <L_5055+0x70>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     b82:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:437
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O0) 	D2(4)	LO1	PRESCALEA2(d0)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d0)	D2(4)	LO1	SCALE02(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC04(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR04(b1,2)		D2(4)	LO1 SCALE02(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC04(b1,4) 	D2(4)	LO1 RORCLC2(b1)  	D3(2)
				HI1 D1(1) QLO2(b0, 2) SCROR04(b1,5) 	D2(4)	LO1 SCALE02(b1,6)	D3(2)
     b84:	b8 ba       	out	0x18, r11	; 24
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     b86:	00 c0       	rjmp	.+0      	; 0xb88 <L_5055+0x76>
     b88:	00 c0       	rjmp	.+0      	; 0xb8a <L_5055+0x78>
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:437
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O0) 	D2(4)	LO1	PRESCALEA2(d0)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d0)	D2(4)	LO1	SCALE02(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC04(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR04(b1,2)		D2(4)	LO1 SCALE02(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC04(b1,4) 	D2(4)	LO1 RORCLC2(b1)  	D3(2)
				HI1 D1(1) QLO2(b0, 2) SCROR04(b1,5) 	D2(4)	LO1 SCALE02(b1,6)	D3(2)
     b8a:	12 ff       	sbrs	r17, 2
     b8c:	98 bb       	out	0x18, r25	; 24
     b8e:	95 fc       	sbrc	r9, 5
     b90:	03 0f       	add	r16, r19
     b92:	07 95       	ror	r16
     b94:	88 94       	clc
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     b96:	00 c0       	rjmp	.+0      	; 0xb98 <L_5055+0x86>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     b98:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:437
				HI1 D1(1) QLO2(b0, 7) LDSCL4(b1,O0) 	D2(4)	LO1	PRESCALEA2(d0)	D3(2)
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d0)	D2(4)	LO1	SCALE02(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC04(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR04(b1,2)		D2(4)	LO1 SCALE02(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC04(b1,4) 	D2(4)	LO1 RORCLC2(b1)  	D3(2)
				HI1 D1(1) QLO2(b0, 2) SCROR04(b1,5) 	D2(4)	LO1 SCALE02(b1,6)	D3(2)
     b9a:	98 bb       	out	0x18, r25	; 24
     b9c:	96 fc       	sbrc	r9, 6
     b9e:	03 0f       	add	r16, r19
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     ba0:	00 c0       	rjmp	.+0      	; 0xba2 <L_5055+0x90>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     ba2:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:438
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d0)	D2(4)	LO1	SCALE02(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC04(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR04(b1,2)		D2(4)	LO1 SCALE02(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC04(b1,4) 	D2(4)	LO1 RORCLC2(b1)  	D3(2)
				HI1 D1(1) QLO2(b0, 2) SCROR04(b1,5) 	D2(4)	LO1 SCALE02(b1,6)	D3(2)
				HI1 D1(1) QLO2(b0, 1) RORSC04(b1,7) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
     ba4:	b8 ba       	out	0x18, r11	; 24
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     ba6:	00 c0       	rjmp	.+0      	; 0xba8 <L_5055+0x96>
     ba8:	00 c0       	rjmp	.+0      	; 0xbaa <L_5055+0x98>
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:438
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d0)	D2(4)	LO1	SCALE02(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC04(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR04(b1,2)		D2(4)	LO1 SCALE02(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC04(b1,4) 	D2(4)	LO1 RORCLC2(b1)  	D3(2)
				HI1 D1(1) QLO2(b0, 2) SCROR04(b1,5) 	D2(4)	LO1 SCALE02(b1,6)	D3(2)
				HI1 D1(1) QLO2(b0, 1) RORSC04(b1,7) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
     baa:	11 ff       	sbrs	r17, 1
     bac:	98 bb       	out	0x18, r25	; 24
     bae:	07 95       	ror	r16
     bb0:	88 94       	clc
     bb2:	97 fc       	sbrc	r9, 7
     bb4:	03 0f       	add	r16, r19
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     bb6:	00 c0       	rjmp	.+0      	; 0xbb8 <L_5055+0xa6>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     bb8:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:438
				HI1	D1(1) QLO2(b0, 6) PRESCALEB4(d0)	D2(4)	LO1	SCALE02(b1,0)	D3(2)
				HI1 D1(1) QLO2(b0, 5) RORSC04(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR04(b1,2)		D2(4)	LO1 SCALE02(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC04(b1,4) 	D2(4)	LO1 RORCLC2(b1)  	D3(2)
				HI1 D1(1) QLO2(b0, 2) SCROR04(b1,5) 	D2(4)	LO1 SCALE02(b1,6)	D3(2)
				HI1 D1(1) QLO2(b0, 1) RORSC04(b1,7) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
     bba:	98 bb       	out	0x18, r25	; 24
     bbc:	07 95       	ror	r16
     bbe:	88 94       	clc
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     bc0:	00 c0       	rjmp	.+0      	; 0xbc2 <L_5055+0xb0>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     bc2:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:439
				HI1 D1(1) QLO2(b0, 5) RORSC04(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR04(b1,2)		D2(4)	LO1 SCALE02(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC04(b1,4) 	D2(4)	LO1 RORCLC2(b1)  	D3(2)
				HI1 D1(1) QLO2(b0, 2) SCROR04(b1,5) 	D2(4)	LO1 SCALE02(b1,6)	D3(2)
				HI1 D1(1) QLO2(b0, 1) RORSC04(b1,7) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 0)
     bc4:	b8 ba       	out	0x18, r11	; 24
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     bc6:	00 c0       	rjmp	.+0      	; 0xbc8 <L_5055+0xb6>
     bc8:	00 c0       	rjmp	.+0      	; 0xbca <L_5055+0xb8>
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:439
				HI1 D1(1) QLO2(b0, 5) RORSC04(b1,1) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 4) SCROR04(b1,2)		D2(4)	LO1 SCALE02(b1,3)	D3(2)
				HI1 D1(1) QLO2(b0, 3) RORSC04(b1,4) 	D2(4)	LO1 RORCLC2(b1)  	D3(2)
				HI1 D1(1) QLO2(b0, 2) SCROR04(b1,5) 	D2(4)	LO1 SCALE02(b1,6)	D3(2)
				HI1 D1(1) QLO2(b0, 1) RORSC04(b1,7) 	D2(4)	LO1 RORCLC2(b1) 	D3(2)
				HI1 D1(1) QLO2(b0, 0)
     bca:	10 ff       	sbrs	r17, 0
     bcc:	98 bb       	out	0x18, r25	; 24
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:446
					case 4: D2(0) LO1 D3(0) HI1 D1(1) QLO2(b0,0)
					case 3: D2(0) LO1 D3(0) HI1 D1(1) QLO2(b0,0)
					case 2: D2(0) LO1 D3(0) HI1 D1(1) QLO2(b0,0)
					case 1: D2(0) LO1 D3(0) HI1 D1(1) QLO2(b0,0)
				}
				MOV_ADDDE04(b0,b1,d0,e0) D2(4) LO1 D3(5)
     bce:	13 2f       	mov	r17, r19
     bd0:	91 10       	cpse	r9, r1
     bd2:	10 2f       	mov	r17, r16
     bd4:	86 0f       	add	r24, r22
_Z3_dcILi2EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:52
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
template<> __attribute__((always_inline)) inline void _dc< 2>(register uint8_t & ) {asm __volatile__("rjmp .+0":::);}
     bd6:	00 c0       	rjmp	.+0      	; 0xbd8 <L_5055+0xc6>
_Z3_dcILi1EEvRh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:51
template<> __attribute__((always_inline)) inline void _dc<-4>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-3>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-2>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc<-1>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 0>(register uint8_t & ) {}
template<> __attribute__((always_inline)) inline void _dc< 1>(register uint8_t & ) {asm __volatile__("mov r0,r0":::);}
     bd8:	00 2c       	mov	r0, r0
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE15showRGBInternalER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:446
					case 4: D2(0) LO1 D3(0) HI1 D1(1) QLO2(b0,0)
					case 3: D2(0) LO1 D3(0) HI1 D1(1) QLO2(b0,0)
					case 2: D2(0) LO1 D3(0) HI1 D1(1) QLO2(b0,0)
					case 1: D2(0) LO1 D3(0) HI1 D1(1) QLO2(b0,0)
				}
				MOV_ADDDE04(b0,b1,d0,e0) D2(4) LO1 D3(5)
     bda:	98 bb       	out	0x18, r25	; 24
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:447
				ENDLOOP5
     bdc:	11 97       	sbiw	r26, 0x01	; 1
     bde:	09 f0       	breq	.+2      	; 0xbe2 <L_6024>
     be0:	86 ce       	rjmp	.-756    	; 0x8ee <L_2069+0x50>

00000be2 <L_6024>:
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:456

		#if (FASTLED_ALLOW_INTERRUPTS == 1)
		// stop using the clock juggler
		TCCR0A &= ~0x30;
		#endif
	}
     be2:	df 91       	pop	r29
     be4:	cf 91       	pop	r28
     be6:	1f 91       	pop	r17
     be8:	0f 91       	pop	r16
     bea:	ff 90       	pop	r15
     bec:	ef 90       	pop	r14
     bee:	df 90       	pop	r13
     bf0:	cf 90       	pop	r12
     bf2:	bf 90       	pop	r11
     bf4:	af 90       	pop	r10
     bf6:	9f 90       	pop	r9
     bf8:	08 95       	ret

00000bfa <ClocklessController<(unsigned char)0, 6, 8, 6, (EOrder)10, 0, false, 10>::showPixels(PixelController<(EOrder)10, 1, 4294967295ul>&)>:
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE10showPixelsER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:109

	virtual uint16_t getMaxRefreshRate() const { return 400; }

protected:

	virtual void showPixels(PixelController<RGB_ORDER> & pixels) {
     bfa:	ef 92       	push	r14
     bfc:	ff 92       	push	r15
     bfe:	0f 93       	push	r16
     c00:	1f 93       	push	r17
     c02:	cf 93       	push	r28
     c04:	df 93       	push	r29
     c06:	ec 01       	movw	r28, r24
     c08:	8b 01       	movw	r16, r22
_ZN8CMinWaitILi10EE4waitEv():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/fastled_delay.h:21
	CMinWait() { mLastMicros = 0; }

	void wait() {
		uint16_t diff;
		do {
			diff = (micros() & 0xFFFF) - mLastMicros;
     c0a:	56 d4       	rcall	.+2220   	; 0x14b8 <micros>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/fastled_delay.h:20
public:
	CMinWait() { mLastMicros = 0; }

	void wait() {
		uint16_t diff;
		do {
     c0c:	2f 85       	ldd	r18, Y+15	; 0x0f
     c0e:	38 89       	ldd	r19, Y+16	; 0x10
     c10:	62 1b       	sub	r22, r18
     c12:	73 0b       	sbc	r23, r19
     c14:	6a 30       	cpi	r22, 0x0A	; 10
     c16:	71 05       	cpc	r23, r1
     c18:	c0 f3       	brcs	.-16     	; 0xc0a <ClocklessController<(unsigned char)0, 6, 8, 6, (EOrder)10, 0, false, 10>::showPixels(PixelController<(EOrder)10, 1, 4294967295ul>&)+0x10>
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE10showPixelsER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:112

		mWait.wait();
		cli();
     c1a:	f8 94       	cli
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:114

		showRGBInternal(pixels);
     c1c:	c8 01       	movw	r24, r16
     c1e:	09 de       	rcall	.-1006   	; 0x832 <ClocklessController<(unsigned char)0, 6, 8, 6, (EOrder)10, 0, false, 10>::showRGBInternal(PixelController<(EOrder)10, 1, 4294967295ul>&)>
_ZN15PixelControllerIL6EOrder10ELi1ELm4294967295EE4sizeEv():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:321
                case BINARY_DITHER: init_binary_dithering(); break;
                default: d[0]=d[1]=d[2]=e[0]=e[1]=e[2]=0; break;
            }
        }

        __attribute__((always_inline)) inline int size() { return mLen; }
     c20:	f8 01       	movw	r30, r16
     c22:	e2 80       	ldd	r14, Z+2	; 0x02
     c24:	f3 80       	ldd	r15, Z+3	; 0x03
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE10showPixelsER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:118

		// Adjust the timer
#if (!defined(NO_CORRECTION) || (NO_CORRECTION == 0)) && (FASTLED_ALLOW_INTERRUPTS == 0)
        uint32_t microsTaken = (uint32_t)pixels.size() * (uint32_t)CLKS_TO_MICROS(24 * (T1 + T2 + T3));
     c26:	b7 01       	movw	r22, r14
     c28:	0f 2c       	mov	r0, r15
     c2a:	00 0c       	add	r0, r0
     c2c:	88 0b       	sbc	r24, r24
     c2e:	99 0b       	sbc	r25, r25
     c30:	20 ee       	ldi	r18, 0xE0	; 224
     c32:	31 e0       	ldi	r19, 0x01	; 1
     c34:	40 e0       	ldi	r20, 0x00	; 0
     c36:	50 e0       	ldi	r21, 0x00	; 0
     c38:	61 d5       	rcall	.+2754   	; 0x16fc <__mulsi3>
     c3a:	8b 01       	movw	r16, r22
     c3c:	9c 01       	movw	r18, r24
     c3e:	f4 e0       	ldi	r31, 0x04	; 4
     c40:	36 95       	lsr	r19
     c42:	27 95       	ror	r18
     c44:	17 95       	ror	r17
     c46:	07 95       	ror	r16
     c48:	fa 95       	dec	r31
     c4a:	d1 f7       	brne	.-12     	; 0xc40 <ClocklessController<(unsigned char)0, 6, 8, 6, (EOrder)10, 0, false, 10>::showPixels(PixelController<(EOrder)10, 1, 4294967295ul>&)+0x46>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:123

        // adust for approximate observed actal runtime (as of January 2015)
        // roughly 9.6 cycles per pixel, which is 0.6us/pixel at 16MHz
        // microsTaken += nLeds * 0.6 * CLKS_TO_MICROS(16);
        microsTaken += scale16by8(pixels.size(),(0.6 * 256) + 1) * CLKS_TO_MICROS(16);
     c4c:	c7 01       	movw	r24, r14
     c4e:	6b e9       	ldi	r22, 0x9B	; 155
     c50:	70 e0       	ldi	r23, 0x00	; 0
     c52:	43 d5       	rcall	.+2694   	; 0x16da <__mulhi3>
     c54:	49 2f       	mov	r20, r25
     c56:	50 e0       	ldi	r21, 0x00	; 0
     c58:	d9 01       	movw	r26, r18
     c5a:	c8 01       	movw	r24, r16
     c5c:	84 0f       	add	r24, r20
     c5e:	95 1f       	adc	r25, r21
     c60:	a1 1d       	adc	r26, r1
     c62:	b1 1d       	adc	r27, r1
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:131
        // this is because the ONE interrupt that might come in while interrupts
        // are disabled is queued up, and it will be serviced as soon as
        // interrupts are re-enabled.
        // This actually should technically also account for the runtime of the
        // interrupt handler itself, but we're just not going to worry about that.
        if( microsTaken > 1000) {
     c64:	89 3e       	cpi	r24, 0xE9	; 233
     c66:	f3 e0       	ldi	r31, 0x03	; 3
     c68:	9f 07       	cpc	r25, r31
     c6a:	a1 05       	cpc	r26, r1
     c6c:	b1 05       	cpc	r27, r1
     c6e:	90 f1       	brcs	.+100    	; 0xcd4 <ClocklessController<(unsigned char)0, 6, 8, 6, (EOrder)10, 0, false, 10>::showPixels(PixelController<(EOrder)10, 1, 4294967295ul>&)+0xda>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:140
            microsTaken -= 1000;

            // Now convert microseconds to 256ths of a second, approximately like this:
            // 250ths = (us/4)
            // 256ths = 250ths * (263/256);
            uint16_t x256ths = microsTaken >> 2;
     c70:	88 5e       	subi	r24, 0xE8	; 232
     c72:	93 40       	sbci	r25, 0x03	; 3
     c74:	a1 09       	sbc	r26, r1
     c76:	b1 09       	sbc	r27, r1
     c78:	22 e0       	ldi	r18, 0x02	; 2
     c7a:	b6 95       	lsr	r27
     c7c:	a7 95       	ror	r26
     c7e:	97 95       	ror	r25
     c80:	87 95       	ror	r24
     c82:	2a 95       	dec	r18
     c84:	d1 f7       	brne	.-12     	; 0xc7a <ClocklessController<(unsigned char)0, 6, 8, 6, (EOrder)10, 0, false, 10>::showPixels(PixelController<(EOrder)10, 1, 4294967295ul>&)+0x80>
scale16by8():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/lib8tion/scale8.h:421
LIB8STATIC_ALWAYS_INLINE uint16_t scale16by8( uint16_t i, fract8 scale )
{
#if SCALE16BY8_C == 1
    uint16_t result;
#if FASTLED_SCALE8_FIXED == 1
    result = (i * (1+((uint16_t)scale))) >> 8;
     c86:	9c 01       	movw	r18, r24
     c88:	43 e0       	ldi	r20, 0x03	; 3
     c8a:	22 0f       	add	r18, r18
     c8c:	33 1f       	adc	r19, r19
     c8e:	4a 95       	dec	r20
     c90:	e1 f7       	brne	.-8      	; 0xc8a <ClocklessController<(unsigned char)0, 6, 8, 6, (EOrder)10, 0, false, 10>::showPixels(PixelController<(EOrder)10, 1, 4294967295ul>&)+0x90>
     c92:	23 2f       	mov	r18, r19
     c94:	33 27       	eor	r19, r19
     c96:	60 91 d7 00 	lds	r22, 0x00D7	; 0x8000d7 <gTimeErrorAccum256ths>
     c9a:	70 e0       	ldi	r23, 0x00	; 0
     c9c:	86 0f       	add	r24, r22
     c9e:	97 1f       	adc	r25, r23
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE10showPixelsER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:143
            x256ths += scale16by8(x256ths,7);

            x256ths += gTimeErrorAccum256ths;
     ca0:	82 0f       	add	r24, r18
     ca2:	93 1f       	adc	r25, r19
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:144
            MS_COUNTER += (x256ths >> 8);
     ca4:	40 91 f4 00 	lds	r20, 0x00F4	; 0x8000f4 <millis_timer_millis>
     ca8:	50 91 f5 00 	lds	r21, 0x00F5	; 0x8000f5 <millis_timer_millis+0x1>
     cac:	60 91 f6 00 	lds	r22, 0x00F6	; 0x8000f6 <millis_timer_millis+0x2>
     cb0:	70 91 f7 00 	lds	r23, 0x00F7	; 0x8000f7 <millis_timer_millis+0x3>
     cb4:	29 2f       	mov	r18, r25
     cb6:	33 27       	eor	r19, r19
     cb8:	42 0f       	add	r20, r18
     cba:	53 1f       	adc	r21, r19
     cbc:	61 1d       	adc	r22, r1
     cbe:	71 1d       	adc	r23, r1
     cc0:	40 93 f4 00 	sts	0x00F4, r20	; 0x8000f4 <millis_timer_millis>
     cc4:	50 93 f5 00 	sts	0x00F5, r21	; 0x8000f5 <millis_timer_millis+0x1>
     cc8:	60 93 f6 00 	sts	0x00F6, r22	; 0x8000f6 <millis_timer_millis+0x2>
     ccc:	70 93 f7 00 	sts	0x00F7, r23	; 0x8000f7 <millis_timer_millis+0x3>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:145
            gTimeErrorAccum256ths = x256ths & 0xFF;
     cd0:	80 93 d7 00 	sts	0x00D7, r24	; 0x8000d7 <gTimeErrorAccum256ths>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:165
        MS_COUNTER += (microsTaken >> 10);
#endif

#endif

		sei();
     cd4:	78 94       	sei
_ZN8CMinWaitILi10EE4markEv():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/fastled_delay.h:25
			diff = (micros() & 0xFFFF) - mLastMicros;
		} while(diff < WAIT);
	}

	void mark() { mLastMicros = micros() & 0xFFFF; }
     cd6:	f0 d3       	rcall	.+2016   	; 0x14b8 <micros>
     cd8:	78 8b       	std	Y+16, r23	; 0x10
     cda:	6f 87       	std	Y+15, r22	; 0x0f
_ZN19ClocklessControllerILh0ELi6ELi8ELi6EL6EOrder10ELi0ELb0ELi10EE10showPixelsER15PixelControllerILS0_10ELi1ELm4294967295EE():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/platforms/avr/clockless_trinket.h:167
		mWait.mark();
	}
     cdc:	df 91       	pop	r29
     cde:	cf 91       	pop	r28
     ce0:	1f 91       	pop	r17
     ce2:	0f 91       	pop	r16
     ce4:	ff 90       	pop	r15
     ce6:	ef 90       	pop	r14
     ce8:	08 95       	ret

00000cea <PixelController<(EOrder)10, 1, 4294967295ul>::initOffsets(int)>:
_ZN15PixelControllerIL6EOrder10ELi1ELm4294967295EE11initOffsetsEi():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:205
        }

        void initOffsets(int len) {
          int nOffset = 0;
          for(int i = 0; i < LANES; i++) {
            mOffsets[i] = nOffset;
     cea:	fc 01       	movw	r30, r24
     cec:	11 8a       	std	Z+17, r1	; 0x11
     cee:	10 8a       	std	Z+16, r1	; 0x10
     cf0:	08 95       	ret

00000cf2 <PixelController<(EOrder)10, 1, 4294967295ul>::init_binary_dithering()>:
_ZN15PixelControllerIL6EOrder10ELi1ELm4294967295EE21init_binary_ditheringEv():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:229
            enable_dithering(dither);
            mAdvance = 0;
            initOffsets(len);
        }

        void init_binary_dithering() {
     cf2:	0f 93       	push	r16
     cf4:	1f 93       	push	r17
     cf6:	cf 93       	push	r28
     cf8:	df 93       	push	r29
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:264
            R++;

            // R is wrapped around at 2^ditherBits,
            // so if ditherBits is 2, R will cycle through (0,1,2,3)
            uint8_t ditherBits = VIRTUAL_BITS;
            R &= (0x01 << ditherBits) - 1;
     cfa:	20 91 93 00 	lds	r18, 0x0093	; 0x800093 <PixelController<(EOrder)10, 1, 4294967295ul>::init_binary_dithering()::R>
     cfe:	2f 5f       	subi	r18, 0xFF	; 255
     d00:	32 2f       	mov	r19, r18
     d02:	37 70       	andi	r19, 0x07	; 7
     d04:	30 93 93 00 	sts	0x0093, r19	; 0x800093 <PixelController<(EOrder)10, 1, 4294967295ul>::init_binary_dithering()::R>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:273
            // If 'ditherBits' is 2, Q here will cycle through (0,128,64,192)
            uint8_t Q = 0;

            // Reverse bits in a byte
            {
                if(R & 0x01) { Q |= 0x80; }
     d08:	20 ff       	sbrs	r18, 0
     d0a:	02 c0       	rjmp	.+4      	; 0xd10 <PixelController<(EOrder)10, 1, 4294967295ul>::init_binary_dithering()+0x1e>
     d0c:	20 e8       	ldi	r18, 0x80	; 128
     d0e:	01 c0       	rjmp	.+2      	; 0xd12 <PixelController<(EOrder)10, 1, 4294967295ul>::init_binary_dithering()+0x20>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:269
            R &= (0x01 << ditherBits) - 1;

            // Q is the "unscaled dither signal" itself.
            // It's initialized to the reversed bits of R.
            // If 'ditherBits' is 2, Q here will cycle through (0,128,64,192)
            uint8_t Q = 0;
     d10:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:274

            // Reverse bits in a byte
            {
                if(R & 0x01) { Q |= 0x80; }
                if(R & 0x02) { Q |= 0x40; }
     d12:	31 fd       	sbrc	r19, 1
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:274 (discriminator 1)
     d14:	20 64       	ori	r18, 0x40	; 64
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:275
                if(R & 0x04) { Q |= 0x20; }
     d16:	34 70       	andi	r19, 0x04	; 4
     d18:	09 f0       	breq	.+2      	; 0xd1c <PixelController<(EOrder)10, 1, 4294967295ul>::init_binary_dithering()+0x2a>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:275 (discriminator 1)
     d1a:	20 62       	ori	r18, 0x20	; 32
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:288
            // Now we adjust Q to fall in the center of each range,
            // instead of at the start of the range.
            // If ditherBits is 2, Q will be (0, 128, 64, 192) at first,
            // and this adjustment makes it (31, 159, 95, 223).
            if( ditherBits < 8) {
                Q += 0x01 << (7 - ditherBits);
     d1c:	20 5f       	subi	r18, 0xF0	; 240
     d1e:	fc 01       	movw	r30, r24
     d20:	ec 01       	movw	r28, r24
     d22:	23 96       	adiw	r28, 0x03	; 3
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:298
            // actual dithering.

            // Setup the initial D and E values
            for(int i = 0; i < 3; i++) {
                    uint8_t s = mScale.raw[i];
                    e[i] = s ? (256/s) + 1 : 0;
     d24:	00 e0       	ldi	r16, 0x00	; 0
     d26:	11 e0       	ldi	r17, 0x01	; 1
scale8():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/lib8tion/scale8.h:24
///  4 clocks AVR with MUL, 2 clocks ARM
LIB8STATIC_ALWAYS_INLINE uint8_t scale8( uint8_t i, fract8 scale)
{
#if SCALE8_C == 1
#if (FASTLED_SCALE8_FIXED == 1)
    return (((uint16_t)i) * (1+(uint16_t)(scale))) >> 8;
     d28:	30 e0       	ldi	r19, 0x00	; 0
_ZN15PixelControllerIL6EOrder10ELi1ELm4294967295EE21init_binary_ditheringEv():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:297
            // which is added to pixel values to affect the
            // actual dithering.

            // Setup the initial D and E values
            for(int i = 0; i < 3; i++) {
                    uint8_t s = mScale.raw[i];
     d2a:	64 85       	ldd	r22, Z+12	; 0x0c
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:298
                    e[i] = s ? (256/s) + 1 : 0;
     d2c:	66 23       	and	r22, r22
     d2e:	31 f0       	breq	.+12     	; 0xd3c <PixelController<(EOrder)10, 1, 4294967295ul>::init_binary_dithering()+0x4a>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:298 (discriminator 1)
     d30:	70 e0       	ldi	r23, 0x00	; 0
     d32:	c8 01       	movw	r24, r16
     d34:	10 d5       	rcall	.+2592   	; 0x1756 <__divmodhi4>
     d36:	41 e0       	ldi	r20, 0x01	; 1
     d38:	46 0f       	add	r20, r22
     d3a:	01 c0       	rjmp	.+2      	; 0xd3e <PixelController<(EOrder)10, 1, 4294967295ul>::init_binary_dithering()+0x4c>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:298
     d3c:	40 e0       	ldi	r20, 0x00	; 0
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:298 (discriminator 4)
     d3e:	41 87       	std	Z+9, r20	; 0x09
scale8():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/lib8tion/scale8.h:24 (discriminator 4)
     d40:	84 2f       	mov	r24, r20
     d42:	90 e0       	ldi	r25, 0x00	; 0
     d44:	01 96       	adiw	r24, 0x01	; 1
     d46:	b9 01       	movw	r22, r18
     d48:	c8 d4       	rcall	.+2448   	; 0x16da <__mulhi3>
_ZN15PixelControllerIL6EOrder10ELi1ELm4294967295EE21init_binary_ditheringEv():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:301 (discriminator 4)
                    d[i] = scale8(Q, e[i]);
#if (FASTLED_SCALE8_FIXED == 1)
                    if(d[i]) (d[i]--);
     d4a:	91 11       	cpse	r25, r1
     d4c:	02 c0       	rjmp	.+4      	; 0xd52 <PixelController<(EOrder)10, 1, 4294967295ul>::init_binary_dithering()+0x60>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:299

            // Setup the initial D and E values
            for(int i = 0; i < 3; i++) {
                    uint8_t s = mScale.raw[i];
                    e[i] = s ? (256/s) + 1 : 0;
                    d[i] = scale8(Q, e[i]);
     d4e:	16 82       	std	Z+6, r1	; 0x06
     d50:	02 c0       	rjmp	.+4      	; 0xd56 <PixelController<(EOrder)10, 1, 4294967295ul>::init_binary_dithering()+0x64>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:301 (discriminator 1)
#if (FASTLED_SCALE8_FIXED == 1)
                    if(d[i]) (d[i]--);
     d52:	91 50       	subi	r25, 0x01	; 1
     d54:	96 83       	std	Z+6, r25	; 0x06
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:303
#endif
                    if(e[i]) e[i]--;
     d56:	44 23       	and	r20, r20
     d58:	11 f0       	breq	.+4      	; 0xd5e <PixelController<(EOrder)10, 1, 4294967295ul>::init_binary_dithering()+0x6c>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:303 (discriminator 1)
     d5a:	41 50       	subi	r20, 0x01	; 1
     d5c:	41 87       	std	Z+9, r20	; 0x09
     d5e:	31 96       	adiw	r30, 0x01	; 1
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:296 (discriminator 2)
            // D and E form the "scaled dither signal"
            // which is added to pixel values to affect the
            // actual dithering.

            // Setup the initial D and E values
            for(int i = 0; i < 3; i++) {
     d60:	ce 17       	cp	r28, r30
     d62:	df 07       	cpc	r29, r31
     d64:	11 f7       	brne	.-60     	; 0xd2a <PixelController<(EOrder)10, 1, 4294967295ul>::init_binary_dithering()+0x38>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:306
                    if(d[i]) (d[i]--);
#endif
                    if(e[i]) e[i]--;
            }
#endif
        }
     d66:	df 91       	pop	r29
     d68:	cf 91       	pop	r28
     d6a:	1f 91       	pop	r17
     d6c:	0f 91       	pop	r16
     d6e:	08 95       	ret

00000d70 <CPixelLEDController<(EOrder)10, 1, 4294967295ul>::show(CRGB const*, int, CRGB)>:
_ZN19CPixelLEDControllerIL6EOrder10ELi1ELm4294967295EE4showEPK4CRGBiS2_():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:395

/// write the passed in rgb data out to the leds managed by this controller
///@param data the rgb data to write out to the strip
///@param nLeds the number of leds being written out
///@param scale the rgb scaling to apply to each led before writing it out
  virtual void show(const struct CRGB *data, int nLeds, CRGB scale) {
     d70:	ef 92       	push	r14
     d72:	ff 92       	push	r15
     d74:	0f 93       	push	r16
     d76:	1f 93       	push	r17
     d78:	cf 93       	push	r28
     d7a:	df 93       	push	r29
     d7c:	cd b7       	in	r28, 0x3d	; 61
     d7e:	de b7       	in	r29, 0x3e	; 62
     d80:	62 97       	sbiw	r28, 0x12	; 18
     d82:	0f b6       	in	r0, 0x3f	; 63
     d84:	f8 94       	cli
     d86:	de bf       	out	0x3e, r29	; 62
     d88:	0f be       	out	0x3f, r0	; 63
     d8a:	cd bf       	out	0x3d, r28	; 61
     d8c:	8c 01       	movw	r16, r24
     d8e:	7a 01       	movw	r14, r20
     d90:	f9 01       	movw	r30, r18
     d92:	dc 01       	movw	r26, r24
     d94:	1c 96       	adiw	r26, 0x0c	; 12
     d96:	8c 91       	ld	r24, X
_ZN15PixelControllerIL6EOrder10ELi1ELm4294967295EEC4EPK4CRGBiRS2_h():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:217
            mData += skip;
            mAdvance = (advance) ? 3+skip : 0;
            initOffsets(len);
        }

        PixelController(const CRGB *d, int len, CRGB & s, EDitherMode dither = BINARY_DITHER) : mData((const uint8_t*)d), mLen(len), mLenRemaining(len), mScale(s) {
     d98:	7a 83       	std	Y+2, r23	; 0x02
     d9a:	69 83       	std	Y+1, r22	; 0x01
     d9c:	5c 83       	std	Y+4, r21	; 0x04
     d9e:	4b 83       	std	Y+3, r20	; 0x03
     da0:	5e 83       	std	Y+6, r21	; 0x06
     da2:	4d 83       	std	Y+5, r20	; 0x05
_ZN4CRGBC4ERKS_():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/pixeltypes.h:155
    }

    /// allow copy construction
	inline CRGB(const CRGB& rhs) __attribute__((always_inline))
    {
        r = rhs.r;
     da4:	90 81       	ld	r25, Z
     da6:	9d 87       	std	Y+13, r25	; 0x0d
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/pixeltypes.h:156
        g = rhs.g;
     da8:	91 81       	ldd	r25, Z+1	; 0x01
     daa:	9e 87       	std	Y+14, r25	; 0x0e
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/pixeltypes.h:157
        b = rhs.b;
     dac:	92 81       	ldd	r25, Z+2	; 0x02
     dae:	9f 87       	std	Y+15, r25	; 0x0f
_ZN15PixelControllerIL6EOrder10ELi1ELm4294967295EE16enable_ditheringEh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:315
            return mLenRemaining >= n;
        }

        // toggle dithering enable
        void enable_dithering(EDitherMode dither) {
            switch(dither) {
     db0:	81 30       	cpi	r24, 0x01	; 1
     db2:	21 f4       	brne	.+8      	; 0xdbc <CPixelLEDController<(EOrder)10, 1, 4294967295ul>::show(CRGB const*, int, CRGB)+0x4c>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:316
                case BINARY_DITHER: init_binary_dithering(); break;
     db4:	ce 01       	movw	r24, r28
     db6:	01 96       	adiw	r24, 0x01	; 1
     db8:	9c df       	rcall	.-200    	; 0xcf2 <PixelController<(EOrder)10, 1, 4294967295ul>::init_binary_dithering()>
     dba:	06 c0       	rjmp	.+12     	; 0xdc8 <CPixelLEDController<(EOrder)10, 1, 4294967295ul>::show(CRGB const*, int, CRGB)+0x58>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:317
                default: d[0]=d[1]=d[2]=e[0]=e[1]=e[2]=0; break;
     dbc:	1c 86       	std	Y+12, r1	; 0x0c
     dbe:	1b 86       	std	Y+11, r1	; 0x0b
     dc0:	1a 86       	std	Y+10, r1	; 0x0a
     dc2:	19 86       	std	Y+9, r1	; 0x09
     dc4:	18 86       	std	Y+8, r1	; 0x08
     dc6:	1f 82       	std	Y+7, r1	; 0x07
_ZN15PixelControllerIL6EOrder10ELi1ELm4294967295EEC4EPK4CRGBiRS2_h():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:219
            initOffsets(len);
        }

        PixelController(const CRGB *d, int len, CRGB & s, EDitherMode dither = BINARY_DITHER) : mData((const uint8_t*)d), mLen(len), mLenRemaining(len), mScale(s) {
            enable_dithering(dither);
            mAdvance = 3;
     dc8:	83 e0       	ldi	r24, 0x03	; 3
     dca:	88 8b       	std	Y+16, r24	; 0x10
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:220
            initOffsets(len);
     dcc:	b7 01       	movw	r22, r14
     dce:	ce 01       	movw	r24, r28
     dd0:	01 96       	adiw	r24, 0x01	; 1
     dd2:	8b df       	rcall	.-234    	; 0xcea <PixelController<(EOrder)10, 1, 4294967295ul>::initOffsets(int)>
_ZN19CPixelLEDControllerIL6EOrder10ELi1ELm4294967295EE4showEPK4CRGBiS2_():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:397
///@param data the rgb data to write out to the strip
///@param nLeds the number of leds being written out
///@param scale the rgb scaling to apply to each led before writing it out
  virtual void show(const struct CRGB *data, int nLeds, CRGB scale) {
    PixelController<RGB_ORDER, LANES, MASK> pixels(data, nLeds, scale, getDither());
    showPixels(pixels);
     dd4:	d8 01       	movw	r26, r16
     dd6:	ed 91       	ld	r30, X+
     dd8:	fc 91       	ld	r31, X
     dda:	04 84       	ldd	r0, Z+12	; 0x0c
     ddc:	f5 85       	ldd	r31, Z+13	; 0x0d
     dde:	e0 2d       	mov	r30, r0
     de0:	be 01       	movw	r22, r28
     de2:	6f 5f       	subi	r22, 0xFF	; 255
     de4:	7f 4f       	sbci	r23, 0xFF	; 255
     de6:	c8 01       	movw	r24, r16
     de8:	09 95       	icall
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:398
  }
     dea:	62 96       	adiw	r28, 0x12	; 18
     dec:	0f b6       	in	r0, 0x3f	; 63
     dee:	f8 94       	cli
     df0:	de bf       	out	0x3e, r29	; 62
     df2:	0f be       	out	0x3f, r0	; 63
     df4:	cd bf       	out	0x3d, r28	; 61
     df6:	df 91       	pop	r29
     df8:	cf 91       	pop	r28
     dfa:	1f 91       	pop	r17
     dfc:	0f 91       	pop	r16
     dfe:	ff 90       	pop	r15
     e00:	ef 90       	pop	r14
     e02:	08 95       	ret

00000e04 <CPixelLEDController<(EOrder)10, 1, 4294967295ul>::showColor(CRGB const&, int, CRGB)>:
_ZN19CPixelLEDControllerIL6EOrder10ELi1ELm4294967295EE9showColorERK4CRGBiS2_():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:386

  /// set all the leds on the controller to a given color
  ///@param data the crgb color to set the leds to
  ///@param nLeds the numner of leds to set to this color
  ///@param scale the rgb scaling value for outputting color
  virtual void showColor(const struct CRGB & data, int nLeds, CRGB scale) {
     e04:	ef 92       	push	r14
     e06:	ff 92       	push	r15
     e08:	0f 93       	push	r16
     e0a:	1f 93       	push	r17
     e0c:	cf 93       	push	r28
     e0e:	df 93       	push	r29
     e10:	cd b7       	in	r28, 0x3d	; 61
     e12:	de b7       	in	r29, 0x3e	; 62
     e14:	62 97       	sbiw	r28, 0x12	; 18
     e16:	0f b6       	in	r0, 0x3f	; 63
     e18:	f8 94       	cli
     e1a:	de bf       	out	0x3e, r29	; 62
     e1c:	0f be       	out	0x3f, r0	; 63
     e1e:	cd bf       	out	0x3d, r28	; 61
     e20:	8c 01       	movw	r16, r24
     e22:	7a 01       	movw	r14, r20
     e24:	f9 01       	movw	r30, r18
     e26:	dc 01       	movw	r26, r24
     e28:	1c 96       	adiw	r26, 0x0c	; 12
     e2a:	8c 91       	ld	r24, X
_ZN15PixelControllerIL6EOrder10ELi1ELm4294967295EEC4ERK4CRGBiRS2_h():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:223
            enable_dithering(dither);
            mAdvance = 3;
            initOffsets(len);
        }

        PixelController(const CRGB &d, int len, CRGB & s, EDitherMode dither = BINARY_DITHER) : mData((const uint8_t*)&d), mLen(len), mLenRemaining(len), mScale(s) {
     e2c:	7a 83       	std	Y+2, r23	; 0x02
     e2e:	69 83       	std	Y+1, r22	; 0x01
     e30:	5c 83       	std	Y+4, r21	; 0x04
     e32:	4b 83       	std	Y+3, r20	; 0x03
     e34:	5e 83       	std	Y+6, r21	; 0x06
     e36:	4d 83       	std	Y+5, r20	; 0x05
_ZN4CRGBC4ERKS_():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/pixeltypes.h:155
    }

    /// allow copy construction
	inline CRGB(const CRGB& rhs) __attribute__((always_inline))
    {
        r = rhs.r;
     e38:	90 81       	ld	r25, Z
     e3a:	9d 87       	std	Y+13, r25	; 0x0d
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/pixeltypes.h:156
        g = rhs.g;
     e3c:	91 81       	ldd	r25, Z+1	; 0x01
     e3e:	9e 87       	std	Y+14, r25	; 0x0e
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/pixeltypes.h:157
        b = rhs.b;
     e40:	92 81       	ldd	r25, Z+2	; 0x02
     e42:	9f 87       	std	Y+15, r25	; 0x0f
_ZN15PixelControllerIL6EOrder10ELi1ELm4294967295EE16enable_ditheringEh():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:315
            return mLenRemaining >= n;
        }

        // toggle dithering enable
        void enable_dithering(EDitherMode dither) {
            switch(dither) {
     e44:	81 30       	cpi	r24, 0x01	; 1
     e46:	21 f4       	brne	.+8      	; 0xe50 <CPixelLEDController<(EOrder)10, 1, 4294967295ul>::showColor(CRGB const&, int, CRGB)+0x4c>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:316
                case BINARY_DITHER: init_binary_dithering(); break;
     e48:	ce 01       	movw	r24, r28
     e4a:	01 96       	adiw	r24, 0x01	; 1
     e4c:	52 df       	rcall	.-348    	; 0xcf2 <PixelController<(EOrder)10, 1, 4294967295ul>::init_binary_dithering()>
     e4e:	06 c0       	rjmp	.+12     	; 0xe5c <CPixelLEDController<(EOrder)10, 1, 4294967295ul>::showColor(CRGB const&, int, CRGB)+0x58>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:317
                default: d[0]=d[1]=d[2]=e[0]=e[1]=e[2]=0; break;
     e50:	1c 86       	std	Y+12, r1	; 0x0c
     e52:	1b 86       	std	Y+11, r1	; 0x0b
     e54:	1a 86       	std	Y+10, r1	; 0x0a
     e56:	19 86       	std	Y+9, r1	; 0x09
     e58:	18 86       	std	Y+8, r1	; 0x08
     e5a:	1f 82       	std	Y+7, r1	; 0x07
_ZN15PixelControllerIL6EOrder10ELi1ELm4294967295EEC4ERK4CRGBiRS2_h():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:225
            initOffsets(len);
        }

        PixelController(const CRGB &d, int len, CRGB & s, EDitherMode dither = BINARY_DITHER) : mData((const uint8_t*)&d), mLen(len), mLenRemaining(len), mScale(s) {
            enable_dithering(dither);
            mAdvance = 0;
     e5c:	18 8a       	std	Y+16, r1	; 0x10
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:226
            initOffsets(len);
     e5e:	b7 01       	movw	r22, r14
     e60:	ce 01       	movw	r24, r28
     e62:	01 96       	adiw	r24, 0x01	; 1
     e64:	42 df       	rcall	.-380    	; 0xcea <PixelController<(EOrder)10, 1, 4294967295ul>::initOffsets(int)>
_ZN19CPixelLEDControllerIL6EOrder10ELi1ELm4294967295EE9showColorERK4CRGBiS2_():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:388
  ///@param data the crgb color to set the leds to
  ///@param nLeds the numner of leds to set to this color
  ///@param scale the rgb scaling value for outputting color
  virtual void showColor(const struct CRGB & data, int nLeds, CRGB scale) {
    PixelController<RGB_ORDER, LANES, MASK> pixels(data, nLeds, scale, getDither());
    showPixels(pixels);
     e66:	d8 01       	movw	r26, r16
     e68:	ed 91       	ld	r30, X+
     e6a:	fc 91       	ld	r31, X
     e6c:	04 84       	ldd	r0, Z+12	; 0x0c
     e6e:	f5 85       	ldd	r31, Z+13	; 0x0d
     e70:	e0 2d       	mov	r30, r0
     e72:	be 01       	movw	r22, r28
     e74:	6f 5f       	subi	r22, 0xFF	; 255
     e76:	7f 4f       	sbci	r23, 0xFF	; 255
     e78:	c8 01       	movw	r24, r16
     e7a:	09 95       	icall
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/controller.h:389
  }
     e7c:	62 96       	adiw	r28, 0x12	; 18
     e7e:	0f b6       	in	r0, 0x3f	; 63
     e80:	f8 94       	cli
     e82:	de bf       	out	0x3e, r29	; 62
     e84:	0f be       	out	0x3f, r0	; 63
     e86:	cd bf       	out	0x3d, r28	; 61
     e88:	df 91       	pop	r29
     e8a:	cf 91       	pop	r28
     e8c:	1f 91       	pop	r17
     e8e:	0f 91       	pop	r16
     e90:	ff 90       	pop	r15
     e92:	ef 90       	pop	r14
     e94:	08 95       	ret

00000e96 <CLEDController::computeAdjustment(unsigned char, CRGB const&, CRGB const&)>:
_ZN14CLEDController17computeAdjustmentEhRK4CRGBS2_():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/FastLED.cpp:233
  } else {
    m_nMinMicros = 0;
  }
}

extern "C" int atexit(void (* /*func*/ )()) { return 0; }
     e96:	4f 92       	push	r4
     e98:	5f 92       	push	r5
     e9a:	6f 92       	push	r6
     e9c:	7f 92       	push	r7
     e9e:	af 92       	push	r10
     ea0:	bf 92       	push	r11
     ea2:	cf 92       	push	r12
     ea4:	df 92       	push	r13
     ea6:	ef 92       	push	r14
     ea8:	ff 92       	push	r15
     eaa:	0f 93       	push	r16
     eac:	1f 93       	push	r17
     eae:	cf 93       	push	r28
     eb0:	df 93       	push	r29
     eb2:	8c 01       	movw	r16, r24
_ZN4CRGBC4Ehhh():
     eb4:	fc 01       	movw	r30, r24
     eb6:	10 82       	st	Z, r1
     eb8:	11 82       	std	Z+1, r1	; 0x01
     eba:	12 82       	std	Z+2, r1	; 0x02
_ZN14CLEDController17computeAdjustmentEhRK4CRGBS2_():
     ebc:	66 23       	and	r22, r22
     ebe:	91 f1       	breq	.+100    	; 0xf24 <CLEDController::computeAdjustment(unsigned char, CRGB const&, CRGB const&)+0x8e>
     ec0:	ea 01       	movw	r28, r20
     ec2:	79 01       	movw	r14, r18
     ec4:	6c 01       	movw	r12, r24
     ec6:	5a 01       	movw	r10, r20
     ec8:	f3 e0       	ldi	r31, 0x03	; 3
     eca:	af 0e       	add	r10, r31
     ecc:	b1 1c       	adc	r11, r1
     ece:	46 2e       	mov	r4, r22
     ed0:	51 2c       	mov	r5, r1
     ed2:	61 2c       	mov	r6, r1
     ed4:	71 2c       	mov	r7, r1
     ed6:	69 91       	ld	r22, Y+
     ed8:	66 23       	and	r22, r22
     eda:	d9 f0       	breq	.+54     	; 0xf12 <CLEDController::computeAdjustment(unsigned char, CRGB const&, CRGB const&)+0x7c>
     edc:	f7 01       	movw	r30, r14
     ede:	20 81       	ld	r18, Z
     ee0:	22 23       	and	r18, r18
     ee2:	b9 f0       	breq	.+46     	; 0xf12 <CLEDController::computeAdjustment(unsigned char, CRGB const&, CRGB const&)+0x7c>
     ee4:	86 2f       	mov	r24, r22
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	a0 e0       	ldi	r26, 0x00	; 0
     eea:	b0 e0       	ldi	r27, 0x00	; 0
     eec:	bc 01       	movw	r22, r24
     eee:	cd 01       	movw	r24, r26
     ef0:	6f 5f       	subi	r22, 0xFF	; 255
     ef2:	7f 4f       	sbci	r23, 0xFF	; 255
     ef4:	8f 4f       	sbci	r24, 0xFF	; 255
     ef6:	9f 4f       	sbci	r25, 0xFF	; 255
     ef8:	30 e0       	ldi	r19, 0x00	; 0
     efa:	40 e0       	ldi	r20, 0x00	; 0
     efc:	50 e0       	ldi	r21, 0x00	; 0
     efe:	2f 5f       	subi	r18, 0xFF	; 255
     f00:	3f 4f       	sbci	r19, 0xFF	; 255
     f02:	4f 4f       	sbci	r20, 0xFF	; 255
     f04:	5f 4f       	sbci	r21, 0xFF	; 255
     f06:	fa d3       	rcall	.+2036   	; 0x16fc <__mulsi3>
     f08:	a3 01       	movw	r20, r6
     f0a:	92 01       	movw	r18, r4
     f0c:	f7 d3       	rcall	.+2030   	; 0x16fc <__mulsi3>
     f0e:	f6 01       	movw	r30, r12
     f10:	80 83       	st	Z, r24
     f12:	ff ef       	ldi	r31, 0xFF	; 255
     f14:	ef 1a       	sub	r14, r31
     f16:	ff 0a       	sbc	r15, r31
     f18:	8f ef       	ldi	r24, 0xFF	; 255
     f1a:	c8 1a       	sub	r12, r24
     f1c:	d8 0a       	sbc	r13, r24
     f1e:	ca 15       	cp	r28, r10
     f20:	db 05       	cpc	r29, r11
     f22:	c9 f6       	brne	.-78     	; 0xed6 <CLEDController::computeAdjustment(unsigned char, CRGB const&, CRGB const&)+0x40>
     f24:	c8 01       	movw	r24, r16
     f26:	df 91       	pop	r29
     f28:	cf 91       	pop	r28
     f2a:	1f 91       	pop	r17
     f2c:	0f 91       	pop	r16
     f2e:	ff 90       	pop	r15
     f30:	ef 90       	pop	r14
     f32:	df 90       	pop	r13
     f34:	cf 90       	pop	r12
     f36:	bf 90       	pop	r11
     f38:	af 90       	pop	r10
     f3a:	7f 90       	pop	r7
     f3c:	6f 90       	pop	r6
     f3e:	5f 90       	pop	r5
     f40:	4f 90       	pop	r4
     f42:	08 95       	ret

00000f44 <CFastLED::CFastLED()>:
_ZN8CFastLEDC2Ev():
     f44:	fc 01       	movw	r30, r24
     f46:	8f ef       	ldi	r24, 0xFF	; 255
     f48:	80 83       	st	Z, r24
     f4a:	12 82       	std	Z+2, r1	; 0x02
     f4c:	11 82       	std	Z+1, r1	; 0x01
     f4e:	14 86       	std	Z+12, r1	; 0x0c
     f50:	13 86       	std	Z+11, r1	; 0x0b
     f52:	8f ef       	ldi	r24, 0xFF	; 255
     f54:	9f ef       	ldi	r25, 0xFF	; 255
     f56:	dc 01       	movw	r26, r24
     f58:	87 83       	std	Z+7, r24	; 0x07
     f5a:	90 87       	std	Z+8, r25	; 0x08
     f5c:	a1 87       	std	Z+9, r26	; 0x09
     f5e:	b2 87       	std	Z+10, r27	; 0x0a
     f60:	08 95       	ret

00000f62 <CFastLED::countFPS(int)>:
_ZN8CFastLED8countFPSEi():
     f62:	cf 92       	push	r12
     f64:	df 92       	push	r13
     f66:	ef 92       	push	r14
     f68:	ff 92       	push	r15
     f6a:	0f 93       	push	r16
     f6c:	1f 93       	push	r17
     f6e:	cf 93       	push	r28
     f70:	df 93       	push	r29
     f72:	20 91 dc 00 	lds	r18, 0x00DC	; 0x8000dc <CFastLED::countFPS(int)::br>
     f76:	30 91 dd 00 	lds	r19, 0x00DD	; 0x8000dd <CFastLED::countFPS(int)::br+0x1>
     f7a:	a9 01       	movw	r20, r18
     f7c:	4f 5f       	subi	r20, 0xFF	; 255
     f7e:	5f 4f       	sbci	r21, 0xFF	; 255
     f80:	50 93 dd 00 	sts	0x00DD, r21	; 0x8000dd <CFastLED::countFPS(int)::br+0x1>
     f84:	40 93 dc 00 	sts	0x00DC, r20	; 0x8000dc <CFastLED::countFPS(int)::br>
     f88:	26 17       	cp	r18, r22
     f8a:	37 07       	cpc	r19, r23
     f8c:	6c f1       	brlt	.+90     	; 0xfe8 <CFastLED::countFPS(int)+0x86>
     f8e:	ec 01       	movw	r28, r24
     f90:	87 d2       	rcall	.+1294   	; 0x14a0 <millis>
     f92:	8b 01       	movw	r16, r22
     f94:	9c 01       	movw	r18, r24
     f96:	80 91 dc 00 	lds	r24, 0x00DC	; 0x8000dc <CFastLED::countFPS(int)::br>
     f9a:	90 91 dd 00 	lds	r25, 0x00DD	; 0x8000dd <CFastLED::countFPS(int)::br+0x1>
     f9e:	68 ee       	ldi	r22, 0xE8	; 232
     fa0:	73 e0       	ldi	r23, 0x03	; 3
     fa2:	9b d3       	rcall	.+1846   	; 0x16da <__mulhi3>
     fa4:	bc 01       	movw	r22, r24
     fa6:	99 0f       	add	r25, r25
     fa8:	88 0b       	sbc	r24, r24
     faa:	99 0b       	sbc	r25, r25
     fac:	c0 90 d8 00 	lds	r12, 0x00D8	; 0x8000d8 <CFastLED::countFPS(int)::lastframe>
     fb0:	d0 90 d9 00 	lds	r13, 0x00D9	; 0x8000d9 <CFastLED::countFPS(int)::lastframe+0x1>
     fb4:	e0 90 da 00 	lds	r14, 0x00DA	; 0x8000da <CFastLED::countFPS(int)::lastframe+0x2>
     fb8:	f0 90 db 00 	lds	r15, 0x00DB	; 0x8000db <CFastLED::countFPS(int)::lastframe+0x3>
     fbc:	a9 01       	movw	r20, r18
     fbe:	98 01       	movw	r18, r16
     fc0:	2c 19       	sub	r18, r12
     fc2:	3d 09       	sbc	r19, r13
     fc4:	4e 09       	sbc	r20, r14
     fc6:	5f 09       	sbc	r21, r15
     fc8:	d9 d3       	rcall	.+1970   	; 0x177c <__udivmodsi4>
     fca:	3a 83       	std	Y+2, r19	; 0x02
     fcc:	29 83       	std	Y+1, r18	; 0x01
     fce:	10 92 dd 00 	sts	0x00DD, r1	; 0x8000dd <CFastLED::countFPS(int)::br+0x1>
     fd2:	10 92 dc 00 	sts	0x00DC, r1	; 0x8000dc <CFastLED::countFPS(int)::br>
     fd6:	64 d2       	rcall	.+1224   	; 0x14a0 <millis>
     fd8:	60 93 d8 00 	sts	0x00D8, r22	; 0x8000d8 <CFastLED::countFPS(int)::lastframe>
     fdc:	70 93 d9 00 	sts	0x00D9, r23	; 0x8000d9 <CFastLED::countFPS(int)::lastframe+0x1>
     fe0:	80 93 da 00 	sts	0x00DA, r24	; 0x8000da <CFastLED::countFPS(int)::lastframe+0x2>
     fe4:	90 93 db 00 	sts	0x00DB, r25	; 0x8000db <CFastLED::countFPS(int)::lastframe+0x3>
     fe8:	df 91       	pop	r29
     fea:	cf 91       	pop	r28
     fec:	1f 91       	pop	r17
     fee:	0f 91       	pop	r16
     ff0:	ff 90       	pop	r15
     ff2:	ef 90       	pop	r14
     ff4:	df 90       	pop	r13
     ff6:	cf 90       	pop	r12
     ff8:	08 95       	ret

00000ffa <CFastLED::show(unsigned char)>:
_ZN8CFastLED4showEh():
     ffa:	af 92       	push	r10
     ffc:	bf 92       	push	r11
     ffe:	cf 92       	push	r12
    1000:	df 92       	push	r13
    1002:	ef 92       	push	r14
    1004:	ff 92       	push	r15
    1006:	0f 93       	push	r16
    1008:	1f 93       	push	r17
    100a:	cf 93       	push	r28
    100c:	df 93       	push	r29
    100e:	00 d0       	rcall	.+0      	; 0x1010 <CFastLED::show(unsigned char)+0x16>
    1010:	1f 92       	push	r1
    1012:	cd b7       	in	r28, 0x3d	; 61
    1014:	de b7       	in	r29, 0x3e	; 62
    1016:	7c 01       	movw	r14, r24
    1018:	d6 2e       	mov	r13, r22
    101a:	f7 01       	movw	r30, r14
    101c:	83 81       	ldd	r24, Z+3	; 0x03
    101e:	94 81       	ldd	r25, Z+4	; 0x04
    1020:	a5 81       	ldd	r26, Z+5	; 0x05
    1022:	b6 81       	ldd	r27, Z+6	; 0x06
    1024:	89 2b       	or	r24, r25
    1026:	8a 2b       	or	r24, r26
    1028:	8b 2b       	or	r24, r27
    102a:	c9 f0       	breq	.+50     	; 0x105e <CFastLED::show(unsigned char)+0x64>
    102c:	45 d2       	rcall	.+1162   	; 0x14b8 <micros>
    102e:	00 91 de 00 	lds	r16, 0x00DE	; 0x8000de <lastshow>
    1032:	10 91 df 00 	lds	r17, 0x00DF	; 0x8000df <lastshow+0x1>
    1036:	20 91 e0 00 	lds	r18, 0x00E0	; 0x8000e0 <lastshow+0x2>
    103a:	30 91 e1 00 	lds	r19, 0x00E1	; 0x8000e1 <lastshow+0x3>
    103e:	dc 01       	movw	r26, r24
    1040:	cb 01       	movw	r24, r22
    1042:	80 1b       	sub	r24, r16
    1044:	91 0b       	sbc	r25, r17
    1046:	a2 0b       	sbc	r26, r18
    1048:	b3 0b       	sbc	r27, r19
    104a:	f7 01       	movw	r30, r14
    104c:	03 81       	ldd	r16, Z+3	; 0x03
    104e:	14 81       	ldd	r17, Z+4	; 0x04
    1050:	25 81       	ldd	r18, Z+5	; 0x05
    1052:	36 81       	ldd	r19, Z+6	; 0x06
    1054:	80 17       	cp	r24, r16
    1056:	91 07       	cpc	r25, r17
    1058:	a2 07       	cpc	r26, r18
    105a:	b3 07       	cpc	r27, r19
    105c:	f0 f2       	brcs	.-68     	; 0x101a <CFastLED::show(unsigned char)+0x20>
    105e:	2c d2       	rcall	.+1112   	; 0x14b8 <micros>
    1060:	60 93 de 00 	sts	0x00DE, r22	; 0x8000de <lastshow>
    1064:	70 93 df 00 	sts	0x00DF, r23	; 0x8000df <lastshow+0x1>
    1068:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <lastshow+0x2>
    106c:	90 93 e1 00 	sts	0x00E1, r25	; 0x8000e1 <lastshow+0x3>
    1070:	d7 01       	movw	r26, r14
    1072:	1b 96       	adiw	r26, 0x0b	; 11
    1074:	ed 91       	ld	r30, X+
    1076:	fc 91       	ld	r31, X
    1078:	1c 97       	sbiw	r26, 0x0c	; 12
    107a:	30 97       	sbiw	r30, 0x00	; 0
    107c:	51 f0       	breq	.+20     	; 0x1092 <CFastLED::show(unsigned char)+0x98>
    107e:	d7 01       	movw	r26, r14
    1080:	17 96       	adiw	r26, 0x07	; 7
    1082:	4d 91       	ld	r20, X+
    1084:	5d 91       	ld	r21, X+
    1086:	6d 91       	ld	r22, X+
    1088:	7c 91       	ld	r23, X
    108a:	1a 97       	sbiw	r26, 0x0a	; 10
    108c:	8d 2d       	mov	r24, r13
    108e:	09 95       	icall
    1090:	d8 2e       	mov	r13, r24
_ZN14CLEDController4headEv():
    1092:	00 91 e4 00 	lds	r16, 0x00E4	; 0x8000e4 <CLEDController::m_pHead>
    1096:	10 91 e5 00 	lds	r17, 0x00E5	; 0x8000e5 <CLEDController::m_pHead+0x1>
_ZN8CFastLED4showEh():
    109a:	01 15       	cp	r16, r1
    109c:	11 05       	cpc	r17, r1
    109e:	71 f1       	breq	.+92     	; 0x10fc <CFastLED::show(unsigned char)+0x102>
    10a0:	f8 01       	movw	r30, r16
    10a2:	c4 84       	ldd	r12, Z+12	; 0x0c
    10a4:	d7 01       	movw	r26, r14
    10a6:	11 96       	adiw	r26, 0x01	; 1
    10a8:	8d 91       	ld	r24, X+
    10aa:	9c 91       	ld	r25, X
    10ac:	12 97       	sbiw	r26, 0x02	; 2
    10ae:	84 36       	cpi	r24, 0x64	; 100
    10b0:	91 05       	cpc	r25, r1
    10b2:	08 f4       	brcc	.+2      	; 0x10b6 <CFastLED::show(unsigned char)+0xbc>
_ZN14CLEDController9setDitherEh():
    10b4:	14 86       	std	Z+12, r1	; 0x0c
_ZN14CLEDController8showLedsEh():
    10b6:	d8 01       	movw	r26, r16
    10b8:	ed 91       	ld	r30, X+
    10ba:	fc 91       	ld	r31, X
    10bc:	a2 80       	ldd	r10, Z+2	; 0x02
    10be:	b3 80       	ldd	r11, Z+3	; 0x03
_ZN14CLEDController13getAdjustmentEh():
    10c0:	98 01       	movw	r18, r16
    10c2:	27 5f       	subi	r18, 0xF7	; 247
    10c4:	3f 4f       	sbci	r19, 0xFF	; 255
    10c6:	a8 01       	movw	r20, r16
    10c8:	4a 5f       	subi	r20, 0xFA	; 250
    10ca:	5f 4f       	sbci	r21, 0xFF	; 255
    10cc:	6d 2d       	mov	r22, r13
    10ce:	ce 01       	movw	r24, r28
    10d0:	01 96       	adiw	r24, 0x01	; 1
    10d2:	e1 de       	rcall	.-574    	; 0xe96 <CLEDController::computeAdjustment(unsigned char, CRGB const&, CRGB const&)>
_ZN14CLEDController8showLedsEh():
    10d4:	f8 01       	movw	r30, r16
    10d6:	45 85       	ldd	r20, Z+13	; 0x0d
    10d8:	56 85       	ldd	r21, Z+14	; 0x0e
    10da:	62 81       	ldd	r22, Z+2	; 0x02
    10dc:	73 81       	ldd	r23, Z+3	; 0x03
    10de:	9e 01       	movw	r18, r28
    10e0:	2f 5f       	subi	r18, 0xFF	; 255
    10e2:	3f 4f       	sbci	r19, 0xFF	; 255
    10e4:	c8 01       	movw	r24, r16
    10e6:	f5 01       	movw	r30, r10
    10e8:	09 95       	icall
_ZN14CLEDController9setDitherEh():
    10ea:	d8 01       	movw	r26, r16
    10ec:	1c 96       	adiw	r26, 0x0c	; 12
    10ee:	cc 92       	st	X, r12
    10f0:	1c 97       	sbiw	r26, 0x0c	; 12
    10f2:	14 96       	adiw	r26, 0x04	; 4
    10f4:	0d 91       	ld	r16, X+
    10f6:	1c 91       	ld	r17, X
    10f8:	15 97       	sbiw	r26, 0x05	; 5
_ZN8CFastLED4showEh():
    10fa:	cf cf       	rjmp	.-98     	; 0x109a <CFastLED::show(unsigned char)+0xa0>
    10fc:	69 e1       	ldi	r22, 0x19	; 25
    10fe:	70 e0       	ldi	r23, 0x00	; 0
    1100:	c7 01       	movw	r24, r14
    1102:	2f df       	rcall	.-418    	; 0xf62 <CFastLED::countFPS(int)>
    1104:	0f 90       	pop	r0
    1106:	0f 90       	pop	r0
    1108:	0f 90       	pop	r0
    110a:	df 91       	pop	r29
    110c:	cf 91       	pop	r28
    110e:	1f 91       	pop	r17
    1110:	0f 91       	pop	r16
    1112:	ff 90       	pop	r15
    1114:	ef 90       	pop	r14
    1116:	df 90       	pop	r13
    1118:	cf 90       	pop	r12
    111a:	bf 90       	pop	r11
    111c:	af 90       	pop	r10
    111e:	08 95       	ret

00001120 <CFastLED::setMaxRefreshRate(unsigned int, bool)>:
_ZN8CFastLED17setMaxRefreshRateEjb():
    1120:	cf 93       	push	r28
    1122:	df 93       	push	r29
    1124:	ec 01       	movw	r28, r24
    1126:	44 23       	and	r20, r20
    1128:	d9 f0       	breq	.+54     	; 0x1160 <CFastLED::setMaxRefreshRate(unsigned int, bool)+0x40>
    112a:	61 15       	cp	r22, r1
    112c:	71 05       	cpc	r23, r1
    112e:	61 f1       	breq	.+88     	; 0x1188 <CFastLED::setMaxRefreshRate(unsigned int, bool)+0x68>
    1130:	9b 01       	movw	r18, r22
    1132:	40 e0       	ldi	r20, 0x00	; 0
    1134:	50 e0       	ldi	r21, 0x00	; 0
    1136:	60 e4       	ldi	r22, 0x40	; 64
    1138:	72 e4       	ldi	r23, 0x42	; 66
    113a:	8f e0       	ldi	r24, 0x0F	; 15
    113c:	90 e0       	ldi	r25, 0x00	; 0
    113e:	40 d3       	rcall	.+1664   	; 0x17c0 <__divmodsi4>
    1140:	8b 81       	ldd	r24, Y+3	; 0x03
    1142:	9c 81       	ldd	r25, Y+4	; 0x04
    1144:	ad 81       	ldd	r26, Y+5	; 0x05
    1146:	be 81       	ldd	r27, Y+6	; 0x06
    1148:	82 17       	cp	r24, r18
    114a:	93 07       	cpc	r25, r19
    114c:	a4 07       	cpc	r26, r20
    114e:	b5 07       	cpc	r27, r21
    1150:	10 f4       	brcc	.+4      	; 0x1156 <CFastLED::setMaxRefreshRate(unsigned int, bool)+0x36>
    1152:	da 01       	movw	r26, r20
    1154:	c9 01       	movw	r24, r18
    1156:	8b 83       	std	Y+3, r24	; 0x03
    1158:	9c 83       	std	Y+4, r25	; 0x04
    115a:	ad 83       	std	Y+5, r26	; 0x05
    115c:	be 83       	std	Y+6, r27	; 0x06
    115e:	14 c0       	rjmp	.+40     	; 0x1188 <CFastLED::setMaxRefreshRate(unsigned int, bool)+0x68>
    1160:	61 15       	cp	r22, r1
    1162:	71 05       	cpc	r23, r1
    1164:	69 f0       	breq	.+26     	; 0x1180 <CFastLED::setMaxRefreshRate(unsigned int, bool)+0x60>
    1166:	9b 01       	movw	r18, r22
    1168:	40 e0       	ldi	r20, 0x00	; 0
    116a:	50 e0       	ldi	r21, 0x00	; 0
    116c:	60 e4       	ldi	r22, 0x40	; 64
    116e:	72 e4       	ldi	r23, 0x42	; 66
    1170:	8f e0       	ldi	r24, 0x0F	; 15
    1172:	90 e0       	ldi	r25, 0x00	; 0
    1174:	25 d3       	rcall	.+1610   	; 0x17c0 <__divmodsi4>
    1176:	2b 83       	std	Y+3, r18	; 0x03
    1178:	3c 83       	std	Y+4, r19	; 0x04
    117a:	4d 83       	std	Y+5, r20	; 0x05
    117c:	5e 83       	std	Y+6, r21	; 0x06
    117e:	04 c0       	rjmp	.+8      	; 0x1188 <CFastLED::setMaxRefreshRate(unsigned int, bool)+0x68>
    1180:	1b 82       	std	Y+3, r1	; 0x03
    1182:	1c 82       	std	Y+4, r1	; 0x04
    1184:	1d 82       	std	Y+5, r1	; 0x05
    1186:	1e 82       	std	Y+6, r1	; 0x06
    1188:	df 91       	pop	r29
    118a:	cf 91       	pop	r28
    118c:	08 95       	ret

0000118e <CFastLED::addLeds(CLEDController*, CRGB*, int, int)>:
_ZN8CFastLED7addLedsEP14CLEDControllerP4CRGBii():
    118e:	cf 92       	push	r12
    1190:	df 92       	push	r13
    1192:	ef 92       	push	r14
    1194:	ff 92       	push	r15
    1196:	0f 93       	push	r16
    1198:	1f 93       	push	r17
    119a:	cf 93       	push	r28
    119c:	df 93       	push	r29
    119e:	ec 01       	movw	r28, r24
    11a0:	7b 01       	movw	r14, r22
    11a2:	6a 01       	movw	r12, r20
    11a4:	89 01       	movw	r16, r18
    11a6:	12 16       	cp	r1, r18
    11a8:	13 06       	cpc	r1, r19
    11aa:	1c f0       	brlt	.+6      	; 0x11b2 <CFastLED::addLeds(CLEDController*, CRGB*, int, int)+0x24>
    11ac:	8a 01       	movw	r16, r20
    11ae:	c1 2c       	mov	r12, r1
    11b0:	d1 2c       	mov	r13, r1
    11b2:	e8 81       	ld	r30, Y
    11b4:	f9 81       	ldd	r31, Y+1	; 0x01
    11b6:	04 80       	ldd	r0, Z+4	; 0x04
    11b8:	f5 81       	ldd	r31, Z+5	; 0x05
    11ba:	e0 2d       	mov	r30, r0
    11bc:	ce 01       	movw	r24, r28
    11be:	09 95       	icall
_ZN14CLEDController7setLedsEP4CRGBi():
    11c0:	c6 01       	movw	r24, r12
    11c2:	63 e0       	ldi	r22, 0x03	; 3
    11c4:	70 e0       	ldi	r23, 0x00	; 0
    11c6:	89 d2       	rcall	.+1298   	; 0x16da <__mulhi3>
    11c8:	8e 0d       	add	r24, r14
    11ca:	9f 1d       	adc	r25, r15
    11cc:	9b 83       	std	Y+3, r25	; 0x03
    11ce:	8a 83       	std	Y+2, r24	; 0x02
    11d0:	1e 87       	std	Y+14, r17	; 0x0e
    11d2:	0d 87       	std	Y+13, r16	; 0x0d
_ZN8CFastLED7addLedsEP14CLEDControllerP4CRGBii():
    11d4:	e8 81       	ld	r30, Y
    11d6:	f9 81       	ldd	r31, Y+1	; 0x01
    11d8:	02 84       	ldd	r0, Z+10	; 0x0a
    11da:	f3 85       	ldd	r31, Z+11	; 0x0b
    11dc:	e0 2d       	mov	r30, r0
    11de:	ce 01       	movw	r24, r28
    11e0:	09 95       	icall
    11e2:	41 e0       	ldi	r20, 0x01	; 1
    11e4:	bc 01       	movw	r22, r24
    11e6:	86 ee       	ldi	r24, 0xE6	; 230
    11e8:	90 e0       	ldi	r25, 0x00	; 0
    11ea:	9a df       	rcall	.-204    	; 0x1120 <CFastLED::setMaxRefreshRate(unsigned int, bool)>
    11ec:	ce 01       	movw	r24, r28
    11ee:	df 91       	pop	r29
    11f0:	cf 91       	pop	r28
    11f2:	1f 91       	pop	r17
    11f4:	0f 91       	pop	r16
    11f6:	ff 90       	pop	r15
    11f8:	ef 90       	pop	r14
    11fa:	df 90       	pop	r13
    11fc:	cf 90       	pop	r12
    11fe:	08 95       	ret

00001200 <yield>:
yield():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/FastLED.cpp:236

#ifdef FASTLED_NEEDS_YIELD
extern "C" void yield(void) { }
    1200:	08 95       	ret

00001202 <_GLOBAL__sub_I_pSmartMatrix>:
_GLOBAL__sub_I_pSmartMatrix():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/FastLED.cpp:13

FASTLED_NAMESPACE_BEGIN

void *pSmartMatrix = NULL;

CFastLED FastLED;
    1202:	86 ee       	ldi	r24, 0xE6	; 230
    1204:	90 e0       	ldi	r25, 0x00	; 0
    1206:	9e ce       	rjmp	.-708    	; 0xf44 <CFastLED::CFastLED()>

00001208 <hsv2rgb_rainbow(CHSV const&, CRGB&)>:
_Z15hsv2rgb_rainbowRK4CHSVR4CRGB():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:279
#define K171 171
#define K170 170
#define K85  85

void hsv2rgb_rainbow( const CHSV& hsv, CRGB& rgb)
{
    1208:	cf 93       	push	r28
    120a:	df 93       	push	r29
    120c:	dc 01       	movw	r26, r24
    120e:	eb 01       	movw	r28, r22
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:300
    // Gscale: what to scale green down by.
    // Depends GREATLY on your particular LEDs
    const uint8_t Gscale = 0;
    
    
    uint8_t hue = hsv.hue;
    1210:	4c 91       	ld	r20, X
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:301
    uint8_t sat = hsv.sat;
    1212:	11 96       	adiw	r26, 0x01	; 1
    1214:	ec 91       	ld	r30, X
    1216:	11 97       	sbiw	r26, 0x01	; 1
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:302
    uint8_t val = hsv.val;
    1218:	12 96       	adiw	r26, 0x02	; 2
    121a:	fc 91       	ld	r31, X
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:304
    
    uint8_t offset = hue & 0x1F; // 0..31
    121c:	a4 2f       	mov	r26, r20
    121e:	af 71       	andi	r26, 0x1F	; 31
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:313
    {
#if defined(__AVR__)
        // Left to its own devices, gcc turns "x <<= 3" into a loop
        // It's much faster and smaller to just do three single-bit shifts
        // So this business is to force that.
        offset8 <<= 1;
    1220:	aa 0f       	add	r26, r26
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:315
        asm volatile("");
        offset8 <<= 1;
    1222:	aa 0f       	add	r26, r26
scale8():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED\lib8tion/scale8.h:24
    1224:	aa 0f       	add	r26, r26
    1226:	b0 e0       	ldi	r27, 0x00	; 0
    1228:	cd 01       	movw	r24, r26
    122a:	66 e5       	ldi	r22, 0x56	; 86
    122c:	70 e0       	ldi	r23, 0x00	; 0
    122e:	55 d2       	rcall	.+1194   	; 0x16da <__mulhi3>
    1230:	29 2f       	mov	r18, r25
    1232:	84 2f       	mov	r24, r20
    1234:	80 74       	andi	r24, 0x40	; 64
    1236:	34 2f       	mov	r19, r20
    1238:	30 72       	andi	r19, 0x20	; 32
_Z15hsv2rgb_rainbowRK4CHSVR4CRGB():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:328
    
    uint8_t third = scale8( offset8, (256 / 3)); // max = 85
    
    uint8_t r, g, b;
    
    if( ! (hue & 0x80) ) {
    123a:	47 fd       	sbrc	r20, 7
    123c:	1e c0       	rjmp	.+60     	; 0x127a <hsv2rgb_rainbow(CHSV const&, CRGB&)+0x72>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:330
        // 0XX
        if( ! (hue & 0x40) ) {
    123e:	81 11       	cpse	r24, r1
    1240:	0b c0       	rjmp	.+22     	; 0x1258 <hsv2rgb_rainbow(CHSV const&, CRGB&)+0x50>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:333
            // 00X
            //section 0-1
            if( ! (hue & 0x20) ) {
    1242:	31 11       	cpse	r19, r1
    1244:	04 c0       	rjmp	.+8      	; 0x124e <hsv2rgb_rainbow(CHSV const&, CRGB&)+0x46>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:336
                // 000
                //case 0: // R -> O
                r = K255 - third;
    1246:	89 2f       	mov	r24, r25
    1248:	80 95       	com	r24
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:337
                g = third;
    124a:	49 2f       	mov	r20, r25
    124c:	0f c0       	rjmp	.+30     	; 0x126c <hsv2rgb_rainbow(CHSV const&, CRGB&)+0x64>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:345
            } else {
                // 001
                //case 1: // O -> Y
                if( Y1 ) {
                    r = K171;
                    g = K85 + third ;
    124e:	45 e5       	ldi	r20, 0x55	; 85
    1250:	49 0f       	add	r20, r25
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:346
                    b = 0;
    1252:	30 e0       	ldi	r19, 0x00	; 0
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:344
                FORCE_REFERENCE(b);
            } else {
                // 001
                //case 1: // O -> Y
                if( Y1 ) {
                    r = K171;
    1254:	2b ea       	ldi	r18, 0xAB	; 171
    1256:	2f c0       	rjmp	.+94     	; 0x12b6 <hsv2rgb_rainbow(CHSV const&, CRGB&)+0xae>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:361
                }
            }
        } else {
            //01X
            // section 2-3
            if( !  (hue & 0x20) ) {
    1258:	31 11       	cpse	r19, r1
    125a:	0a c0       	rjmp	.+20     	; 0x1270 <hsv2rgb_rainbow(CHSV const&, CRGB&)+0x68>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:367
                // 010
                //case 2: // Y -> G
                if( Y1 ) {
                    //uint8_t twothirds = (third << 1);
                    uint8_t twothirds = scale8( offset8, ((256 * 2) / 3)); // max=170
                    r = K171 - twothirds;
    125c:	cd 01       	movw	r24, r26
    125e:	6b ea       	ldi	r22, 0xAB	; 171
    1260:	70 e0       	ldi	r23, 0x00	; 0
    1262:	3b d2       	rcall	.+1142   	; 0x16da <__mulhi3>
    1264:	8b ea       	ldi	r24, 0xAB	; 171
    1266:	89 1b       	sub	r24, r25
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:368
                    g = K170 + third;
    1268:	4a ea       	ldi	r20, 0xAA	; 170
    126a:	42 0f       	add	r20, r18
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:367
                // 010
                //case 2: // Y -> G
                if( Y1 ) {
                    //uint8_t twothirds = (third << 1);
                    uint8_t twothirds = scale8( offset8, ((256 * 2) / 3)); // max=170
                    r = K171 - twothirds;
    126c:	28 2f       	mov	r18, r24
    126e:	23 c0       	rjmp	.+70     	; 0x12b6 <hsv2rgb_rainbow(CHSV const&, CRGB&)+0xae>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:382
                }
            } else {
                // 011
                // case 3: // G -> A
                r = 0;
                FORCE_REFERENCE(r);
    1270:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:383
                g = K255 - third;
    1272:	49 2f       	mov	r20, r25
    1274:	40 95       	com	r20
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:384
                b = third;
    1276:	39 2f       	mov	r19, r25
    1278:	0c c0       	rjmp	.+24     	; 0x1292 <hsv2rgb_rainbow(CHSV const&, CRGB&)+0x8a>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:390
            }
        }
    } else {
        // section 4-7
        // 1XX
        if( ! (hue & 0x40) ) {
    127a:	81 11       	cpse	r24, r1
    127c:	0f c0       	rjmp	.+30     	; 0x129c <hsv2rgb_rainbow(CHSV const&, CRGB&)+0x94>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:392
            // 10X
            if( ! ( hue & 0x20) ) {
    127e:	31 11       	cpse	r19, r1
    1280:	0a c0       	rjmp	.+20     	; 0x1296 <hsv2rgb_rainbow(CHSV const&, CRGB&)+0x8e>
scale8():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED\lib8tion/scale8.h:24
    1282:	cd 01       	movw	r24, r26
    1284:	6b ea       	ldi	r22, 0xAB	; 171
    1286:	70 e0       	ldi	r23, 0x00	; 0
    1288:	28 d2       	rcall	.+1104   	; 0x16da <__mulhi3>
_Z15hsv2rgb_rainbowRK4CHSVR4CRGB():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:399
                //case 4: // A -> B
                r = 0;
                FORCE_REFERENCE(r);
                //uint8_t twothirds = (third << 1);
                uint8_t twothirds = scale8( offset8, ((256 * 2) / 3)); // max=170
                g = K171 - twothirds; //K170?
    128a:	4b ea       	ldi	r20, 0xAB	; 171
    128c:	49 1b       	sub	r20, r25
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:400
                b = K85  + twothirds;
    128e:	35 e5       	ldi	r19, 0x55	; 85
    1290:	39 0f       	add	r19, r25
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:395
        if( ! (hue & 0x40) ) {
            // 10X
            if( ! ( hue & 0x20) ) {
                // 100
                //case 4: // A -> B
                r = 0;
    1292:	20 e0       	ldi	r18, 0x00	; 0
    1294:	10 c0       	rjmp	.+32     	; 0x12b6 <hsv2rgb_rainbow(CHSV const&, CRGB&)+0xae>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:408
                // 101
                //case 5: // B -> P
                r = third;
                g = 0;
                FORCE_REFERENCE(g);
                b = K255 - third;
    1296:	39 2f       	mov	r19, r25
    1298:	30 95       	com	r19
    129a:	0c c0       	rjmp	.+24     	; 0x12b4 <hsv2rgb_rainbow(CHSV const&, CRGB&)+0xac>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:412
                
            }
        } else {
            if( !  (hue & 0x20)  ) {
    129c:	31 11       	cpse	r19, r1
    129e:	04 c0       	rjmp	.+8      	; 0x12a8 <hsv2rgb_rainbow(CHSV const&, CRGB&)+0xa0>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:415
                // 110
                //case 6: // P -- K
                r = K85 + third;
    12a0:	85 e5       	ldi	r24, 0x55	; 85
    12a2:	89 0f       	add	r24, r25
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:418
                g = 0;
                FORCE_REFERENCE(g);
                b = K171 - third;
    12a4:	3b ea       	ldi	r19, 0xAB	; 171
    12a6:	04 c0       	rjmp	.+8      	; 0x12b0 <hsv2rgb_rainbow(CHSV const&, CRGB&)+0xa8>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:423
                
            } else {
                // 111
                //case 7: // K -> R
                r = K170 + third;
    12a8:	8a ea       	ldi	r24, 0xAA	; 170
    12aa:	89 0f       	add	r24, r25
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:425
                g = 0;
                FORCE_REFERENCE(g);
    12ac:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:426
                b = K85 - third;
    12ae:	35 e5       	ldi	r19, 0x55	; 85
    12b0:	32 1b       	sub	r19, r18
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:423
                b = K171 - third;
                
            } else {
                // 111
                //case 7: // K -> R
                r = K170 + third;
    12b2:	28 2f       	mov	r18, r24
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:424
                g = 0;
    12b4:	40 e0       	ldi	r20, 0x00	; 0
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:439
    if( G2 ) g = g >> 1;
    if( Gscale ) g = scale8_video_LEAVING_R1_DIRTY( g, Gscale);
    
    // Scale down colors if we're desaturated at all
    // and add the brightness_floor to r, g, and b.
    if( sat != 255 ) {
    12b6:	ef 3f       	cpi	r30, 0xFF	; 255
    12b8:	51 f1       	breq	.+84     	; 0x130e <hsv2rgb_rainbow(CHSV const&, CRGB&)+0x106>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:440
        if( sat == 0) {
    12ba:	ee 23       	and	r30, r30
    12bc:	29 f1       	breq	.+74     	; 0x1308 <hsv2rgb_rainbow(CHSV const&, CRGB&)+0x100>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:445
            r = 255; b = 255; g = 255;
        } else {
            //nscale8x3_video( r, g, b, sat);
#if (FASTLED_SCALE8_FIXED==1)
            if( r ) r = scale8_LEAVING_R1_DIRTY( r, sat);
    12be:	22 23       	and	r18, r18
    12c0:	39 f0       	breq	.+14     	; 0x12d0 <hsv2rgb_rainbow(CHSV const&, CRGB&)+0xc8>
scale8_LEAVING_R1_DIRTY():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED\lib8tion/scale8.h:150
/// then explicitly call cleanup_R1.
LIB8STATIC_ALWAYS_INLINE uint8_t scale8_LEAVING_R1_DIRTY( uint8_t i, fract8 scale)
{
#if SCALE8_C == 1
#if (FASTLED_SCALE8_FIXED == 1)
    return (((uint16_t)i) * ((uint16_t)(scale)+1)) >> 8;
    12c2:	8e 2f       	mov	r24, r30
    12c4:	90 e0       	ldi	r25, 0x00	; 0
    12c6:	62 2f       	mov	r22, r18
    12c8:	70 e0       	ldi	r23, 0x00	; 0
    12ca:	01 96       	adiw	r24, 0x01	; 1
    12cc:	06 d2       	rcall	.+1036   	; 0x16da <__mulhi3>
    12ce:	29 2f       	mov	r18, r25
_Z15hsv2rgb_rainbowRK4CHSVR4CRGB():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:446
            if( g ) g = scale8_LEAVING_R1_DIRTY( g, sat);
    12d0:	44 23       	and	r20, r20
    12d2:	39 f0       	breq	.+14     	; 0x12e2 <hsv2rgb_rainbow(CHSV const&, CRGB&)+0xda>
scale8_LEAVING_R1_DIRTY():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED\lib8tion/scale8.h:150
    12d4:	8e 2f       	mov	r24, r30
    12d6:	90 e0       	ldi	r25, 0x00	; 0
    12d8:	64 2f       	mov	r22, r20
    12da:	70 e0       	ldi	r23, 0x00	; 0
    12dc:	01 96       	adiw	r24, 0x01	; 1
    12de:	fd d1       	rcall	.+1018   	; 0x16da <__mulhi3>
    12e0:	49 2f       	mov	r20, r25
_Z15hsv2rgb_rainbowRK4CHSVR4CRGB():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:447
            if( b ) b = scale8_LEAVING_R1_DIRTY( b, sat);
    12e2:	33 23       	and	r19, r19
    12e4:	39 f0       	breq	.+14     	; 0x12f4 <hsv2rgb_rainbow(CHSV const&, CRGB&)+0xec>
scale8_LEAVING_R1_DIRTY():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED\lib8tion/scale8.h:150
    12e6:	8e 2f       	mov	r24, r30
    12e8:	90 e0       	ldi	r25, 0x00	; 0
    12ea:	63 2f       	mov	r22, r19
    12ec:	70 e0       	ldi	r23, 0x00	; 0
    12ee:	01 96       	adiw	r24, 0x01	; 1
    12f0:	f4 d1       	rcall	.+1000   	; 0x16da <__mulhi3>
    12f2:	39 2f       	mov	r19, r25
scale8():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED\lib8tion/scale8.h:24
///  4 clocks AVR with MUL, 2 clocks ARM
LIB8STATIC_ALWAYS_INLINE uint8_t scale8( uint8_t i, fract8 scale)
{
#if SCALE8_C == 1
#if (FASTLED_SCALE8_FIXED == 1)
    return (((uint16_t)i) * (1+(uint16_t)(scale))) >> 8;
    12f4:	e0 95       	com	r30
    12f6:	6e 2f       	mov	r22, r30
    12f8:	70 e0       	ldi	r23, 0x00	; 0
    12fa:	cb 01       	movw	r24, r22
    12fc:	01 96       	adiw	r24, 0x01	; 1
    12fe:	ed d1       	rcall	.+986    	; 0x16da <__mulhi3>
_Z15hsv2rgb_rainbowRK4CHSVR4CRGB():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:459
            
            uint8_t desat = 255 - sat;
            desat = scale8( desat, desat);
            
            uint8_t brightness_floor = desat;
            r += brightness_floor;
    1300:	29 0f       	add	r18, r25
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:460
            g += brightness_floor;
    1302:	49 0f       	add	r20, r25
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:461
            b += brightness_floor;
    1304:	39 0f       	add	r19, r25
    1306:	03 c0       	rjmp	.+6      	; 0x130e <hsv2rgb_rainbow(CHSV const&, CRGB&)+0x106>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:441
    
    // Scale down colors if we're desaturated at all
    // and add the brightness_floor to r, g, and b.
    if( sat != 255 ) {
        if( sat == 0) {
            r = 255; b = 255; g = 255;
    1308:	3f ef       	ldi	r19, 0xFF	; 255
    130a:	4f ef       	ldi	r20, 0xFF	; 255
    130c:	2f ef       	ldi	r18, 0xFF	; 255
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:466
            b += brightness_floor;
        }
    }
    
    // Now scale everything down if we're at value < 255.
    if( val != 255 ) {
    130e:	ff 3f       	cpi	r31, 0xFF	; 255
    1310:	49 f1       	breq	.+82     	; 0x1364 <hsv2rgb_rainbow(CHSV const&, CRGB&)+0x15c>
scale8_video_LEAVING_R1_DIRTY():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED\lib8tion/scale8.h:233
/// If you are doing several 'scale8_video's in a row, use this, and
/// then explicitly call cleanup_R1.
LIB8STATIC_ALWAYS_INLINE uint8_t scale8_video_LEAVING_R1_DIRTY( uint8_t i, fract8 scale)
{
#if SCALE8_C == 1 || defined(LIB8_ATTINY)
    uint8_t j = (((int)i * (int)scale) >> 8) + ((i&&scale)?1:0);
    1312:	6f 2f       	mov	r22, r31
    1314:	70 e0       	ldi	r23, 0x00	; 0
    1316:	e1 e0       	ldi	r30, 0x01	; 1
    1318:	f1 11       	cpse	r31, r1
    131a:	01 c0       	rjmp	.+2      	; 0x131e <hsv2rgb_rainbow(CHSV const&, CRGB&)+0x116>
    131c:	e0 e0       	ldi	r30, 0x00	; 0
    131e:	cb 01       	movw	r24, r22
    1320:	dc d1       	rcall	.+952    	; 0x16da <__mulhi3>
    1322:	e9 0f       	add	r30, r25
_Z15hsv2rgb_rainbowRK4CHSVR4CRGB():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:469
        
        val = scale8_video_LEAVING_R1_DIRTY( val, val);
        if( val == 0 ) {
    1324:	e1 f0       	breq	.+56     	; 0x135e <hsv2rgb_rainbow(CHSV const&, CRGB&)+0x156>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:474
            r=0; g=0; b=0;
        } else {
            // nscale8x3_video( r, g, b, val);
#if (FASTLED_SCALE8_FIXED==1)
            if( r ) r = scale8_LEAVING_R1_DIRTY( r, val);
    1326:	22 23       	and	r18, r18
    1328:	39 f0       	breq	.+14     	; 0x1338 <hsv2rgb_rainbow(CHSV const&, CRGB&)+0x130>
scale8_LEAVING_R1_DIRTY():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED\lib8tion/scale8.h:150
/// then explicitly call cleanup_R1.
LIB8STATIC_ALWAYS_INLINE uint8_t scale8_LEAVING_R1_DIRTY( uint8_t i, fract8 scale)
{
#if SCALE8_C == 1
#if (FASTLED_SCALE8_FIXED == 1)
    return (((uint16_t)i) * ((uint16_t)(scale)+1)) >> 8;
    132a:	8e 2f       	mov	r24, r30
    132c:	90 e0       	ldi	r25, 0x00	; 0
    132e:	62 2f       	mov	r22, r18
    1330:	70 e0       	ldi	r23, 0x00	; 0
    1332:	01 96       	adiw	r24, 0x01	; 1
    1334:	d2 d1       	rcall	.+932    	; 0x16da <__mulhi3>
    1336:	29 2f       	mov	r18, r25
_Z15hsv2rgb_rainbowRK4CHSVR4CRGB():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:475
            if( g ) g = scale8_LEAVING_R1_DIRTY( g, val);
    1338:	44 23       	and	r20, r20
    133a:	39 f0       	breq	.+14     	; 0x134a <hsv2rgb_rainbow(CHSV const&, CRGB&)+0x142>
scale8_LEAVING_R1_DIRTY():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED\lib8tion/scale8.h:150
    133c:	8e 2f       	mov	r24, r30
    133e:	90 e0       	ldi	r25, 0x00	; 0
    1340:	64 2f       	mov	r22, r20
    1342:	70 e0       	ldi	r23, 0x00	; 0
    1344:	01 96       	adiw	r24, 0x01	; 1
    1346:	c9 d1       	rcall	.+914    	; 0x16da <__mulhi3>
    1348:	49 2f       	mov	r20, r25
_Z15hsv2rgb_rainbowRK4CHSVR4CRGB():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:476
            if( b ) b = scale8_LEAVING_R1_DIRTY( b, val);
    134a:	33 23       	and	r19, r19
    134c:	59 f0       	breq	.+22     	; 0x1364 <hsv2rgb_rainbow(CHSV const&, CRGB&)+0x15c>
scale8_LEAVING_R1_DIRTY():
C:\Users\Elliott\Documents\Arduino\libraries\FastLED\lib8tion/scale8.h:150
    134e:	8e 2f       	mov	r24, r30
    1350:	90 e0       	ldi	r25, 0x00	; 0
    1352:	63 2f       	mov	r22, r19
    1354:	70 e0       	ldi	r23, 0x00	; 0
    1356:	01 96       	adiw	r24, 0x01	; 1
    1358:	c0 d1       	rcall	.+896    	; 0x16da <__mulhi3>
    135a:	39 2f       	mov	r19, r25
_Z15hsv2rgb_rainbowRK4CHSVR4CRGB():
    135c:	03 c0       	rjmp	.+6      	; 0x1364 <hsv2rgb_rainbow(CHSV const&, CRGB&)+0x15c>
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:470
    // Now scale everything down if we're at value < 255.
    if( val != 255 ) {
        
        val = scale8_video_LEAVING_R1_DIRTY( val, val);
        if( val == 0 ) {
            r=0; g=0; b=0;
    135e:	30 e0       	ldi	r19, 0x00	; 0
    1360:	40 e0       	ldi	r20, 0x00	; 0
    1362:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:492
    // It turns out that fixing it winds up costing more than
    // not fixing it.
    // To paraphrase Dr Bronner, profile! profile! profile!
    //asm volatile(  ""  :  :  : "r26", "r27" );
    //asm volatile (" movw r30, r26 \n" : : : "r30", "r31");
    rgb.r = r;
    1364:	28 83       	st	Y, r18
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:493
    rgb.g = g;
    1366:	49 83       	std	Y+1, r20	; 0x01
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:494
    rgb.b = b;
    1368:	3a 83       	std	Y+2, r19	; 0x02
C:\Users\Elliott\Documents\Arduino\libraries\FastLED/hsv2rgb.cpp:495
}
    136a:	df 91       	pop	r29
    136c:	cf 91       	pop	r28
    136e:	08 95       	ret

00001370 <random(long)>:
_Z6randoml():
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/WMath.cpp:38
    srandom(seed);
  }
}

long random(long howbig)
{
    1370:	cf 92       	push	r12
    1372:	df 92       	push	r13
    1374:	ef 92       	push	r14
    1376:	ff 92       	push	r15
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/WMath.cpp:39
  if (howbig == 0) {
    1378:	61 15       	cp	r22, r1
    137a:	71 05       	cpc	r23, r1
    137c:	81 05       	cpc	r24, r1
    137e:	91 05       	cpc	r25, r1
    1380:	39 f0       	breq	.+14     	; 0x1390 <random(long)+0x20>
    1382:	6b 01       	movw	r12, r22
    1384:	7c 01       	movw	r14, r24
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/WMath.cpp:42
    return 0;
  }
  return random() % howbig;
    1386:	88 d2       	rcall	.+1296   	; 0x1898 <random>
    1388:	a7 01       	movw	r20, r14
    138a:	96 01       	movw	r18, r12
    138c:	19 d2       	rcall	.+1074   	; 0x17c0 <__divmodsi4>
    138e:	03 c0       	rjmp	.+6      	; 0x1396 <random(long)+0x26>
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/WMath.cpp:40
}

long random(long howbig)
{
  if (howbig == 0) {
    return 0;
    1390:	60 e0       	ldi	r22, 0x00	; 0
    1392:	70 e0       	ldi	r23, 0x00	; 0
    1394:	cb 01       	movw	r24, r22
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/WMath.cpp:43
  }
  return random() % howbig;
}
    1396:	ff 90       	pop	r15
    1398:	ef 90       	pop	r14
    139a:	df 90       	pop	r13
    139c:	cf 90       	pop	r12
    139e:	08 95       	ret

000013a0 <random(long, long)>:
_Z6randomll():
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/WMath.cpp:46

long random(long howsmall, long howbig)
{
    13a0:	cf 92       	push	r12
    13a2:	df 92       	push	r13
    13a4:	ef 92       	push	r14
    13a6:	ff 92       	push	r15
    13a8:	0f 93       	push	r16
    13aa:	1f 93       	push	r17
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/WMath.cpp:47
  if (howsmall >= howbig) {
    13ac:	62 17       	cp	r22, r18
    13ae:	73 07       	cpc	r23, r19
    13b0:	84 07       	cpc	r24, r20
    13b2:	95 07       	cpc	r25, r21
    13b4:	7c f4       	brge	.+30     	; 0x13d4 <random(long, long)+0x34>
    13b6:	89 01       	movw	r16, r18
    13b8:	9a 01       	movw	r18, r20
    13ba:	6b 01       	movw	r12, r22
    13bc:	7c 01       	movw	r14, r24
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/WMath.cpp:51
    return howsmall;
  }
  long diff = howbig - howsmall;
  return random(diff) + howsmall;
    13be:	c9 01       	movw	r24, r18
    13c0:	b8 01       	movw	r22, r16
    13c2:	6c 19       	sub	r22, r12
    13c4:	7d 09       	sbc	r23, r13
    13c6:	8e 09       	sbc	r24, r14
    13c8:	9f 09       	sbc	r25, r15
    13ca:	d2 df       	rcall	.-92     	; 0x1370 <random(long)>
    13cc:	6c 0d       	add	r22, r12
    13ce:	7d 1d       	adc	r23, r13
    13d0:	8e 1d       	adc	r24, r14
    13d2:	9f 1d       	adc	r25, r15
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/WMath.cpp:52
}
    13d4:	1f 91       	pop	r17
    13d6:	0f 91       	pop	r16
    13d8:	ff 90       	pop	r15
    13da:	ef 90       	pop	r14
    13dc:	df 90       	pop	r13
    13de:	cf 90       	pop	r12
    13e0:	08 95       	ret

000013e2 <main>:
main():
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/main.cpp:6
#include <Arduino.h>

int main(void)
{
	#ifdef TUNED_OSCCAL_VALUE
	OSCCAL = TUNED_OSCCAL_VALUE; //set the oscillator calibration value based on the pins_arduino.h file. If this is not set, it will be optimised away
    13e2:	81 b7       	in	r24, 0x31	; 49
    13e4:	81 bf       	out	0x31, r24	; 49
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/main.cpp:8
    #endif
    init();
    13e6:	b8 d0       	rcall	.+368    	; 0x1558 <init>
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/main.cpp:10

	setup();
    13e8:	90 d6       	rcall	.+3360   	; 0x210a <__TEXT_REGION_LENGTH__+0x10a>
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/main.cpp:13 (discriminator 1)
    
	for (;;)
		loop();
    13ea:	e1 d9       	rcall	.-3134   	; 0x7ae <loop>
    13ec:	fe cf       	rjmp	.-4      	; 0x13ea <main+0x8>

000013ee <initToneTimerInternal>:
initToneTimerInternal():
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/wiring.c:590
PLLCSR |= PCKE;
}
#endif
  #if INITIALIZE_SECONDARY_TIMERS
  // Prepare the timer for PWM
    initToneTimerInternal();
    13ee:	80 b7       	in	r24, 0x30	; 48
    13f0:	80 7f       	andi	r24, 0xF0	; 240
    13f2:	80 bf       	out	0x30, r24	; 48
    13f4:	80 b7       	in	r24, 0x30	; 48
    13f6:	80 68       	ori	r24, 0x80	; 128
    13f8:	80 bf       	out	0x30, r24	; 48
    13fa:	8c b5       	in	r24, 0x2c	; 44
    13fc:	80 64       	ori	r24, 0x40	; 64
    13fe:	8c bd       	out	0x2c, r24	; 44
    1400:	8f ef       	ldi	r24, 0xFF	; 255
    1402:	8d bd       	out	0x2d, r24	; 45
    1404:	80 b7       	in	r24, 0x30	; 48
    1406:	87 60       	ori	r24, 0x07	; 7
    1408:	80 bf       	out	0x30, r24	; 48
    140a:	08 95       	ret

0000140c <__vector_5>:
__vector_5():
    140c:	1f 92       	push	r1
    140e:	0f 92       	push	r0
    1410:	0f b6       	in	r0, 0x3f	; 63
    1412:	0f 92       	push	r0
    1414:	11 24       	eor	r1, r1
    1416:	2f 93       	push	r18
    1418:	3f 93       	push	r19
    141a:	8f 93       	push	r24
    141c:	9f 93       	push	r25
    141e:	af 93       	push	r26
    1420:	bf 93       	push	r27
    1422:	80 91 f4 00 	lds	r24, 0x00F4	; 0x8000f4 <millis_timer_millis>
    1426:	90 91 f5 00 	lds	r25, 0x00F5	; 0x8000f5 <millis_timer_millis+0x1>
    142a:	a0 91 f6 00 	lds	r26, 0x00F6	; 0x8000f6 <millis_timer_millis+0x2>
    142e:	b0 91 f7 00 	lds	r27, 0x00F7	; 0x8000f7 <millis_timer_millis+0x3>
    1432:	30 91 f3 00 	lds	r19, 0x00F3	; 0x8000f3 <millis_timer_fract>
    1436:	23 e0       	ldi	r18, 0x03	; 3
    1438:	23 0f       	add	r18, r19
    143a:	2d 37       	cpi	r18, 0x7D	; 125
    143c:	30 f0       	brcs	.+12     	; 0x144a <__vector_5+0x3e>
    143e:	26 e8       	ldi	r18, 0x86	; 134
    1440:	23 0f       	add	r18, r19
    1442:	02 96       	adiw	r24, 0x02	; 2
    1444:	a1 1d       	adc	r26, r1
    1446:	b1 1d       	adc	r27, r1
    1448:	03 c0       	rjmp	.+6      	; 0x1450 <__vector_5+0x44>
    144a:	01 96       	adiw	r24, 0x01	; 1
    144c:	a1 1d       	adc	r26, r1
    144e:	b1 1d       	adc	r27, r1
    1450:	20 93 f3 00 	sts	0x00F3, r18	; 0x8000f3 <millis_timer_fract>
    1454:	80 93 f4 00 	sts	0x00F4, r24	; 0x8000f4 <millis_timer_millis>
    1458:	90 93 f5 00 	sts	0x00F5, r25	; 0x8000f5 <millis_timer_millis+0x1>
    145c:	a0 93 f6 00 	sts	0x00F6, r26	; 0x8000f6 <millis_timer_millis+0x2>
    1460:	b0 93 f7 00 	sts	0x00F7, r27	; 0x8000f7 <millis_timer_millis+0x3>
    1464:	80 91 f8 00 	lds	r24, 0x00F8	; 0x8000f8 <millis_timer_overflow_count>
    1468:	90 91 f9 00 	lds	r25, 0x00F9	; 0x8000f9 <millis_timer_overflow_count+0x1>
    146c:	a0 91 fa 00 	lds	r26, 0x00FA	; 0x8000fa <millis_timer_overflow_count+0x2>
    1470:	b0 91 fb 00 	lds	r27, 0x00FB	; 0x8000fb <millis_timer_overflow_count+0x3>
    1474:	01 96       	adiw	r24, 0x01	; 1
    1476:	a1 1d       	adc	r26, r1
    1478:	b1 1d       	adc	r27, r1
    147a:	80 93 f8 00 	sts	0x00F8, r24	; 0x8000f8 <millis_timer_overflow_count>
    147e:	90 93 f9 00 	sts	0x00F9, r25	; 0x8000f9 <millis_timer_overflow_count+0x1>
    1482:	a0 93 fa 00 	sts	0x00FA, r26	; 0x8000fa <millis_timer_overflow_count+0x2>
    1486:	b0 93 fb 00 	sts	0x00FB, r27	; 0x8000fb <millis_timer_overflow_count+0x3>
    148a:	bf 91       	pop	r27
    148c:	af 91       	pop	r26
    148e:	9f 91       	pop	r25
    1490:	8f 91       	pop	r24
    1492:	3f 91       	pop	r19
    1494:	2f 91       	pop	r18
    1496:	0f 90       	pop	r0
    1498:	0f be       	out	0x3f, r0	; 63
    149a:	0f 90       	pop	r0
    149c:	1f 90       	pop	r1
    149e:	18 95       	reti

000014a0 <millis>:
millis():
    14a0:	2f b7       	in	r18, 0x3f	; 63
    14a2:	f8 94       	cli
    14a4:	60 91 f4 00 	lds	r22, 0x00F4	; 0x8000f4 <millis_timer_millis>
    14a8:	70 91 f5 00 	lds	r23, 0x00F5	; 0x8000f5 <millis_timer_millis+0x1>
    14ac:	80 91 f6 00 	lds	r24, 0x00F6	; 0x8000f6 <millis_timer_millis+0x2>
    14b0:	90 91 f7 00 	lds	r25, 0x00F7	; 0x8000f7 <millis_timer_millis+0x3>
    14b4:	2f bf       	out	0x3f, r18	; 63
    14b6:	08 95       	ret

000014b8 <micros>:
micros():
    14b8:	3f b7       	in	r19, 0x3f	; 63
    14ba:	f8 94       	cli
    14bc:	80 91 f8 00 	lds	r24, 0x00F8	; 0x8000f8 <millis_timer_overflow_count>
    14c0:	90 91 f9 00 	lds	r25, 0x00F9	; 0x8000f9 <millis_timer_overflow_count+0x1>
    14c4:	a0 91 fa 00 	lds	r26, 0x00FA	; 0x8000fa <millis_timer_overflow_count+0x2>
    14c8:	b0 91 fb 00 	lds	r27, 0x00FB	; 0x8000fb <millis_timer_overflow_count+0x3>
    14cc:	22 b7       	in	r18, 0x32	; 50
    14ce:	08 b6       	in	r0, 0x38	; 56
    14d0:	01 fe       	sbrs	r0, 1
    14d2:	05 c0       	rjmp	.+10     	; 0x14de <micros+0x26>
    14d4:	2f 3f       	cpi	r18, 0xFF	; 255
    14d6:	19 f0       	breq	.+6      	; 0x14de <micros+0x26>
    14d8:	01 96       	adiw	r24, 0x01	; 1
    14da:	a1 1d       	adc	r26, r1
    14dc:	b1 1d       	adc	r27, r1
    14de:	3f bf       	out	0x3f, r19	; 63
    14e0:	ba 2f       	mov	r27, r26
    14e2:	a9 2f       	mov	r26, r25
    14e4:	98 2f       	mov	r25, r24
    14e6:	88 27       	eor	r24, r24
    14e8:	82 0f       	add	r24, r18
    14ea:	91 1d       	adc	r25, r1
    14ec:	a1 1d       	adc	r26, r1
    14ee:	b1 1d       	adc	r27, r1
    14f0:	bc 01       	movw	r22, r24
    14f2:	cd 01       	movw	r24, r26
    14f4:	42 e0       	ldi	r20, 0x02	; 2
    14f6:	66 0f       	add	r22, r22
    14f8:	77 1f       	adc	r23, r23
    14fa:	88 1f       	adc	r24, r24
    14fc:	99 1f       	adc	r25, r25
    14fe:	4a 95       	dec	r20
    1500:	d1 f7       	brne	.-12     	; 0x14f6 <micros+0x3e>
    1502:	08 95       	ret

00001504 <delay>:
delay():
    1504:	cf 92       	push	r12
    1506:	df 92       	push	r13
    1508:	ef 92       	push	r14
    150a:	ff 92       	push	r15
    150c:	cf 93       	push	r28
    150e:	df 93       	push	r29
    1510:	6b 01       	movw	r12, r22
    1512:	7c 01       	movw	r14, r24
    1514:	d1 df       	rcall	.-94     	; 0x14b8 <micros>
    1516:	eb 01       	movw	r28, r22
    1518:	c1 14       	cp	r12, r1
    151a:	d1 04       	cpc	r13, r1
    151c:	e1 04       	cpc	r14, r1
    151e:	f1 04       	cpc	r15, r1
    1520:	a1 f0       	breq	.+40     	; 0x154a <delay+0x46>
    1522:	6e de       	rcall	.-804    	; 0x1200 <yield>
    1524:	c9 df       	rcall	.-110    	; 0x14b8 <micros>
    1526:	6c 1b       	sub	r22, r28
    1528:	7d 0b       	sbc	r23, r29
    152a:	68 3e       	cpi	r22, 0xE8	; 232
    152c:	73 40       	sbci	r23, 0x03	; 3
    152e:	a0 f3       	brcs	.-24     	; 0x1518 <delay+0x14>
    1530:	c1 14       	cp	r12, r1
    1532:	d1 04       	cpc	r13, r1
    1534:	e1 04       	cpc	r14, r1
    1536:	f1 04       	cpc	r15, r1
    1538:	79 f3       	breq	.-34     	; 0x1518 <delay+0x14>
    153a:	81 e0       	ldi	r24, 0x01	; 1
    153c:	c8 1a       	sub	r12, r24
    153e:	d1 08       	sbc	r13, r1
    1540:	e1 08       	sbc	r14, r1
    1542:	f1 08       	sbc	r15, r1
    1544:	c8 51       	subi	r28, 0x18	; 24
    1546:	dc 4f       	sbci	r29, 0xFC	; 252
    1548:	ed cf       	rjmp	.-38     	; 0x1524 <delay+0x20>
    154a:	df 91       	pop	r29
    154c:	cf 91       	pop	r28
    154e:	ff 90       	pop	r15
    1550:	ef 90       	pop	r14
    1552:	df 90       	pop	r13
    1554:	cf 90       	pop	r12
    1556:	08 95       	ret

00001558 <init>:
init():
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/wiring.c:753
  #endif
  #endif

  // Use the Millis Timer for fast PWM (unless it doesn't have an output).
  #if (TIMER_TO_USE_FOR_MILLIS == 0) && defined(WGM01)
  sbi(TCCR0A, WGM01);
    1558:	8a b5       	in	r24, 0x2a	; 42
    155a:	82 60       	ori	r24, 0x02	; 2
    155c:	8a bd       	out	0x2a, r24	; 42
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/wiring.c:754
  sbi(TCCR0A, WGM00);
    155e:	8a b5       	in	r24, 0x2a	; 42
    1560:	81 60       	ori	r24, 0x01	; 1
    1562:	8a bd       	out	0x2a, r24	; 42
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/wiring.c:777
  #endif
  
  // Millis timer is always processor clock divided by MillisTimer_Prescale_Value (64)
  #if (TIMER_TO_USE_FOR_MILLIS == 0)
   #ifdef TCCR0B
    TCCR0B = (TCCR0B & ~((1<<CS02)|(1<<CS01)|(1<<CS00))) | (MillisTimer_Prescale_Index << CS00);
    1564:	83 b7       	in	r24, 0x33	; 51
    1566:	88 7f       	andi	r24, 0xF8	; 248
    1568:	83 60       	ori	r24, 0x03	; 3
    156a:	83 bf       	out	0x33, r24	; 51
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/wiring.c:789
  TCCR1B = (TCCR1B & ~((1<<CS13)|(1<<CS12)|(1<<CS11)|(1<<CS10))) | (MillisTimer_Prescale_Index << CS10);
  #elif (TIMER_TO_USE_FOR_MILLIS == 1)
  TCCR1B = (TCCR1B & ~((1<<CS12)|(1<<CS11)|(1<<CS10))) | (MillisTimer_Prescale_Index << CS10);
  #endif
  // this needs to be called before setup() or some functions won't work there
  sei();
    156c:	78 94       	sei
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/wiring.c:793
  
  // Enable the overlow interrupt (this is the basic system tic-toc for millis)
  #if defined(TIMSK) && defined(TOIE0) && (TIMER_TO_USE_FOR_MILLIS == 0)
  sbi(TIMSK, TOIE0);
    156e:	89 b7       	in	r24, 0x39	; 57
    1570:	82 60       	ori	r24, 0x02	; 2
    1572:	89 bf       	out	0x39, r24	; 57
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/wiring.c:806
  #error Millis() Timer overflow interrupt not set correctly
  #endif
  
  // Initialize the timer used for Tone
  #if INITIALIZE_SECONDARY_TIMERS
    initToneTimerInternal();
    1574:	3c df       	rcall	.-392    	; 0x13ee <initToneTimerInternal>
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/wiring.c:813

  // Initialize the ADC
  #if defined( INITIALIZE_ANALOG_TO_DIGITAL_CONVERTER ) && INITIALIZE_ANALOG_TO_DIGITAL_CONVERTER
  #if defined(ADCSRA)
    // set a2d prescale factor
	ADCSRA = (ADCSRA & ~((1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0))) | (ADC_ARDUINO_PRESCALER << ADPS0) | (1<<ADEN);
    1576:	86 b1       	in	r24, 0x06	; 6
    1578:	87 68       	ori	r24, 0x87	; 135
    157a:	86 b9       	out	0x06, r24	; 6
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/wiring.c:815
    // enable a2d conversions
    sbi(ADCSRA, ADEN);
    157c:	37 9a       	sbi	0x06, 7	; 6
    157e:	08 95       	ret

00001580 <turnOffPWM>:
turnOffPWM():
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/wiring_digital.c:163
		uint8_t oldSREG = SREG;
    cli();
		*out |= bit;
		SREG = oldSREG;
	}
}
    1580:	81 30       	cpi	r24, 0x01	; 1
    1582:	31 f4       	brne	.+12     	; 0x1590 <turnOffPWM+0x10>
    1584:	8a b5       	in	r24, 0x2a	; 42
    1586:	8f 77       	andi	r24, 0x7F	; 127
    1588:	8a bd       	out	0x2a, r24	; 42
    158a:	8a b5       	in	r24, 0x2a	; 42
    158c:	8f 7b       	andi	r24, 0xBF	; 191
    158e:	07 c0       	rjmp	.+14     	; 0x159e <turnOffPWM+0x1e>
    1590:	82 30       	cpi	r24, 0x02	; 2
    1592:	39 f4       	brne	.+14     	; 0x15a2 <turnOffPWM+0x22>
    1594:	8a b5       	in	r24, 0x2a	; 42
    1596:	8f 7d       	andi	r24, 0xDF	; 223
    1598:	8a bd       	out	0x2a, r24	; 42
    159a:	8a b5       	in	r24, 0x2a	; 42
    159c:	8f 7e       	andi	r24, 0xEF	; 239
    159e:	8a bd       	out	0x2a, r24	; 42
    15a0:	08 95       	ret
    15a2:	83 30       	cpi	r24, 0x03	; 3
    15a4:	39 f4       	brne	.+14     	; 0x15b4 <turnOffPWM+0x34>
    15a6:	80 b7       	in	r24, 0x30	; 48
    15a8:	8f 7d       	andi	r24, 0xDF	; 223
    15aa:	80 bf       	out	0x30, r24	; 48
    15ac:	80 b7       	in	r24, 0x30	; 48
    15ae:	8f 7e       	andi	r24, 0xEF	; 239
    15b0:	80 bf       	out	0x30, r24	; 48
    15b2:	08 95       	ret
    15b4:	84 30       	cpi	r24, 0x04	; 4
    15b6:	31 f4       	brne	.+12     	; 0x15c4 <turnOffPWM+0x44>
    15b8:	8c b5       	in	r24, 0x2c	; 44
    15ba:	8f 7d       	andi	r24, 0xDF	; 223
    15bc:	8c bd       	out	0x2c, r24	; 44
    15be:	8c b5       	in	r24, 0x2c	; 44
    15c0:	8f 7e       	andi	r24, 0xEF	; 239
    15c2:	8c bd       	out	0x2c, r24	; 44
    15c4:	08 95       	ret

000015c6 <pinMode>:
pinMode():
    15c6:	cf 93       	push	r28
    15c8:	df 93       	push	r29
    15ca:	87 ff       	sbrs	r24, 7
    15cc:	11 c0       	rjmp	.+34     	; 0x15f0 <pinMode+0x2a>
    15ce:	8f 77       	andi	r24, 0x7F	; 127
    15d0:	41 f0       	breq	.+16     	; 0x15e2 <pinMode+0x1c>
    15d2:	81 30       	cpi	r24, 0x01	; 1
    15d4:	41 f0       	breq	.+16     	; 0x15e6 <pinMode+0x20>
    15d6:	82 30       	cpi	r24, 0x02	; 2
    15d8:	41 f0       	breq	.+16     	; 0x15ea <pinMode+0x24>
    15da:	83 30       	cpi	r24, 0x03	; 3
    15dc:	41 f0       	breq	.+16     	; 0x15ee <pinMode+0x28>
    15de:	8f ef       	ldi	r24, 0xFF	; 255
    15e0:	07 c0       	rjmp	.+14     	; 0x15f0 <pinMode+0x2a>
    15e2:	85 e0       	ldi	r24, 0x05	; 5
    15e4:	05 c0       	rjmp	.+10     	; 0x15f0 <pinMode+0x2a>
    15e6:	82 e0       	ldi	r24, 0x02	; 2
    15e8:	03 c0       	rjmp	.+6      	; 0x15f0 <pinMode+0x2a>
    15ea:	84 e0       	ldi	r24, 0x04	; 4
    15ec:	01 c0       	rjmp	.+2      	; 0x15f0 <pinMode+0x2a>
    15ee:	83 e0       	ldi	r24, 0x03	; 3
    15f0:	90 e0       	ldi	r25, 0x00	; 0
    15f2:	fc 01       	movw	r30, r24
    15f4:	e2 5c       	subi	r30, 0xC2	; 194
    15f6:	ff 4f       	sbci	r31, 0xFF	; 255
    15f8:	24 91       	lpm	r18, Z
    15fa:	fc 01       	movw	r30, r24
    15fc:	ec 5b       	subi	r30, 0xBC	; 188
    15fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1600:	84 91       	lpm	r24, Z
    1602:	88 23       	and	r24, r24
    1604:	61 f1       	breq	.+88     	; 0x165e <pinMode+0x98>
    1606:	90 e0       	ldi	r25, 0x00	; 0
    1608:	88 0f       	add	r24, r24
    160a:	99 1f       	adc	r25, r25
    160c:	fc 01       	movw	r30, r24
    160e:	ea 5a       	subi	r30, 0xAA	; 170
    1610:	ff 4f       	sbci	r31, 0xFF	; 255
    1612:	c5 91       	lpm	r28, Z+
    1614:	d4 91       	lpm	r29, Z
    1616:	fc 01       	movw	r30, r24
    1618:	e0 5b       	subi	r30, 0xB0	; 176
    161a:	ff 4f       	sbci	r31, 0xFF	; 255
    161c:	a5 91       	lpm	r26, Z+
    161e:	b4 91       	lpm	r27, Z
    1620:	61 11       	cpse	r22, r1
    1622:	09 c0       	rjmp	.+18     	; 0x1636 <pinMode+0x70>
    1624:	9f b7       	in	r25, 0x3f	; 63
    1626:	f8 94       	cli
    1628:	88 81       	ld	r24, Y
    162a:	20 95       	com	r18
    162c:	82 23       	and	r24, r18
    162e:	88 83       	st	Y, r24
    1630:	ec 91       	ld	r30, X
    1632:	2e 23       	and	r18, r30
    1634:	0b c0       	rjmp	.+22     	; 0x164c <pinMode+0x86>
    1636:	62 30       	cpi	r22, 0x02	; 2
    1638:	61 f4       	brne	.+24     	; 0x1652 <pinMode+0x8c>
    163a:	9f b7       	in	r25, 0x3f	; 63
    163c:	f8 94       	cli
    163e:	88 81       	ld	r24, Y
    1640:	32 2f       	mov	r19, r18
    1642:	30 95       	com	r19
    1644:	83 23       	and	r24, r19
    1646:	88 83       	st	Y, r24
    1648:	ec 91       	ld	r30, X
    164a:	2e 2b       	or	r18, r30
    164c:	2c 93       	st	X, r18
    164e:	9f bf       	out	0x3f, r25	; 63
    1650:	06 c0       	rjmp	.+12     	; 0x165e <pinMode+0x98>
    1652:	8f b7       	in	r24, 0x3f	; 63
    1654:	f8 94       	cli
    1656:	e8 81       	ld	r30, Y
    1658:	2e 2b       	or	r18, r30
    165a:	28 83       	st	Y, r18
    165c:	8f bf       	out	0x3f, r24	; 63
    165e:	df 91       	pop	r29
    1660:	cf 91       	pop	r28
    1662:	08 95       	ret

00001664 <digitalRead>:
digitalRead():
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/wiring_digital.c:166

int digitalRead(uint8_t pin)
{
    1664:	cf 93       	push	r28
    1666:	df 93       	push	r29
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/wiring_digital.c:167
	if (pin&128) {pin=analogInputToDigitalPin((pin&127));}
    1668:	87 ff       	sbrs	r24, 7
    166a:	11 c0       	rjmp	.+34     	; 0x168e <digitalRead+0x2a>
    166c:	8f 77       	andi	r24, 0x7F	; 127
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/wiring_digital.c:167 (discriminator 1)
    166e:	41 f0       	breq	.+16     	; 0x1680 <digitalRead+0x1c>
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/wiring_digital.c:167 (discriminator 2)
    1670:	81 30       	cpi	r24, 0x01	; 1
    1672:	41 f0       	breq	.+16     	; 0x1684 <digitalRead+0x20>
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/wiring_digital.c:167 (discriminator 4)
    1674:	82 30       	cpi	r24, 0x02	; 2
    1676:	41 f0       	breq	.+16     	; 0x1688 <digitalRead+0x24>
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/wiring_digital.c:167 (discriminator 6)
    1678:	83 30       	cpi	r24, 0x03	; 3
    167a:	41 f0       	breq	.+16     	; 0x168c <digitalRead+0x28>
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/wiring_digital.c:167
    167c:	8f ef       	ldi	r24, 0xFF	; 255
    167e:	07 c0       	rjmp	.+14     	; 0x168e <digitalRead+0x2a>
    1680:	85 e0       	ldi	r24, 0x05	; 5
    1682:	05 c0       	rjmp	.+10     	; 0x168e <digitalRead+0x2a>
    1684:	82 e0       	ldi	r24, 0x02	; 2
    1686:	03 c0       	rjmp	.+6      	; 0x168e <digitalRead+0x2a>
    1688:	84 e0       	ldi	r24, 0x04	; 4
    168a:	01 c0       	rjmp	.+2      	; 0x168e <digitalRead+0x2a>
    168c:	83 e0       	ldi	r24, 0x03	; 3
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/wiring_digital.c:168
	uint8_t timer = digitalPinToTimer(pin);
    168e:	28 2f       	mov	r18, r24
    1690:	30 e0       	ldi	r19, 0x00	; 0
    1692:	f9 01       	movw	r30, r18
    1694:	e8 5c       	subi	r30, 0xC8	; 200
    1696:	ff 4f       	sbci	r31, 0xFF	; 255
    1698:	84 91       	lpm	r24, Z
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/wiring_digital.c:169
	uint8_t bit = digitalPinToBitMask(pin);
    169a:	f9 01       	movw	r30, r18
    169c:	e2 5c       	subi	r30, 0xC2	; 194
    169e:	ff 4f       	sbci	r31, 0xFF	; 255
    16a0:	d4 91       	lpm	r29, Z
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/wiring_digital.c:170
	uint8_t port = digitalPinToPort(pin);
    16a2:	f9 01       	movw	r30, r18
    16a4:	ec 5b       	subi	r30, 0xBC	; 188
    16a6:	ff 4f       	sbci	r31, 0xFF	; 255
    16a8:	c4 91       	lpm	r28, Z
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/wiring_digital.c:172

	if (port == NOT_A_PIN) return LOW;
    16aa:	cc 23       	and	r28, r28
    16ac:	89 f0       	breq	.+34     	; 0x16d0 <digitalRead+0x6c>
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/wiring_digital.c:176

	// If the pin that support PWM output, we need to turn it off
	// before getting a digital reading.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    16ae:	81 11       	cpse	r24, r1
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/wiring_digital.c:176 (discriminator 1)
    16b0:	67 df       	rcall	.-306    	; 0x1580 <turnOffPWM>
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/wiring_digital.c:178

	if (*portInputRegister(port) & bit) return HIGH;
    16b2:	ec 2f       	mov	r30, r28
    16b4:	f0 e0       	ldi	r31, 0x00	; 0
    16b6:	ee 0f       	add	r30, r30
    16b8:	ff 1f       	adc	r31, r31
    16ba:	e6 5b       	subi	r30, 0xB6	; 182
    16bc:	ff 4f       	sbci	r31, 0xFF	; 255
    16be:	a5 91       	lpm	r26, Z+
    16c0:	b4 91       	lpm	r27, Z
    16c2:	ec 91       	ld	r30, X
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/wiring_digital.c:172
	if (pin&128) {pin=analogInputToDigitalPin((pin&127));}
	uint8_t timer = digitalPinToTimer(pin);
	uint8_t bit = digitalPinToBitMask(pin);
	uint8_t port = digitalPinToPort(pin);

	if (port == NOT_A_PIN) return LOW;
    16c4:	ed 23       	and	r30, r29
    16c6:	81 e0       	ldi	r24, 0x01	; 1
    16c8:	90 e0       	ldi	r25, 0x00	; 0
    16ca:	21 f4       	brne	.+8      	; 0x16d4 <digitalRead+0x70>
    16cc:	80 e0       	ldi	r24, 0x00	; 0
    16ce:	02 c0       	rjmp	.+4      	; 0x16d4 <digitalRead+0x70>
    16d0:	80 e0       	ldi	r24, 0x00	; 0
    16d2:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Elliott\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.2.2\cores\tiny/wiring_digital.c:180
	// before getting a digital reading.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);

	if (*portInputRegister(port) & bit) return HIGH;
	return LOW;
}
    16d4:	df 91       	pop	r29
    16d6:	cf 91       	pop	r28
    16d8:	08 95       	ret

000016da <__mulhi3>:
__mulhi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:312
    16da:	00 24       	eor	r0, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:313
    16dc:	55 27       	eor	r21, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:314
    16de:	04 c0       	rjmp	.+8      	; 0x16e8 <__mulhi3+0xe>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:317
    16e0:	08 0e       	add	r0, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:318
    16e2:	59 1f       	adc	r21, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:320
    16e4:	88 0f       	add	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:321
    16e6:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:324
    16e8:	00 97       	sbiw	r24, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:325
    16ea:	29 f0       	breq	.+10     	; 0x16f6 <__mulhi3+0x1c>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:328
    16ec:	76 95       	lsr	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:329
    16ee:	67 95       	ror	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:331
    16f0:	b8 f3       	brcs	.-18     	; 0x16e0 <__mulhi3+0x6>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:335
    16f2:	71 05       	cpc	r23, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:337
    16f4:	b9 f7       	brne	.-18     	; 0x16e4 <__mulhi3+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:340
    16f6:	80 2d       	mov	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:341
    16f8:	95 2f       	mov	r25, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:342
    16fa:	08 95       	ret

000016fc <__mulsi3>:
__mulsi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:445
    16fc:	ee 27       	eor	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:446
    16fe:	ff 27       	eor	r31, r31

00001700 <__mulsi3_helper>:
__mulsi3_helper():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:451
    1700:	aa 27       	eor	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:452
    1702:	bb 27       	eor	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:453
    1704:	08 c0       	rjmp	.+16     	; 0x1716 <__mulsi3_helper+0x16>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:457
    1706:	a2 0f       	add	r26, r18
    1708:	b3 1f       	adc	r27, r19
    170a:	e4 1f       	adc	r30, r20
    170c:	f5 1f       	adc	r31, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:460
    170e:	22 0f       	add	r18, r18
    1710:	33 1f       	adc	r19, r19
    1712:	44 1f       	adc	r20, r20
    1714:	55 1f       	adc	r21, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:463
    1716:	96 95       	lsr	r25
    1718:	87 95       	ror	r24
    171a:	77 95       	ror	r23
    171c:	67 95       	ror	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:465
    171e:	98 f3       	brcs	.-26     	; 0x1706 <__mulsi3_helper+0x6>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:467
    1720:	70 40       	sbci	r23, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:468
    1722:	a9 f7       	brne	.-22     	; 0x170e <__mulsi3_helper+0xe>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:469
    1724:	00 97       	sbiw	r24, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:470
    1726:	99 f7       	brne	.-26     	; 0x170e <__mulsi3_helper+0xe>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:473
    1728:	bd 01       	movw	r22, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:474
    172a:	cf 01       	movw	r24, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:480
    172c:	08 95       	ret

0000172e <__udivmodhi4>:
__udivmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1409
    172e:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1410
    1730:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1411
    1732:	51 e1       	ldi	r21, 0x11	; 17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1412
    1734:	07 c0       	rjmp	.+14     	; 0x1744 <__udivmodhi4_ep>

00001736 <__udivmodhi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1414
    1736:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1415
    1738:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1416
    173a:	a6 17       	cp	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1417
    173c:	b7 07       	cpc	r27, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1418
    173e:	10 f0       	brcs	.+4      	; 0x1744 <__udivmodhi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1419
    1740:	a6 1b       	sub	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1420
    1742:	b7 0b       	sbc	r27, r23

00001744 <__udivmodhi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1422
    1744:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1423
    1746:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1424
    1748:	5a 95       	dec	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1425
    174a:	a9 f7       	brne	.-22     	; 0x1736 <__udivmodhi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1426
    174c:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1427
    174e:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1429
    1750:	bc 01       	movw	r22, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1431
    1752:	cd 01       	movw	r24, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1433
    1754:	08 95       	ret

00001756 <__divmodhi4>:
__divmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1441
    1756:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1442
    1758:	07 2e       	mov	r0, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1443
    175a:	16 f4       	brtc	.+4      	; 0x1760 <__divmodhi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1444
    175c:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1445
    175e:	06 d0       	rcall	.+12     	; 0x176c <__divmodhi4_neg1>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1447
    1760:	77 fd       	sbrc	r23, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1448
    1762:	08 d0       	rcall	.+16     	; 0x1774 <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1449
    1764:	e4 df       	rcall	.-56     	; 0x172e <__udivmodhi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1450
    1766:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1451
    1768:	05 d0       	rcall	.+10     	; 0x1774 <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1452
    176a:	3e f4       	brtc	.+14     	; 0x177a <__divmodhi4_exit>

0000176c <__divmodhi4_neg1>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1455
    176c:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1456
    176e:	81 95       	neg	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1457
    1770:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1458
    1772:	08 95       	ret

00001774 <__divmodhi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1461
    1774:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1462
    1776:	61 95       	neg	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1463
    1778:	7f 4f       	sbci	r23, 0xFF	; 255

0000177a <__divmodhi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1465
    177a:	08 95       	ret

0000177c <__udivmodsi4>:
__udivmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1639
    177c:	a1 e2       	ldi	r26, 0x21	; 33
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1640
    177e:	1a 2e       	mov	r1, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1641
    1780:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1642
    1782:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1643
    1784:	fd 01       	movw	r30, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1645
    1786:	0d c0       	rjmp	.+26     	; 0x17a2 <__udivmodsi4_ep>

00001788 <__udivmodsi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1647
    1788:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1648
    178a:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1649
    178c:	ee 1f       	adc	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1650
    178e:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1651
    1790:	a2 17       	cp	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1652
    1792:	b3 07       	cpc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1653
    1794:	e4 07       	cpc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1654
    1796:	f5 07       	cpc	r31, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1655
    1798:	20 f0       	brcs	.+8      	; 0x17a2 <__udivmodsi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1656
    179a:	a2 1b       	sub	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1657
    179c:	b3 0b       	sbc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1658
    179e:	e4 0b       	sbc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1659
    17a0:	f5 0b       	sbc	r31, r21

000017a2 <__udivmodsi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1661
    17a2:	66 1f       	adc	r22, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1662
    17a4:	77 1f       	adc	r23, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1663
    17a6:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1664
    17a8:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1665
    17aa:	1a 94       	dec	r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1666
    17ac:	69 f7       	brne	.-38     	; 0x1788 <__udivmodsi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1668
    17ae:	60 95       	com	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1669
    17b0:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1670
    17b2:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1671
    17b4:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1673
    17b6:	9b 01       	movw	r18, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1675
    17b8:	ac 01       	movw	r20, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1677
    17ba:	bd 01       	movw	r22, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1679
    17bc:	cf 01       	movw	r24, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1681
    17be:	08 95       	ret

000017c0 <__divmodsi4>:
__divmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1687
    17c0:	05 2e       	mov	r0, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1688
    17c2:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1689
    17c4:	16 f4       	brtc	.+4      	; 0x17ca <__divmodsi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1690
    17c6:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1691
    17c8:	0f d0       	rcall	.+30     	; 0x17e8 <__negsi2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1693
    17ca:	57 fd       	sbrc	r21, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1694
    17cc:	05 d0       	rcall	.+10     	; 0x17d8 <__divmodsi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1695
    17ce:	d6 df       	rcall	.-84     	; 0x177c <__udivmodsi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1696
    17d0:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1697
    17d2:	02 d0       	rcall	.+4      	; 0x17d8 <__divmodsi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1698
    17d4:	46 f4       	brtc	.+16     	; 0x17e6 <__divmodsi4_exit>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1699
    17d6:	08 c0       	rjmp	.+16     	; 0x17e8 <__negsi2>

000017d8 <__divmodsi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1702
    17d8:	50 95       	com	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1703
    17da:	40 95       	com	r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1704
    17dc:	30 95       	com	r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1705
    17de:	21 95       	neg	r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1706
    17e0:	3f 4f       	sbci	r19, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1707
    17e2:	4f 4f       	sbci	r20, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1708
    17e4:	5f 4f       	sbci	r21, 0xFF	; 255

000017e6 <__divmodsi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1710
    17e6:	08 95       	ret

000017e8 <__negsi2>:
__negsi2():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1719
    17e8:	90 95       	com	r25
    17ea:	80 95       	com	r24
    17ec:	70 95       	com	r23
    17ee:	61 95       	neg	r22
    17f0:	7f 4f       	sbci	r23, 0xFF	; 255
    17f2:	8f 4f       	sbci	r24, 0xFF	; 255
    17f4:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1720
    17f6:	08 95       	ret

000017f8 <__tablejump2__>:
__tablejump2__():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2297
    17f8:	ee 0f       	add	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2298
    17fa:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2329
    17fc:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2330
    17fe:	f4 91       	lpm	r31, Z
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2331
    1800:	e0 2d       	mov	r30, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2332
    1802:	09 94       	ijmp

00001804 <random_r>:
random_r():
    1804:	8f 92       	push	r8
    1806:	9f 92       	push	r9
    1808:	af 92       	push	r10
    180a:	bf 92       	push	r11
    180c:	cf 92       	push	r12
    180e:	df 92       	push	r13
    1810:	ef 92       	push	r14
    1812:	ff 92       	push	r15
    1814:	cf 93       	push	r28
    1816:	df 93       	push	r29
    1818:	ec 01       	movw	r28, r24
    181a:	68 81       	ld	r22, Y
    181c:	79 81       	ldd	r23, Y+1	; 0x01
    181e:	8a 81       	ldd	r24, Y+2	; 0x02
    1820:	9b 81       	ldd	r25, Y+3	; 0x03
    1822:	61 15       	cp	r22, r1
    1824:	71 05       	cpc	r23, r1
    1826:	81 05       	cpc	r24, r1
    1828:	91 05       	cpc	r25, r1
    182a:	21 f4       	brne	.+8      	; 0x1834 <random_r+0x30>
    182c:	64 e2       	ldi	r22, 0x24	; 36
    182e:	79 ed       	ldi	r23, 0xD9	; 217
    1830:	8b e5       	ldi	r24, 0x5B	; 91
    1832:	97 e0       	ldi	r25, 0x07	; 7
    1834:	2d e1       	ldi	r18, 0x1D	; 29
    1836:	33 ef       	ldi	r19, 0xF3	; 243
    1838:	41 e0       	ldi	r20, 0x01	; 1
    183a:	50 e0       	ldi	r21, 0x00	; 0
    183c:	c1 df       	rcall	.-126    	; 0x17c0 <__divmodsi4>
    183e:	49 01       	movw	r8, r18
    1840:	5a 01       	movw	r10, r20
    1842:	27 ea       	ldi	r18, 0xA7	; 167
    1844:	31 e4       	ldi	r19, 0x41	; 65
    1846:	40 e0       	ldi	r20, 0x00	; 0
    1848:	50 e0       	ldi	r21, 0x00	; 0
    184a:	58 df       	rcall	.-336    	; 0x16fc <__mulsi3>
    184c:	6b 01       	movw	r12, r22
    184e:	7c 01       	movw	r14, r24
    1850:	2c ee       	ldi	r18, 0xEC	; 236
    1852:	34 ef       	ldi	r19, 0xF4	; 244
    1854:	4f ef       	ldi	r20, 0xFF	; 255
    1856:	5f ef       	ldi	r21, 0xFF	; 255
    1858:	c5 01       	movw	r24, r10
    185a:	b4 01       	movw	r22, r8
    185c:	4f df       	rcall	.-354    	; 0x16fc <__mulsi3>
    185e:	dc 01       	movw	r26, r24
    1860:	cb 01       	movw	r24, r22
    1862:	8c 0d       	add	r24, r12
    1864:	9d 1d       	adc	r25, r13
    1866:	ae 1d       	adc	r26, r14
    1868:	bf 1d       	adc	r27, r15
    186a:	b7 ff       	sbrs	r27, 7
    186c:	03 c0       	rjmp	.+6      	; 0x1874 <random_r+0x70>
    186e:	01 97       	sbiw	r24, 0x01	; 1
    1870:	a1 09       	sbc	r26, r1
    1872:	b0 48       	sbci	r27, 0x80	; 128
    1874:	88 83       	st	Y, r24
    1876:	99 83       	std	Y+1, r25	; 0x01
    1878:	aa 83       	std	Y+2, r26	; 0x02
    187a:	bb 83       	std	Y+3, r27	; 0x03
    187c:	bc 01       	movw	r22, r24
    187e:	cd 01       	movw	r24, r26
    1880:	9f 77       	andi	r25, 0x7F	; 127
    1882:	df 91       	pop	r29
    1884:	cf 91       	pop	r28
    1886:	ff 90       	pop	r15
    1888:	ef 90       	pop	r14
    188a:	df 90       	pop	r13
    188c:	cf 90       	pop	r12
    188e:	bf 90       	pop	r11
    1890:	af 90       	pop	r10
    1892:	9f 90       	pop	r9
    1894:	8f 90       	pop	r8
    1896:	08 95       	ret

00001898 <random>:
random():
    1898:	8f 92       	push	r8
    189a:	9f 92       	push	r9
    189c:	af 92       	push	r10
    189e:	bf 92       	push	r11
    18a0:	cf 92       	push	r12
    18a2:	df 92       	push	r13
    18a4:	ef 92       	push	r14
    18a6:	ff 92       	push	r15
    18a8:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__data_start>
    18ac:	70 91 61 00 	lds	r23, 0x0061	; 0x800061 <__data_start+0x1>
    18b0:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__data_start+0x2>
    18b4:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <__data_start+0x3>
    18b8:	61 15       	cp	r22, r1
    18ba:	71 05       	cpc	r23, r1
    18bc:	81 05       	cpc	r24, r1
    18be:	91 05       	cpc	r25, r1
    18c0:	21 f4       	brne	.+8      	; 0x18ca <random+0x32>
    18c2:	64 e2       	ldi	r22, 0x24	; 36
    18c4:	79 ed       	ldi	r23, 0xD9	; 217
    18c6:	8b e5       	ldi	r24, 0x5B	; 91
    18c8:	97 e0       	ldi	r25, 0x07	; 7
    18ca:	2d e1       	ldi	r18, 0x1D	; 29
    18cc:	33 ef       	ldi	r19, 0xF3	; 243
    18ce:	41 e0       	ldi	r20, 0x01	; 1
    18d0:	50 e0       	ldi	r21, 0x00	; 0
    18d2:	76 df       	rcall	.-276    	; 0x17c0 <__divmodsi4>
    18d4:	49 01       	movw	r8, r18
    18d6:	5a 01       	movw	r10, r20
    18d8:	27 ea       	ldi	r18, 0xA7	; 167
    18da:	31 e4       	ldi	r19, 0x41	; 65
    18dc:	40 e0       	ldi	r20, 0x00	; 0
    18de:	50 e0       	ldi	r21, 0x00	; 0
    18e0:	0d df       	rcall	.-486    	; 0x16fc <__mulsi3>
    18e2:	6b 01       	movw	r12, r22
    18e4:	7c 01       	movw	r14, r24
    18e6:	2c ee       	ldi	r18, 0xEC	; 236
    18e8:	34 ef       	ldi	r19, 0xF4	; 244
    18ea:	4f ef       	ldi	r20, 0xFF	; 255
    18ec:	5f ef       	ldi	r21, 0xFF	; 255
    18ee:	c5 01       	movw	r24, r10
    18f0:	b4 01       	movw	r22, r8
    18f2:	04 df       	rcall	.-504    	; 0x16fc <__mulsi3>
    18f4:	dc 01       	movw	r26, r24
    18f6:	cb 01       	movw	r24, r22
    18f8:	8c 0d       	add	r24, r12
    18fa:	9d 1d       	adc	r25, r13
    18fc:	ae 1d       	adc	r26, r14
    18fe:	bf 1d       	adc	r27, r15
    1900:	b7 ff       	sbrs	r27, 7
    1902:	03 c0       	rjmp	.+6      	; 0x190a <random+0x72>
    1904:	01 97       	sbiw	r24, 0x01	; 1
    1906:	a1 09       	sbc	r26, r1
    1908:	b0 48       	sbci	r27, 0x80	; 128
    190a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__data_start>
    190e:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__data_start+0x1>
    1912:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <__data_start+0x2>
    1916:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <__data_start+0x3>
    191a:	bc 01       	movw	r22, r24
    191c:	cd 01       	movw	r24, r26
    191e:	9f 77       	andi	r25, 0x7F	; 127
    1920:	ff 90       	pop	r15
    1922:	ef 90       	pop	r14
    1924:	df 90       	pop	r13
    1926:	cf 90       	pop	r12
    1928:	bf 90       	pop	r11
    192a:	af 90       	pop	r10
    192c:	9f 90       	pop	r9
    192e:	8f 90       	pop	r8
    1930:	08 95       	ret

00001932 <srandom>:
srandom():
    1932:	60 93 60 00 	sts	0x0060, r22	; 0x800060 <__data_start>
    1936:	70 93 61 00 	sts	0x0061, r23	; 0x800061 <__data_start+0x1>
    193a:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__data_start+0x2>
    193e:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <__data_start+0x3>
    1942:	08 95       	ret

00001944 <_exit>:
exit():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2279
    1944:	f8 94       	cli

00001946 <__stop_program>:
__stop_program():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2281
    1946:	ff cf       	rjmp	.-2      	; 0x1946 <__stop_program>
